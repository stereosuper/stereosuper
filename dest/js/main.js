<<<<<<< HEAD
!function t(e,i,n){function r(o,a){if(!i[o]){if(!e[o]){var l="function"==typeof require&&require;if(!a&&l)return l(o,!0);if(s)return s(o,!0);var u=new Error("Cannot find module '"+o+"'");throw u.code="MODULE_NOT_FOUND",u}var h=i[o]={exports:{}};e[o][0].call(h.exports,function(t){var i=e[o][1][t];return r(i?i:t)},h,h.exports,t,e,i,n)}return i[o].exports}for(var s="function"==typeof require&&require,o=0;o<n.length;o++)r(n[o]);return r}({1:[function(t,e,i){var n=t("./libs/jquery/dist/jquery.min.js"),r=t("./isMobile.min.js");window.requestAnimFrame=t("./requestAnimFrame.js");var s=t("./detectScrollDir.js");e.exports=function(t,e,i,o){function a(){t=n(document).scrollTop(),t!==l&&(u=s(t,l),o=n("#skillsHome"),i.hasClass("scrolled")&&t>o.data("top")+200&&o.is(":visible")||!e.hasClass("home")?u>0?i.removeClass("off"):u<0&&i.addClass("off"):i.removeClass("off")),l=t,requestAnimFrame(a)}var l=t,u=0;r.any||a()}},{"./detectScrollDir.js":7,"./isMobile.min.js":9,"./libs/jquery/dist/jquery.min.js":14,"./requestAnimFrame.js":18}],2:[function(t,e,i){var n=t("./libs/jquery/dist/jquery.min.js"),r=t("./stringToArray.js");e.exports=function(t){var e,i,s=n(".portfolio-item"),o=n(".skill");t.on("mouseenter",".skill",function(){e=n(this).data("skill"),s.each(function(){i=r(n(this).data("skill")),i.indexOf(e)<0&&n(this).addClass("off")})}).on("mouseleave",".skill",function(){s.removeClass("off")}),t.on("mouseenter",".portfolio-item",function(){i=r(n(this).data("skill")),o.each(function(){e=n(this).data("skill"),i.indexOf(e)<0&&n(this).addClass("off")})}).on("mouseleave",".portfolio-item",function(){o.removeClass("off")})}},{"./libs/jquery/dist/jquery.min.js":14,"./stringToArray.js":20}],3:[function(t,e,i){var n=t("./libs/jquery/dist/jquery.min.js"),r=t("./isMobile.min.js");window.requestAnimFrame=t("./requestAnimFrame.js");var s=t("./detectScrollDir.js");e.exports=function(t,e,i,o){function a(){t=n(document).scrollTop(),t!==l&&(u=s(t,l),o=n("#skillsHome"),i.hasClass("scrolled")&&t>o.data("top")&&o.is(":visible")?(o.addClass("fixed").removeClass("top"),u<0&&i.hasClass("off")&&o.addClass("top").addClass("down")):o.removeClass("fixed").removeClass("top").removeClass("down")),l=t,requestAnimFrame(a)}var l=t,u=0,h=!!e.hasClass("home");return h&&!r.any&&(a(),o.on("mouseenter",function(){n(this).hasClass("top")&&(i.removeClass("off"),n(this).removeClass("top").addClass("down"))}).on("mouseleave",function(){!n(this).hasClass("top")&&i.hasClass("scrolled")&&(i.addClass("off"),n(this).addClass("top").removeClass("down"))}),i.on("mouseenter",function(){n(this).removeClass("off"),o.removeClass("top").addClass("down")})),h}},{"./detectScrollDir.js":7,"./isMobile.min.js":9,"./libs/jquery/dist/jquery.min.js":14,"./requestAnimFrame.js":18}],4:[function(t,e,i){var n=t("./libs/jquery/dist/jquery.min.js"),r=t("./stringToArray.js");e.exports=function(){var t,e=n("#writting"),i=r(e.data("text")),s=0,o=0;!function n(){t=i[o].slice(0,s++),e.html(t),t===i[o]?(o===i.length-1?o=0:o++,s=0,setTimeout(n,2e3)):setTimeout(n,70)}()}},{"./libs/jquery/dist/jquery.min.js":14,"./stringToArray.js":20}],5:[function(t,e,i){var n=t("./libs/jquery/dist/jquery.min.js");t("./libs/gsap/src/uncompressed/TweenMax.js"),t("./isMobile.min.js");window.requestAnimFrame=t("./requestAnimFrame.js"),e.exports=function(t,e,i,r){function s(){o=n("#video"),t=n(document).scrollTop(),e.hasClass("home")&&(t>50?(o.addClass("off"),i.addClass("scrolled"),o.find("video").get(0).pause()):(o.removeClass("off"),o.find("video").get(0).play(),i.removeClass("scrolled"))),requestAnimFrame(s)}var o,a=!!e.hasClass("home");return a&&s(),a}},{"./isMobile.min.js":9,"./libs/gsap/src/uncompressed/TweenMax.js":13,"./libs/jquery/dist/jquery.min.js":14,"./requestAnimFrame.js":18}],6:[function(t,e,i){var n=t("./libs/jquery/dist/jquery.min.js");e.exports=function(t){function e(t,e,i){setTimeout(function(){t.html(e+i)},200*i)}var i,r,s,o,a,l,u,h,c,f=n("#year"),p=n("[data-year]"),d="",_="";p.each(function(t){0===t?(r=n(this).offset().top-55|0,_="top:"+r+"px"):1===t&&(_+=";opacity:0"),a=t>0?p.eq(t-1).data("year"):n(this).data("year"),d+='<div class="year" data-top="'+(n(this).offset().top-55|0)+'" style="'+_+'" data-year="'+n(this).data("year")+'">'+a+"</div>"}),f.append(d),i=f.find(".year"),n(document).on("scroll",function(){t=n(this).scrollTop(),i.each(function(){if(s=n(this),o=s.data("top"),l=isNaN(parseInt(s.html()))?s.html():parseInt(s.html()),c=s.data("year"),s.hasClass("fixed"))t+r-1<o&&s.css("top",r+"px").removeClass("fixed").html(c).data("year",l);else if(s.offset().top-1>=o)if(s.css("top",o+"px").addClass("fixed"),"now"===c)s.html(c).data("year",l);else for(u=c-l,h=1,s.data("year",l),h;h<=u;h++)e(s,l,h)})}),n(window).on("resize",function(){i.each(function(t){s=n(this),0===t&&(r=p.eq(t).offset().top-55|0),s.data("top",p.eq(t).offset().top-55|0).css({top:r,opacity:0}).removeClass("fixed")})})}},{"./libs/jquery/dist/jquery.min.js":14}],7:[function(t,e,i){e.exports=function(t,e,i){return i=t>e?-1:t<e?1:0}},{}],8:[function(t,e,i){t("./libs/jquery/dist/jquery.min.js");e.exports=function(t){var e=t.offset().top;return t.css("transform").indexOf("(")>0&&(e+=-parseInt(t.css("transform").split(/[()]/)[1].split(",")[5])),Math.round(e)}},{"./libs/jquery/dist/jquery.min.js":14}],9:[function(t,e,i){!function(t){var i=/iPhone/i,n=/iPod/i,r=/iPad/i,s=/(?=.*\bAndroid\b)(?=.*\bMobile\b)/i,o=/Android/i,a=/(?=.*\bAndroid\b)(?=.*\bSD4930UR\b)/i,l=/(?=.*\bAndroid\b)(?=.*\b(?:KFOT|KFTT|KFJWI|KFJWA|KFSOWI|KFTHWI|KFTHWA|KFAPWI|KFAPWA|KFARWI|KFASWI|KFSAWI|KFSAWA)\b)/i,u=/IEMobile/i,h=/(?=.*\bWindows\b)(?=.*\bARM\b)/i,c=/BlackBerry/i,f=/BB10/i,p=/Opera Mini/i,d=/(CriOS|Chrome)(?=.*\bMobile\b)/i,_=/(?=.*\bFirefox\b)(?=.*\bMobile\b)/i,m=new RegExp("(?:Nexus 7|BNTV250|Kindle Fire|Silk|GT-P1000)","i"),g=function(t,e){return t.test(e)},v=function(t){var e=t||navigator.userAgent,v=e.split("[FBAN");return"undefined"!=typeof v[1]&&(e=v[0]),v=e.split("Twitter"),"undefined"!=typeof v[1]&&(e=v[0]),this.apple={phone:g(i,e),ipod:g(n,e),tablet:!g(i,e)&&g(r,e),device:g(i,e)||g(n,e)||g(r,e)},this.amazon={phone:g(a,e),tablet:!g(a,e)&&g(l,e),device:g(a,e)||g(l,e)},this.android={phone:g(a,e)||g(s,e),tablet:!g(a,e)&&!g(s,e)&&(g(l,e)||g(o,e)),device:g(a,e)||g(l,e)||g(s,e)||g(o,e)},this.windows={phone:g(u,e),tablet:g(h,e),device:g(u,e)||g(h,e)},this.other={blackberry:g(c,e),blackberry10:g(f,e),opera:g(p,e),firefox:g(_,e),chrome:g(d,e),device:g(c,e)||g(f,e)||g(p,e)||g(_,e)||g(d,e)},this.seven_inch=g(m,e),this.any=this.apple.device||this.android.device||this.windows.device||this.other.device||this.seven_inch,this.phone=this.apple.phone||this.android.phone||this.windows.phone,this.tablet=this.apple.tablet||this.android.tablet||this.windows.tablet,"undefined"==typeof window?this:void 0},y=function(){var t=new v;return t.Class=v,t};"undefined"!=typeof e&&e.exports&&"undefined"==typeof window?e.exports=v:"undefined"!=typeof e&&e.exports&&"undefined"!=typeof window?e.exports=y():"function"==typeof define&&define.amd?define("isMobile",[],t.isMobile=y()):t.isMobile=y()}(this)},{}],10:[function(t,e,i){!function(t,n){"object"==typeof i&&"object"==typeof e?e.exports=n():"function"==typeof define&&define.amd?define("Barba",[],n):"object"==typeof i?i.Barba=n():t.Barba=n()}(this,function(){return function(t){function e(n){if(i[n])return i[n].exports;var r=i[n]={exports:{},id:n,loaded:!1};return t[n].call(r.exports,r,r.exports,e),r.loaded=!0,r.exports}var i={};return e.m=t,e.c=i,e.p="http://localhost:8080/dist",e(0)}([function(t,e,i){"function"!=typeof Promise&&(window.Promise=i(1));var n={version:"0.0.10",BaseTransition:i(4),BaseView:i(6),BaseCache:i(8),Dispatcher:i(7),HistoryManager:i(9),Pjax:i(10),Prefetch:i(13),Utils:i(5)};t.exports=n},function(t,e,i){(function(e){!function(i){function n(){}function r(t,e){return function(){t.apply(e,arguments)}}function s(t){if("object"!=typeof this)throw new TypeError("Promises must be constructed via new");if("function"!=typeof t)throw new TypeError("not a function");this._state=0,this._handled=!1,this._value=void 0,this._deferreds=[],c(t,this)}function o(t,e){for(;3===t._state;)t=t._value;return 0===t._state?void t._deferreds.push(e):(t._handled=!0,void p(function(){var i=1===t._state?e.onFulfilled:e.onRejected;if(null===i)return void(1===t._state?a:l)(e.promise,t._value);var n;try{n=i(t._value)}catch(t){return void l(e.promise,t)}a(e.promise,n)}))}function a(t,e){try{if(e===t)throw new TypeError("A promise cannot be resolved with itself.");if(e&&("object"==typeof e||"function"==typeof e)){var i=e.then;if(e instanceof s)return t._state=3,t._value=e,void u(t);if("function"==typeof i)return void c(r(i,e),t)}t._state=1,t._value=e,u(t)}catch(e){l(t,e)}}function l(t,e){t._state=2,t._value=e,u(t)}function u(t){2===t._state&&0===t._deferreds.length&&p(function(){t._handled||d(t._value)});for(var e=0,i=t._deferreds.length;i>e;e++)o(t,t._deferreds[e]);t._deferreds=null}function h(t,e,i){this.onFulfilled="function"==typeof t?t:null,this.onRejected="function"==typeof e?e:null,this.promise=i}function c(t,e){var i=!1;try{t(function(t){i||(i=!0,a(e,t))},function(t){i||(i=!0,l(e,t))})}catch(t){if(i)return;i=!0,l(e,t)}}var f=setTimeout,p="function"==typeof e&&e||function(t){f(t,0)},d=function(t){"undefined"!=typeof console&&console&&console.warn("Possible Unhandled Promise Rejection:",t)};s.prototype.catch=function(t){return this.then(null,t)},s.prototype.then=function(t,e){var i=new this.constructor(n);return o(this,new h(t,e,i)),i},s.all=function(t){var e=Array.prototype.slice.call(t);return new s(function(t,i){function n(s,o){try{if(o&&("object"==typeof o||"function"==typeof o)){var a=o.then;if("function"==typeof a)return void a.call(o,function(t){n(s,t)},i)}e[s]=o,0===--r&&t(e)}catch(t){i(t)}}if(0===e.length)return t([]);for(var r=e.length,s=0;s<e.length;s++)n(s,e[s])})},s.resolve=function(t){return t&&"object"==typeof t&&t.constructor===s?t:new s(function(e){e(t)})},s.reject=function(t){return new s(function(e,i){i(t)})},s.race=function(t){return new s(function(e,i){for(var n=0,r=t.length;r>n;n++)t[n].then(e,i)})},s._setImmediateFn=function(t){p=t},s._setUnhandledRejectionFn=function(t){d=t},"undefined"!=typeof t&&t.exports?t.exports=s:i.Promise||(i.Promise=s)}(this)}).call(e,i(2).setImmediate)},function(t,e,i){(function(t,n){function r(t,e){this._id=t,this._clearFn=e}var s=i(3).nextTick,o=Function.prototype.apply,a=Array.prototype.slice,l={},u=0;e.setTimeout=function(){return new r(o.call(setTimeout,window,arguments),clearTimeout)},e.setInterval=function(){return new r(o.call(setInterval,window,arguments),clearInterval)},e.clearTimeout=e.clearInterval=function(t){t.close()},r.prototype.unref=r.prototype.ref=function(){},r.prototype.close=function(){this._clearFn.call(window,this._id)},e.enroll=function(t,e){clearTimeout(t._idleTimeoutId),t._idleTimeout=e},e.unenroll=function(t){clearTimeout(t._idleTimeoutId),t._idleTimeout=-1},e._unrefActive=e.active=function(t){clearTimeout(t._idleTimeoutId);var e=t._idleTimeout;e>=0&&(t._idleTimeoutId=setTimeout(function(){t._onTimeout&&t._onTimeout()},e))},e.setImmediate="function"==typeof t?t:function(t){var i=u++,n=!(arguments.length<2)&&a.call(arguments,1);return l[i]=!0,s(function(){l[i]&&(n?t.apply(null,n):t.call(null),e.clearImmediate(i))}),i},e.clearImmediate="function"==typeof n?n:function(t){delete l[t]}}).call(e,i(2).setImmediate,i(2).clearImmediate)},function(t,e){function i(){u&&o&&(u=!1,o.length?l=o.concat(l):h=-1,l.length&&n())}function n(){if(!u){var t=setTimeout(i);u=!0;for(var e=l.length;e;){for(o=l,l=[];++h<e;)o&&o[h].run();h=-1,e=l.length}o=null,u=!1,clearTimeout(t)}}function r(t,e){this.fun=t,this.array=e}function s(){}var o,a=t.exports={},l=[],u=!1,h=-1;a.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var i=1;i<arguments.length;i++)e[i-1]=arguments[i];l.push(new r(t,e)),1!==l.length||u||setTimeout(n,0)},r.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=s,a.addListener=s,a.once=s,a.off=s,a.removeListener=s,a.removeAllListeners=s,a.emit=s,a.binding=function(t){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(t){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},function(t,e,i){var n=i(5),r={oldContainer:void 0,newContainer:void 0,newContainerLoading:void 0,extend:function(t){return n.extend(this,t)},init:function(t,e){var i=this;return this.oldContainer=t,this._newContainerPromise=e,this.deferred=n.deferred(),this.newContainerReady=n.deferred(),this.newContainerLoading=this.newContainerReady.promise,this.start(),this._newContainerPromise.then(function(t){i.newContainer=t,i.newContainerReady.resolve()}),this.deferred.promise},done:function(){this.oldContainer.parentNode.removeChild(this.oldContainer),this.newContainer.style.visibility="visible",this.deferred.resolve()},start:function(){}};t.exports=r},function(t,e){var i={getCurrentUrl:function(){return window.location.protocol+"//"+window.location.host+window.location.pathname+window.location.search},cleanLink:function(t){return t.replace(/#.*/,"")},xhrTimeout:5e3,xhr:function(t){var e=this.deferred(),i=new XMLHttpRequest;return i.onreadystatechange=function(){return 4===i.readyState?200===i.status?e.resolve(i.responseText):e.reject(new Error("xhr: HTTP code is not 200")):void 0},i.ontimeout=function(){return e.reject(new Error("xhr: Timeout exceeded"))},i.open("GET",t),i.timeout=this.xhrTimeout,i.setRequestHeader("x-barba","yes"),i.send(),e.promise},extend:function(t,e){var i=Object.create(t);for(var n in e)e.hasOwnProperty(n)&&(i[n]=e[n]);return i},deferred:function(){return new function(){this.resolve=null,this.reject=null,this.promise=new Promise(function(t,e){this.resolve=t,this.reject=e}.bind(this))}},getPort:function(t){var e="undefined"!=typeof t?t:window.location.port,i=window.location.protocol;return""!=e?parseInt(e):"http:"===i?80:"https:"===i?443:void 0}};t.exports=i},function(t,e,i){var n=i(7),r=i(5),s={namespace:null,extend:function(t){return r.extend(this,t)},init:function(){var t=this;n.on("initStateChange",function(e,i){i&&i.namespace===t.namespace&&t.onLeave()}),n.on("newPageReady",function(e,i,n){t.container=n,e.namespace===t.namespace&&t.onEnter()}),n.on("transitionCompleted",function(e,i){e.namespace===t.namespace&&t.onEnterCompleted(),i&&i.namespace===t.namespace&&t.onLeaveCompleted()})},onEnter:function(){},onEnterCompleted:function(){},onLeave:function(){},onLeaveCompleted:function(){}};t.exports=s},function(t,e){var i={events:{},on:function(t,e){this.events[t]=this.events[t]||[],this.events[t].push(e)},off:function(t,e){t in this.events!=0&&this.events[t].splice(this.events[t].indexOf(e),1)},trigger:function(t){if(t in this.events!=0)for(var e=0;e<this.events[t].length;e++)this.events[t][e].apply(this,Array.prototype.slice.call(arguments,1))}};t.exports=i},function(t,e,i){var n=i(5),r={data:{},extend:function(t){return n.extend(this,t)},set:function(t,e){this.data[t]=e},get:function(t){return this.data[t]},reset:function(){this.data={}}};t.exports=r},function(t,e){var i={history:[],add:function(t,e){e||(e=void 0),this.history.push({url:t,namespace:e})},currentStatus:function(){return this.history[this.history.length-1]},prevStatus:function(){var t=this.history;return t.length<2?null:t[t.length-2]}};t.exports=i},function(t,e,i){var n=i(5),r=i(7),s=i(11),o=i(8),a=i(9),l=i(12),u={Dom:l,History:a,Cache:o,cacheEnabled:!0,transitionProgress:!1,ignoreClassLink:"no-barba",start:function(){this.init()},init:function(){var t=this.Dom.getContainer(),e=this.Dom.getWrapper();e.setAttribute("aria-live","polite"),this.History.add(this.getCurrentUrl(),this.Dom.getNamespace(t)),r.trigger("initStateChange",this.History.currentStatus()),r.trigger("newPageReady",this.History.currentStatus(),{},t),r.trigger("transitionCompleted",this.History.currentStatus()),this.bindEvents()},bindEvents:function(){document.addEventListener("click",this.onLinkClick.bind(this)),window.addEventListener("popstate",this.onStateChange.bind(this))},getCurrentUrl:function(){return n.cleanLink(n.getCurrentUrl())},goTo:function(t){window.history.pushState(null,null,t),this.onStateChange()},forceGoTo:function(t){window.location=t},load:function(t){var e,i=n.deferred(),r=this;return e=this.Cache.get(t),e||(e=n.xhr(t),this.Cache.set(t,e)),e.then(function(t){var e=r.Dom.parseResponse(t);r.Dom.putContainer(e),r.cacheEnabled||r.Cache.reset(),i.resolve(e)},function(){r.forceGoTo(t),i.reject()}),i.promise},onLinkClick:function(t){for(var e=t.target;e&&!e.href;)e=e.parentNode;this.preventCheck(t,e)&&(t.stopPropagation(),t.preventDefault(),r.trigger("linkClicked",e),this.goTo(e.href))},preventCheck:function(t,e){return!!(window.history.pushState&&e&&e.href)&&(!(t.which>1||t.metaKey||t.ctrlKey||t.shiftKey||t.altKey)&&((!e.target||"_blank"!==e.target)&&(window.location.protocol===e.protocol&&window.location.hostname===e.hostname&&(n.getPort()===n.getPort(e.port)&&(!(e.href.indexOf("#")>-1)&&(n.cleanLink(e.href)!=n.cleanLink(location.href)&&!e.classList.contains(this.ignoreClassLink)))))))},getTransition:function(){return s},onStateChange:function(){var t=this.getCurrentUrl();if(this.transitionProgress&&this.forceGoTo(t),this.History.currentStatus().url===t)return!1;this.History.add(t);var e=this.load(t),i=Object.create(this.getTransition());this.transitionProgress=!0,r.trigger("initStateChange",this.History.currentStatus(),this.History.prevStatus());var n=i.init(this.Dom.getContainer(),e);e.then(this.onNewContainerLoaded.bind(this)),n.then(this.onTransitionEnd.bind(this))},onNewContainerLoaded:function(t){var e=this.History.currentStatus();e.namespace=this.Dom.getNamespace(t),r.trigger("newPageReady",this.History.currentStatus(),this.History.prevStatus(),t)},onTransitionEnd:function(){this.transitionProgress=!1,r.trigger("transitionCompleted",this.History.currentStatus(),this.History.prevStatus())}};t.exports=u},function(t,e,i){var n=i(4),r=n.extend({start:function(){this.newContainerLoading.then(this.finish.bind(this))},finish:function(){document.body.scrollTop=0,this.done()}});t.exports=r},function(t,e){var i={dataNamespace:"namespace",wrapperId:"barba-wrapper",containerClass:"barba-container",parseResponse:function(t){var e=document.createElement("div");e.innerHTML=t;var i=e.querySelector("title");return i&&(document.title=i.textContent),this.getContainer(e)},getWrapper:function(){var t=document.getElementById(this.wrapperId);if(!t)throw new Error("Barba.js: wrapper not found!");return t},getContainer:function(t){if(t||(t=document.body),!t)throw new Error("Barba.js: DOM not ready!");var e=this.parseContainer(t);if(e&&e.jquery&&(e=e[0]),!e)throw new Error("Barba.js: no container found");return e},getNamespace:function(t){return t&&t.dataset?t.dataset[this.dataNamespace]:t?t.getAttribute("data-"+this.dataNamespace):null},putContainer:function(t){t.style.visibility="hidden";var e=this.getWrapper();e.appendChild(t)},parseContainer:function(t){return t.querySelector("."+this.containerClass)}};t.exports=i},function(t,e,i){var n=i(5),r=i(10),s={ignoreClassLink:"no-barba-prefetch",init:function(){return!!window.history.pushState&&(document.body.addEventListener("mouseover",this.onLinkEnter.bind(this)),void document.body.addEventListener("touchstart",this.onLinkEnter.bind(this)))},onLinkEnter:function(t){for(var e=t.target;e&&!e.href;)e=e.parentNode;if(e&&!e.classList.contains(this.ignoreClassLink)){var i=e.href;if(r.preventCheck(t,e)&&!r.Cache.get(i)){var s=n.xhr(i);r.Cache.set(i,s)}}}};t.exports=s}])})},{}],11:[function(t,e,i){(function(i){var n="undefined"!=typeof e&&e.exports&&"undefined"!=typeof i?i:this||window;(n._gsQueue||(n._gsQueue=[])).push(function(){"use strict";n._gsDefine("TimelineMax",["TimelineLite","TweenLite","easing.Ease"],function(t,e,i){var r=function(e){t.call(this,e),this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._cycle=0,this._yoyo=this.vars.yoyo===!0,this._dirty=!0},s=1e-10,o=e._internals,a=o.lazyTweens,l=o.lazyRender,u=n._gsDefine.globals,h=new i(null,null,1,0),c=r.prototype=new t;return c.constructor=r,c.kill()._gc=!1,r.version="1.19.0",c.invalidate=function(){return this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._uncache(!0),t.prototype.invalidate.call(this)},c.addCallback=function(t,i,n,r){return this.add(e.delayedCall(0,t,n,r),i)},c.removeCallback=function(t,e){if(t)if(null==e)this._kill(null,t);else for(var i=this.getTweensOf(t,!1),n=i.length,r=this._parseTimeOrLabel(e);--n>-1;)i[n]._startTime===r&&i[n]._enabled(!1,!1);return this},c.removePause=function(e){return this.removeCallback(t._internals.pauseCallback,e)},c.tweenTo=function(t,i){i=i||{};var n,r,s,o={ease:h,useFrames:this.usesFrames(),immediateRender:!1},a=i.repeat&&u.TweenMax||e;for(r in i)o[r]=i[r];return o.time=this._parseTimeOrLabel(t),n=Math.abs(Number(o.time)-this._time)/this._timeScale||.001,s=new a(this,n,o),o.onStart=function(){s.target.paused(!0),s.vars.time!==s.target.time()&&n===s.duration()&&s.duration(Math.abs(s.vars.time-s.target.time())/s.target._timeScale),i.onStart&&s._callback("onStart")},s},c.tweenFromTo=function(t,e,i){i=i||{},t=this._parseTimeOrLabel(t),i.startAt={onComplete:this.seek,onCompleteParams:[t],callbackScope:this},i.immediateRender=i.immediateRender!==!1;var n=this.tweenTo(e,i);return n.duration(Math.abs(n.vars.time-t)/this._timeScale||.001)},c.render=function(t,e,i){this._gc&&this._enabled(!0,!1);var n,r,o,u,h,c,f,p,d=this._dirty?this.totalDuration():this._totalDuration,_=this._duration,m=this._time,g=this._totalTime,v=this._startTime,y=this._timeScale,T=this._rawPrevTime,x=this._paused,w=this._cycle;if(t>=d-1e-7)this._locked||(this._totalTime=d,this._cycle=this._repeat),this._reversed||this._hasPausedChild()||(r=!0,u="onComplete",h=!!this._timeline.autoRemoveChildren,0===this._duration&&(t<=0&&t>=-1e-7||T<0||T===s)&&T!==t&&this._first&&(h=!0,T>s&&(u="onReverseComplete"))),this._rawPrevTime=this._duration||!e||t||this._rawPrevTime===t?t:s,this._yoyo&&0!==(1&this._cycle)?this._time=t=0:(this._time=_,t=_+1e-4);else if(t<1e-7)if(this._locked||(this._totalTime=this._cycle=0),this._time=0,(0!==m||0===_&&T!==s&&(T>0||t<0&&T>=0)&&!this._locked)&&(u="onReverseComplete",r=this._reversed),t<0)this._active=!1,this._timeline.autoRemoveChildren&&this._reversed?(h=r=!0,u="onReverseComplete"):T>=0&&this._first&&(h=!0),this._rawPrevTime=t;else{if(this._rawPrevTime=_||!e||t||this._rawPrevTime===t?t:s,0===t&&r)for(n=this._first;n&&0===n._startTime;)n._duration||(r=!1),n=n._next;t=0,this._initted||(h=!0)}else if(0===_&&T<0&&(h=!0),this._time=this._rawPrevTime=t,this._locked||(this._totalTime=t,0!==this._repeat&&(c=_+this._repeatDelay,this._cycle=this._totalTime/c>>0,0!==this._cycle&&this._cycle===this._totalTime/c&&g<=t&&this._cycle--,this._time=this._totalTime-this._cycle*c,this._yoyo&&0!==(1&this._cycle)&&(this._time=_-this._time),this._time>_?(this._time=_,t=_+1e-4):this._time<0?this._time=t=0:t=this._time)),this._hasPause&&!this._forcingPlayhead&&!e){if(t=this._time,t>=m)for(n=this._first;n&&n._startTime<=t&&!f;)n._duration||"isPause"!==n.data||n.ratio||0===n._startTime&&0===this._rawPrevTime||(f=n),n=n._next;else for(n=this._last;n&&n._startTime>=t&&!f;)n._duration||"isPause"===n.data&&n._rawPrevTime>0&&(f=n),n=n._prev;f&&(this._time=t=f._startTime,this._totalTime=t+this._cycle*(this._totalDuration+this._repeatDelay))}if(this._cycle!==w&&!this._locked){var b=this._yoyo&&0!==(1&w),P=b===(this._yoyo&&0!==(1&this._cycle)),C=this._totalTime,k=this._cycle,S=this._rawPrevTime,A=this._time;if(this._totalTime=w*_,this._cycle<w?b=!b:this._totalTime+=_,this._time=m,this._rawPrevTime=0===_?T-1e-4:T,this._cycle=w,this._locked=!0,m=b?0:_,this.render(m,e,0===_),e||this._gc||this.vars.onRepeat&&this._callback("onRepeat"),m!==this._time)return;if(P&&(m=b?_+1e-4:-1e-4,this.render(m,!0,!1)),this._locked=!1,this._paused&&!x)return;this._time=A,this._totalTime=C,this._cycle=k,this._rawPrevTime=S}if(!(this._time!==m&&this._first||i||h||f))return void(g!==this._totalTime&&this._onUpdate&&(e||this._callback("onUpdate")));if(this._initted||(this._initted=!0),this._active||!this._paused&&this._totalTime!==g&&t>0&&(this._active=!0),0===g&&this.vars.onStart&&(0===this._totalTime&&this._totalDuration||e||this._callback("onStart")),p=this._time,p>=m)for(n=this._first;n&&(o=n._next,p===this._time&&(!this._paused||x));)(n._active||n._startTime<=this._time&&!n._paused&&!n._gc)&&(f===n&&this.pause(),n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)),n=o;else for(n=this._last;n&&(o=n._prev,p===this._time&&(!this._paused||x));){if(n._active||n._startTime<=m&&!n._paused&&!n._gc){if(f===n){for(f=n._prev;f&&f.endTime()>this._time;)f.render(f._reversed?f.totalDuration()-(t-f._startTime)*f._timeScale:(t-f._startTime)*f._timeScale,e,i),f=f._prev;f=null,this.pause()}n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)}n=o}this._onUpdate&&(e||(a.length&&l(),this._callback("onUpdate"))),u&&(this._locked||this._gc||v!==this._startTime&&y===this._timeScale||(0===this._time||d>=this.totalDuration())&&(r&&(a.length&&l(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[u]&&this._callback(u)))},c.getActive=function(t,e,i){null==t&&(t=!0),null==e&&(e=!0),null==i&&(i=!1);var n,r,s=[],o=this.getChildren(t,e,i),a=0,l=o.length;for(n=0;n<l;n++)r=o[n],r.isActive()&&(s[a++]=r);return s},c.getLabelAfter=function(t){t||0!==t&&(t=this._time);var e,i=this.getLabelsArray(),n=i.length;for(e=0;e<n;e++)if(i[e].time>t)return i[e].name;return null},c.getLabelBefore=function(t){null==t&&(t=this._time);for(var e=this.getLabelsArray(),i=e.length;--i>-1;)if(e[i].time<t)return e[i].name;return null},c.getLabelsArray=function(){var t,e=[],i=0;for(t in this._labels)e[i++]={time:this._labels[t],name:t};return e.sort(function(t,e){return t.time-e.time}),e},c.progress=function(t,e){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!==(1&this._cycle)?1-t:t)+this._cycle*(this._duration+this._repeatDelay),e):this._time/this.duration()},c.totalProgress=function(t,e){return arguments.length?this.totalTime(this.totalDuration()*t,e):this._totalTime/this.totalDuration()},c.totalDuration=function(e){return arguments.length?this._repeat!==-1&&e?this.timeScale(this.totalDuration()/e):this:(this._dirty&&(t.prototype.totalDuration.call(this),this._totalDuration=this._repeat===-1?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat),this._totalDuration)},c.time=function(t,e){return arguments.length?(this._dirty&&this.totalDuration(),t>this._duration&&(t=this._duration),this._yoyo&&0!==(1&this._cycle)?t=this._duration-t+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(t+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(t,e)):this._time},c.repeat=function(t){return arguments.length?(this._repeat=t,this._uncache(!0)):this._repeat},c.repeatDelay=function(t){return arguments.length?(this._repeatDelay=t,this._uncache(!0)):this._repeatDelay},c.yoyo=function(t){return arguments.length?(this._yoyo=t,this):this._yoyo},c.currentLabel=function(t){return arguments.length?this.seek(t,!0):this.getLabelBefore(this._time+1e-8)},r},!0),n._gsDefine("TimelineLite",["core.Animation","core.SimpleTimeline","TweenLite"],function(t,e,i){var r=function(t){e.call(this,t),this._labels={},this.autoRemoveChildren=this.vars.autoRemoveChildren===!0,this.smoothChildTiming=this.vars.smoothChildTiming===!0,this._sortChildren=!0,this._onUpdate=this.vars.onUpdate;var i,n,r=this.vars;for(n in r)i=r[n],u(i)&&i.join("").indexOf("{self}")!==-1&&(r[n]=this._swapSelfInParams(i));u(r.tweens)&&this.add(r.tweens,0,r.align,r.stagger)},s=1e-10,o=i._internals,a=r._internals={},l=o.isSelector,u=o.isArray,h=o.lazyTweens,c=o.lazyRender,f=n._gsDefine.globals,p=function(t){var e,i={};for(e in t)i[e]=t[e];return i},d=function(t,e,i){var n,r,s=t.cycle;for(n in s)r=s[n],t[n]="function"==typeof r?r.call(e[i],i):r[i%r.length];delete t.cycle},_=a.pauseCallback=function(){},m=function(t){var e,i=[],n=t.length;for(e=0;e!==n;i.push(t[e++]));return i},g=r.prototype=new e;return r.version="1.19.0",g.constructor=r,g.kill()._gc=g._forcingPlayhead=g._hasPause=!1,g.to=function(t,e,n,r){var s=n.repeat&&f.TweenMax||i;return e?this.add(new s(t,e,n),r):this.set(t,n,r)},g.from=function(t,e,n,r){return this.add((n.repeat&&f.TweenMax||i).from(t,e,n),r)},g.fromTo=function(t,e,n,r,s){var o=r.repeat&&f.TweenMax||i;return e?this.add(o.fromTo(t,e,n,r),s):this.set(t,r,s)},g.staggerTo=function(t,e,n,s,o,a,u,h){var c,f,_=new r({onComplete:a,onCompleteParams:u,callbackScope:h,smoothChildTiming:this.smoothChildTiming}),g=n.cycle;for("string"==typeof t&&(t=i.selector(t)||t),t=t||[],l(t)&&(t=m(t)),s=s||0,s<0&&(t=m(t),t.reverse(),s*=-1),f=0;f<t.length;f++)c=p(n),c.startAt&&(c.startAt=p(c.startAt),c.startAt.cycle&&d(c.startAt,t,f)),g&&(d(c,t,f),null!=c.duration&&(e=c.duration,delete c.duration)),_.to(t[f],e,c,f*s);return this.add(_,o)},g.staggerFrom=function(t,e,i,n,r,s,o,a){return i.immediateRender=0!=i.immediateRender,i.runBackwards=!0,this.staggerTo(t,e,i,n,r,s,o,a)},g.staggerFromTo=function(t,e,i,n,r,s,o,a,l){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,this.staggerTo(t,e,n,r,s,o,a,l)},g.call=function(t,e,n,r){return this.add(i.delayedCall(0,t,e,n),r)},g.set=function(t,e,n){return n=this._parseTimeOrLabel(n,0,!0),null==e.immediateRender&&(e.immediateRender=n===this._time&&!this._paused),this.add(new i(t,0,e),n)},r.exportRoot=function(t,e){t=t||{},null==t.smoothChildTiming&&(t.smoothChildTiming=!0);var n,s,o=new r(t),a=o._timeline;for(null==e&&(e=!0),a._remove(o,!0),o._startTime=0,o._rawPrevTime=o._time=o._totalTime=a._time,n=a._first;n;)s=n._next,e&&n instanceof i&&n.target===n.vars.onComplete||o.add(n,n._startTime-n._delay),n=s;return a.add(o,0),o},g.add=function(n,s,o,a){var l,h,c,f,p,d;if("number"!=typeof s&&(s=this._parseTimeOrLabel(s,0,!0,n)),!(n instanceof t)){if(n instanceof Array||n&&n.push&&u(n)){for(o=o||"normal",a=a||0,l=s,h=n.length,c=0;c<h;c++)u(f=n[c])&&(f=new r({tweens:f})),this.add(f,l),"string"!=typeof f&&"function"!=typeof f&&("sequence"===o?l=f._startTime+f.totalDuration()/f._timeScale:"start"===o&&(f._startTime-=f.delay())),l+=a;return this._uncache(!0)}if("string"==typeof n)return this.addLabel(n,s);if("function"!=typeof n)throw"Cannot add "+n+" into the timeline; it is not a tween, timeline, function, or string.";n=i.delayedCall(0,n)}if(e.prototype.add.call(this,n,s),(this._gc||this._time===this._duration)&&!this._paused&&this._duration<this.duration())for(p=this,d=p.rawTime()>n._startTime;p._timeline;)d&&p._timeline.smoothChildTiming?p.totalTime(p._totalTime,!0):p._gc&&p._enabled(!0,!1),p=p._timeline;return this},g.remove=function(e){if(e instanceof t){this._remove(e,!1);var i=e._timeline=e.vars.useFrames?t._rootFramesTimeline:t._rootTimeline;return e._startTime=(e._paused?e._pauseTime:i._time)-(e._reversed?e.totalDuration()-e._totalTime:e._totalTime)/e._timeScale,this}if(e instanceof Array||e&&e.push&&u(e)){for(var n=e.length;--n>-1;)this.remove(e[n]);return this}return"string"==typeof e?this.removeLabel(e):this.kill(null,e)},g._remove=function(t,i){e.prototype._remove.call(this,t,i);var n=this._last;return n?this._time>n._startTime+n._totalDuration/n._timeScale&&(this._time=this.duration(),this._totalTime=this._totalDuration):this._time=this._totalTime=this._duration=this._totalDuration=0,this},g.append=function(t,e){return this.add(t,this._parseTimeOrLabel(null,e,!0,t))},g.insert=g.insertMultiple=function(t,e,i,n){return this.add(t,e||0,i,n)},g.appendMultiple=function(t,e,i,n){return this.add(t,this._parseTimeOrLabel(null,e,!0,t),i,n)},g.addLabel=function(t,e){
return this._labels[t]=this._parseTimeOrLabel(e),this},g.addPause=function(t,e,n,r){var s=i.delayedCall(0,_,n,r||this);return s.vars.onComplete=s.vars.onReverseComplete=e,s.data="isPause",this._hasPause=!0,this.add(s,t)},g.removeLabel=function(t){return delete this._labels[t],this},g.getLabelTime=function(t){return null!=this._labels[t]?this._labels[t]:-1},g._parseTimeOrLabel=function(e,i,n,r){var s;if(r instanceof t&&r.timeline===this)this.remove(r);else if(r&&(r instanceof Array||r.push&&u(r)))for(s=r.length;--s>-1;)r[s]instanceof t&&r[s].timeline===this&&this.remove(r[s]);if("string"==typeof i)return this._parseTimeOrLabel(i,n&&"number"==typeof e&&null==this._labels[i]?e-this.duration():0,n);if(i=i||0,"string"!=typeof e||!isNaN(e)&&null==this._labels[e])null==e&&(e=this.duration());else{if(s=e.indexOf("="),s===-1)return null==this._labels[e]?n?this._labels[e]=this.duration()+i:i:this._labels[e]+i;i=parseInt(e.charAt(s-1)+"1",10)*Number(e.substr(s+1)),e=s>1?this._parseTimeOrLabel(e.substr(0,s-1),0,n):this.duration()}return Number(e)+i},g.seek=function(t,e){return this.totalTime("number"==typeof t?t:this._parseTimeOrLabel(t),e!==!1)},g.stop=function(){return this.paused(!0)},g.gotoAndPlay=function(t,e){return this.play(t,e)},g.gotoAndStop=function(t,e){return this.pause(t,e)},g.render=function(t,e,i){this._gc&&this._enabled(!0,!1);var n,r,o,a,l,u,f,p=this._dirty?this.totalDuration():this._totalDuration,d=this._time,_=this._startTime,m=this._timeScale,g=this._paused;if(t>=p-1e-7)this._totalTime=this._time=p,this._reversed||this._hasPausedChild()||(r=!0,a="onComplete",l=!!this._timeline.autoRemoveChildren,0===this._duration&&(t<=0&&t>=-1e-7||this._rawPrevTime<0||this._rawPrevTime===s)&&this._rawPrevTime!==t&&this._first&&(l=!0,this._rawPrevTime>s&&(a="onReverseComplete"))),this._rawPrevTime=this._duration||!e||t||this._rawPrevTime===t?t:s,t=p+1e-4;else if(t<1e-7)if(this._totalTime=this._time=0,(0!==d||0===this._duration&&this._rawPrevTime!==s&&(this._rawPrevTime>0||t<0&&this._rawPrevTime>=0))&&(a="onReverseComplete",r=this._reversed),t<0)this._active=!1,this._timeline.autoRemoveChildren&&this._reversed?(l=r=!0,a="onReverseComplete"):this._rawPrevTime>=0&&this._first&&(l=!0),this._rawPrevTime=t;else{if(this._rawPrevTime=this._duration||!e||t||this._rawPrevTime===t?t:s,0===t&&r)for(n=this._first;n&&0===n._startTime;)n._duration||(r=!1),n=n._next;t=0,this._initted||(l=!0)}else{if(this._hasPause&&!this._forcingPlayhead&&!e){if(t>=d)for(n=this._first;n&&n._startTime<=t&&!u;)n._duration||"isPause"!==n.data||n.ratio||0===n._startTime&&0===this._rawPrevTime||(u=n),n=n._next;else for(n=this._last;n&&n._startTime>=t&&!u;)n._duration||"isPause"===n.data&&n._rawPrevTime>0&&(u=n),n=n._prev;u&&(this._time=t=u._startTime,this._totalTime=t+this._cycle*(this._totalDuration+this._repeatDelay))}this._totalTime=this._time=this._rawPrevTime=t}if(this._time!==d&&this._first||i||l||u){if(this._initted||(this._initted=!0),this._active||!this._paused&&this._time!==d&&t>0&&(this._active=!0),0===d&&this.vars.onStart&&(0===this._time&&this._duration||e||this._callback("onStart")),f=this._time,f>=d)for(n=this._first;n&&(o=n._next,f===this._time&&(!this._paused||g));)(n._active||n._startTime<=f&&!n._paused&&!n._gc)&&(u===n&&this.pause(),n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)),n=o;else for(n=this._last;n&&(o=n._prev,f===this._time&&(!this._paused||g));){if(n._active||n._startTime<=d&&!n._paused&&!n._gc){if(u===n){for(u=n._prev;u&&u.endTime()>this._time;)u.render(u._reversed?u.totalDuration()-(t-u._startTime)*u._timeScale:(t-u._startTime)*u._timeScale,e,i),u=u._prev;u=null,this.pause()}n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)}n=o}this._onUpdate&&(e||(h.length&&c(),this._callback("onUpdate"))),a&&(this._gc||_!==this._startTime&&m===this._timeScale||(0===this._time||p>=this.totalDuration())&&(r&&(h.length&&c(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[a]&&this._callback(a)))}},g._hasPausedChild=function(){for(var t=this._first;t;){if(t._paused||t instanceof r&&t._hasPausedChild())return!0;t=t._next}return!1},g.getChildren=function(t,e,n,r){r=r||-9999999999;for(var s=[],o=this._first,a=0;o;)o._startTime<r||(o instanceof i?e!==!1&&(s[a++]=o):(n!==!1&&(s[a++]=o),t!==!1&&(s=s.concat(o.getChildren(!0,e,n)),a=s.length))),o=o._next;return s},g.getTweensOf=function(t,e){var n,r,s=this._gc,o=[],a=0;for(s&&this._enabled(!0,!0),n=i.getTweensOf(t),r=n.length;--r>-1;)(n[r].timeline===this||e&&this._contains(n[r]))&&(o[a++]=n[r]);return s&&this._enabled(!1,!0),o},g.recent=function(){return this._recent},g._contains=function(t){for(var e=t.timeline;e;){if(e===this)return!0;e=e.timeline}return!1},g.shiftChildren=function(t,e,i){i=i||0;for(var n,r=this._first,s=this._labels;r;)r._startTime>=i&&(r._startTime+=t),r=r._next;if(e)for(n in s)s[n]>=i&&(s[n]+=t);return this._uncache(!0)},g._kill=function(t,e){if(!t&&!e)return this._enabled(!1,!1);for(var i=e?this.getTweensOf(e):this.getChildren(!0,!0,!1),n=i.length,r=!1;--n>-1;)i[n]._kill(t,e)&&(r=!0);return r},g.clear=function(t){var e=this.getChildren(!1,!0,!0),i=e.length;for(this._time=this._totalTime=0;--i>-1;)e[i]._enabled(!1,!1);return t!==!1&&(this._labels={}),this._uncache(!0)},g.invalidate=function(){for(var e=this._first;e;)e.invalidate(),e=e._next;return t.prototype.invalidate.call(this)},g._enabled=function(t,i){if(t===this._gc)for(var n=this._first;n;)n._enabled(t,!0),n=n._next;return e.prototype._enabled.call(this,t,i)},g.totalTime=function(e,i,n){this._forcingPlayhead=!0;var r=t.prototype.totalTime.apply(this,arguments);return this._forcingPlayhead=!1,r},g.duration=function(t){return arguments.length?(0!==this.duration()&&0!==t&&this.timeScale(this._duration/t),this):(this._dirty&&this.totalDuration(),this._duration)},g.totalDuration=function(t){if(!arguments.length){if(this._dirty){for(var e,i,n=0,r=this._last,s=999999999999;r;)e=r._prev,r._dirty&&r.totalDuration(),r._startTime>s&&this._sortChildren&&!r._paused?this.add(r,r._startTime-r._delay):s=r._startTime,r._startTime<0&&!r._paused&&(n-=r._startTime,this._timeline.smoothChildTiming&&(this._startTime+=r._startTime/this._timeScale),this.shiftChildren(-r._startTime,!1,-9999999999),s=0),i=r._startTime+r._totalDuration/r._timeScale,i>n&&(n=i),r=e;this._duration=this._totalDuration=n,this._dirty=!1}return this._totalDuration}return t&&this.totalDuration()?this.timeScale(this._totalDuration/t):this},g.paused=function(e){if(!e)for(var i=this._first,n=this._time;i;)i._startTime===n&&"isPause"===i.data&&(i._rawPrevTime=0),i=i._next;return t.prototype.paused.apply(this,arguments)},g.usesFrames=function(){for(var e=this._timeline;e._timeline;)e=e._timeline;return e===t._rootFramesTimeline},g.rawTime=function(){return this._paused?this._totalTime:(this._timeline.rawTime()-this._startTime)*this._timeScale},r},!0)}),n._gsDefine&&n._gsQueue.pop()(),function(i){"use strict";var r=function(){return(n.GreenSockGlobals||n)[i]};"function"==typeof define&&define.amd?define(["TweenLite"],r):"undefined"!=typeof e&&e.exports&&(t("./TweenLite.js"),e.exports=r())}("TimelineMax")}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./TweenLite.js":12}],12:[function(t,e,i){(function(t){!function(t,i){"use strict";var n={},r=t.GreenSockGlobals=t.GreenSockGlobals||t;if(!r.TweenLite){var s,o,a,l,u,h=function(t){var e,i=t.split("."),n=r;for(e=0;e<i.length;e++)n[i[e]]=n=n[i[e]]||{};return n},c=h("com.greensock"),f=1e-10,p=function(t){var e,i=[],n=t.length;for(e=0;e!==n;i.push(t[e++]));return i},d=function(){},_=function(){var t=Object.prototype.toString,e=t.call([]);return function(i){return null!=i&&(i instanceof Array||"object"==typeof i&&!!i.push&&t.call(i)===e)}}(),m={},g=function(s,o,a,l){this.sc=m[s]?m[s].sc:[],m[s]=this,this.gsClass=null,this.func=a;var u=[];this.check=function(c){for(var f,p,d,_,v,y=o.length,T=y;--y>-1;)(f=m[o[y]]||new g(o[y],[])).gsClass?(u[y]=f.gsClass,T--):c&&f.sc.push(this);if(0===T&&a){if(p=("com.greensock."+s).split("."),d=p.pop(),_=h(p.join("."))[d]=this.gsClass=a.apply(a,u),l)if(r[d]=n[d]=_,v="undefined"!=typeof e&&e.exports,!v&&"function"==typeof define&&define.amd)define((t.GreenSockAMDPath?t.GreenSockAMDPath+"/":"")+s.split(".").pop(),[],function(){return _});else if(v)if(s===i){e.exports=n[i]=_;for(y in n)_[y]=n[y]}else n[i]&&(n[i][d]=_);for(y=0;y<this.sc.length;y++)this.sc[y].check()}},this.check(!0)},v=t._gsDefine=function(t,e,i,n){return new g(t,e,i,n)},y=c._class=function(t,e,i){return e=e||function(){},v(t,[],function(){return e},i),e};v.globals=r;var T=[0,0,1,1],x=y("easing.Ease",function(t,e,i,n){this._func=t,this._type=i||0,this._power=n||0,this._params=e?T.concat(e):T},!0),w=x.map={},b=x.register=function(t,e,i,n){for(var r,s,o,a,l=e.split(","),u=l.length,h=(i||"easeIn,easeOut,easeInOut").split(",");--u>-1;)for(s=l[u],r=n?y("easing."+s,null,!0):c.easing[s]||{},o=h.length;--o>-1;)a=h[o],w[s+"."+a]=w[a+s]=r[a]=t.getRatio?t:t[a]||new t};for(a=x.prototype,a._calcEnd=!1,a.getRatio=function(t){if(this._func)return this._params[0]=t,this._func.apply(null,this._params);var e=this._type,i=this._power,n=1===e?1-t:2===e?t:t<.5?2*t:2*(1-t);return 1===i?n*=n:2===i?n*=n*n:3===i?n*=n*n*n:4===i&&(n*=n*n*n*n),1===e?1-n:2===e?n:t<.5?n/2:1-n/2},s=["Linear","Quad","Cubic","Quart","Quint,Strong"],o=s.length;--o>-1;)a=s[o]+",Power"+o,b(new x(null,null,1,o),a,"easeOut",!0),b(new x(null,null,2,o),a,"easeIn"+(0===o?",easeNone":"")),b(new x(null,null,3,o),a,"easeInOut");w.linear=c.easing.Linear.easeIn,w.swing=c.easing.Quad.easeInOut;var P=y("events.EventDispatcher",function(t){this._listeners={},this._eventTarget=t||this});a=P.prototype,a.addEventListener=function(t,e,i,n,r){r=r||0;var s,o,a=this._listeners[t],h=0;for(this!==l||u||l.wake(),null==a&&(this._listeners[t]=a=[]),o=a.length;--o>-1;)s=a[o],s.c===e&&s.s===i?a.splice(o,1):0===h&&s.pr<r&&(h=o+1);a.splice(h,0,{c:e,s:i,up:n,pr:r})},a.removeEventListener=function(t,e){var i,n=this._listeners[t];if(n)for(i=n.length;--i>-1;)if(n[i].c===e)return void n.splice(i,1)},a.dispatchEvent=function(t){var e,i,n,r=this._listeners[t];if(r)for(e=r.length,e>1&&(r=r.slice(0)),i=this._eventTarget;--e>-1;)n=r[e],n&&(n.up?n.c.call(n.s||i,{type:t,target:i}):n.c.call(n.s||i))};var C=t.requestAnimationFrame,k=t.cancelAnimationFrame,S=Date.now||function(){return(new Date).getTime()},A=S();for(s=["ms","moz","webkit","o"],o=s.length;--o>-1&&!C;)C=t[s[o]+"RequestAnimationFrame"],k=t[s[o]+"CancelAnimationFrame"]||t[s[o]+"CancelRequestAnimationFrame"];y("Ticker",function(t,e){var i,n,r,s,o,a=this,h=S(),c=!(e===!1||!C)&&"auto",p=500,_=33,m="tick",g=function(t){var e,l,u=S()-A;u>p&&(h+=u-_),A+=u,a.time=(A-h)/1e3,e=a.time-o,(!i||e>0||t===!0)&&(a.frame++,o+=e+(e>=s?.004:s-e),l=!0),t!==!0&&(r=n(g)),l&&a.dispatchEvent(m)};P.call(a),a.time=a.frame=0,a.tick=function(){g(!0)},a.lagSmoothing=function(t,e){p=t||1/f,_=Math.min(e,p,0)},a.sleep=function(){null!=r&&(c&&k?k(r):clearTimeout(r),n=d,r=null,a===l&&(u=!1))},a.wake=function(t){null!==r?a.sleep():t?h+=-A+(A=S()):a.frame>10&&(A=S()-p+5),n=0===i?d:c&&C?C:function(t){return setTimeout(t,1e3*(o-a.time)+1|0)},a===l&&(u=!0),g(2)},a.fps=function(t){return arguments.length?(i=t,s=1/(i||60),o=this.time+s,void a.wake()):i},a.useRAF=function(t){return arguments.length?(a.sleep(),c=t,void a.fps(i)):c},a.fps(t),setTimeout(function(){"auto"===c&&a.frame<5&&"hidden"!==document.visibilityState&&a.useRAF(!1)},1500)}),a=c.Ticker.prototype=new c.events.EventDispatcher,a.constructor=c.Ticker;var O=y("core.Animation",function(t,e){if(this.vars=e=e||{},this._duration=this._totalDuration=t||0,this._delay=Number(e.delay)||0,this._timeScale=1,this._active=e.immediateRender===!0,this.data=e.data,this._reversed=e.reversed===!0,V){u||l.wake();var i=this.vars.useFrames?$:V;i.add(this,i._time),this.vars.paused&&this.paused(!0)}});l=O.ticker=new c.Ticker,a=O.prototype,a._dirty=a._gc=a._initted=a._paused=!1,a._totalTime=a._time=0,a._rawPrevTime=-1,a._next=a._last=a._onUpdate=a._timeline=a.timeline=null,a._paused=!1;var D=function(){u&&S()-A>2e3&&l.wake(),setTimeout(D,2e3)};D(),a.play=function(t,e){return null!=t&&this.seek(t,e),this.reversed(!1).paused(!1)},a.pause=function(t,e){return null!=t&&this.seek(t,e),this.paused(!0)},a.resume=function(t,e){return null!=t&&this.seek(t,e),this.paused(!1)},a.seek=function(t,e){return this.totalTime(Number(t),e!==!1)},a.restart=function(t,e){return this.reversed(!1).paused(!1).totalTime(t?-this._delay:0,e!==!1,!0)},a.reverse=function(t,e){return null!=t&&this.seek(t||this.totalDuration(),e),this.reversed(!0).paused(!1)},a.render=function(t,e,i){},a.invalidate=function(){return this._time=this._totalTime=0,this._initted=this._gc=!1,this._rawPrevTime=-1,!this._gc&&this.timeline||this._enabled(!0),this},a.isActive=function(){var t,e=this._timeline,i=this._startTime;return!e||!this._gc&&!this._paused&&e.isActive()&&(t=e.rawTime())>=i&&t<i+this.totalDuration()/this._timeScale},a._enabled=function(t,e){return u||l.wake(),this._gc=!t,this._active=this.isActive(),e!==!0&&(t&&!this.timeline?this._timeline.add(this,this._startTime-this._delay):!t&&this.timeline&&this._timeline._remove(this,!0)),!1},a._kill=function(t,e){return this._enabled(!1,!1)},a.kill=function(t,e){return this._kill(t,e),this},a._uncache=function(t){for(var e=t?this:this.timeline;e;)e._dirty=!0,e=e.timeline;return this},a._swapSelfInParams=function(t){for(var e=t.length,i=t.concat();--e>-1;)"{self}"===t[e]&&(i[e]=this);return i},a._callback=function(t){var e=this.vars,i=e[t],n=e[t+"Params"],r=e[t+"Scope"]||e.callbackScope||this,s=n?n.length:0;switch(s){case 0:i.call(r);break;case 1:i.call(r,n[0]);break;case 2:i.call(r,n[0],n[1]);break;default:i.apply(r,n)}},a.eventCallback=function(t,e,i,n){if("on"===(t||"").substr(0,2)){var r=this.vars;if(1===arguments.length)return r[t];null==e?delete r[t]:(r[t]=e,r[t+"Params"]=_(i)&&i.join("").indexOf("{self}")!==-1?this._swapSelfInParams(i):i,r[t+"Scope"]=n),"onUpdate"===t&&(this._onUpdate=e)}return this},a.delay=function(t){return arguments.length?(this._timeline.smoothChildTiming&&this.startTime(this._startTime+t-this._delay),this._delay=t,this):this._delay},a.duration=function(t){return arguments.length?(this._duration=this._totalDuration=t,this._uncache(!0),this._timeline.smoothChildTiming&&this._time>0&&this._time<this._duration&&0!==t&&this.totalTime(this._totalTime*(t/this._duration),!0),this):(this._dirty=!1,this._duration)},a.totalDuration=function(t){return this._dirty=!1,arguments.length?this.duration(t):this._totalDuration},a.time=function(t,e){return arguments.length?(this._dirty&&this.totalDuration(),this.totalTime(t>this._duration?this._duration:t,e)):this._time},a.totalTime=function(t,e,i){if(u||l.wake(),!arguments.length)return this._totalTime;if(this._timeline){if(t<0&&!i&&(t+=this.totalDuration()),this._timeline.smoothChildTiming){this._dirty&&this.totalDuration();var n=this._totalDuration,r=this._timeline;if(t>n&&!i&&(t=n),this._startTime=(this._paused?this._pauseTime:r._time)-(this._reversed?n-t:t)/this._timeScale,r._dirty||this._uncache(!1),r._timeline)for(;r._timeline;)r._timeline._time!==(r._startTime+r._totalTime)/r._timeScale&&r.totalTime(r._totalTime,!0),r=r._timeline}this._gc&&this._enabled(!0,!1),this._totalTime===t&&0!==this._duration||(L.length&&G(),this.render(t,e,!1),L.length&&G())}return this},a.progress=a.totalProgress=function(t,e){var i=this.duration();return arguments.length?this.totalTime(i*t,e):i?this._time/i:this.ratio},a.startTime=function(t){return arguments.length?(t!==this._startTime&&(this._startTime=t,this.timeline&&this.timeline._sortChildren&&this.timeline.add(this,t-this._delay)),this):this._startTime},a.endTime=function(t){return this._startTime+(0!=t?this.totalDuration():this.duration())/this._timeScale},a.timeScale=function(t){if(!arguments.length)return this._timeScale;if(t=t||f,this._timeline&&this._timeline.smoothChildTiming){var e=this._pauseTime,i=e||0===e?e:this._timeline.totalTime();this._startTime=i-(i-this._startTime)*this._timeScale/t}return this._timeScale=t,this._uncache(!1)},a.reversed=function(t){return arguments.length?(t!=this._reversed&&(this._reversed=t,this.totalTime(this._timeline&&!this._timeline.smoothChildTiming?this.totalDuration()-this._totalTime:this._totalTime,!0)),this):this._reversed},a.paused=function(t){if(!arguments.length)return this._paused;var e,i,n=this._timeline;return t!=this._paused&&n&&(u||t||l.wake(),e=n.rawTime(),i=e-this._pauseTime,!t&&n.smoothChildTiming&&(this._startTime+=i,this._uncache(!1)),this._pauseTime=t?e:null,this._paused=t,this._active=this.isActive(),!t&&0!==i&&this._initted&&this.duration()&&(e=n.smoothChildTiming?this._totalTime:(e-this._startTime)/this._timeScale,this.render(e,e===this._totalTime,!0))),this._gc&&!t&&this._enabled(!0,!1),this};var R=y("core.SimpleTimeline",function(t){O.call(this,0,t),this.autoRemoveChildren=this.smoothChildTiming=!0});a=R.prototype=new O,a.constructor=R,a.kill()._gc=!1,a._first=a._last=a._recent=null,a._sortChildren=!1,a.add=a.insert=function(t,e,i,n){var r,s;if(t._startTime=Number(e||0)+t._delay,t._paused&&this!==t._timeline&&(t._pauseTime=t._startTime+(this.rawTime()-t._startTime)/t._timeScale),t.timeline&&t.timeline._remove(t,!0),t.timeline=t._timeline=this,t._gc&&t._enabled(!0,!0),r=this._last,this._sortChildren)for(s=t._startTime;r&&r._startTime>s;)r=r._prev;return r?(t._next=r._next,r._next=t):(t._next=this._first,this._first=t),t._next?t._next._prev=t:this._last=t,t._prev=r,this._recent=t,this._timeline&&this._uncache(!0),this},a._remove=function(t,e){return t.timeline===this&&(e||t._enabled(!1,!0),t._prev?t._prev._next=t._next:this._first===t&&(this._first=t._next),t._next?t._next._prev=t._prev:this._last===t&&(this._last=t._prev),t._next=t._prev=t.timeline=null,t===this._recent&&(this._recent=this._last),this._timeline&&this._uncache(!0)),this},a.render=function(t,e,i){var n,r=this._first;for(this._totalTime=this._time=this._rawPrevTime=t;r;)n=r._next,(r._active||t>=r._startTime&&!r._paused)&&(r._reversed?r.render((r._dirty?r.totalDuration():r._totalDuration)-(t-r._startTime)*r._timeScale,e,i):r.render((t-r._startTime)*r._timeScale,e,i)),r=n},a.rawTime=function(){return u||l.wake(),this._totalTime};var j=y("TweenLite",function(e,i,n){if(O.call(this,i,n),this.render=j.prototype.render,null==e)throw"Cannot tween a null target.";this.target=e="string"!=typeof e?e:j.selector(e)||e;var r,s,o,a=e.jquery||e.length&&e!==t&&e[0]&&(e[0]===t||e[0].nodeType&&e[0].style&&!e.nodeType),l=this.vars.overwrite;if(this._overwrite=l=null==l?Y[j.defaultOverwrite]:"number"==typeof l?l>>0:Y[l],(a||e instanceof Array||e.push&&_(e))&&"number"!=typeof e[0])for(this._targets=o=p(e),this._propLookup=[],this._siblings=[],r=0;r<o.length;r++)s=o[r],s?"string"!=typeof s?s.length&&s!==t&&s[0]&&(s[0]===t||s[0].nodeType&&s[0].style&&!s.nodeType)?(o.splice(r--,1),this._targets=o=o.concat(p(s))):(this._siblings[r]=K(s,this,!1),1===l&&this._siblings[r].length>1&&J(s,this,null,1,this._siblings[r])):(s=o[r--]=j.selector(s),"string"==typeof s&&o.splice(r+1,1)):o.splice(r--,1);else this._propLookup={},this._siblings=K(e,this,!1),1===l&&this._siblings.length>1&&J(e,this,null,1,this._siblings);(this.vars.immediateRender||0===i&&0===this._delay&&this.vars.immediateRender!==!1)&&(this._time=-f,this.render(Math.min(0,-this._delay)))},!0),E=function(e){return e&&e.length&&e!==t&&e[0]&&(e[0]===t||e[0].nodeType&&e[0].style&&!e.nodeType)},N=function(t,e){var i,n={};for(i in t)U[i]||i in e&&"transform"!==i&&"x"!==i&&"y"!==i&&"width"!==i&&"height"!==i&&"className"!==i&&"border"!==i||!(!H[i]||H[i]&&H[i]._autoCSS)||(n[i]=t[i],delete t[i]);t.css=n};a=j.prototype=new O,a.constructor=j,a.kill()._gc=!1,a.ratio=0,a._firstPT=a._targets=a._overwrittenProps=a._startAt=null,a._notifyPluginsOfEnabled=a._lazy=!1,j.version="1.19.0",j.defaultEase=a._ease=new x(null,null,1,1),j.defaultOverwrite="auto",j.ticker=l,j.autoSleep=120,j.lagSmoothing=function(t,e){l.lagSmoothing(t,e)},j.selector=t.$||t.jQuery||function(e){var i=t.$||t.jQuery;return i?(j.selector=i,i(e)):"undefined"==typeof document?e:document.querySelectorAll?document.querySelectorAll(e):document.getElementById("#"===e.charAt(0)?e.substr(1):e)};var L=[],M={},F=/(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi,q=function(t){for(var e,i=this._firstPT,n=1e-6;i;)e=i.blob?t?this.join(""):this.start:i.c*t+i.s,i.m?e=i.m(e,this._target||i.t):e<n&&e>-n&&(e=0),i.f?i.fp?i.t[i.p](i.fp,e):i.t[i.p](e):i.t[i.p]=e,i=i._next},I=function(t,e,i,n){var r,s,o,a,l,u,h,c=[t,e],f=0,p="",d=0;for(c.start=t,i&&(i(c),t=c[0],e=c[1]),c.length=0,r=t.match(F)||[],s=e.match(F)||[],n&&(n._next=null,n.blob=1,c._firstPT=c._applyPT=n),l=s.length,a=0;a<l;a++)h=s[a],u=e.substr(f,e.indexOf(h,f)-f),p+=u||!a?u:",",f+=u.length,d?d=(d+1)%5:"rgba("===u.substr(-5)&&(d=1),h===r[a]||r.length<=a?p+=h:(p&&(c.push(p),p=""),o=parseFloat(r[a]),c.push(o),c._firstPT={_next:c._firstPT,t:c,p:c.length-1,s:o,c:("="===h.charAt(1)?parseInt(h.charAt(0)+"1",10)*parseFloat(h.substr(2)):parseFloat(h)-o)||0,f:0,m:d&&d<4?Math.round:0}),f+=h.length;return p+=e.substr(f),p&&c.push(p),c.setRatio=q,c},z=function(t,e,i,n,r,s,o,a,l){"function"==typeof n&&(n=n(l||0,t));var u,h,c="get"===i?t[e]:i,f=typeof t[e],p="string"==typeof n&&"="===n.charAt(1),d={t:t,p:e,s:c,f:"function"===f,pg:0,n:r||e,m:s?"function"==typeof s?s:Math.round:0,pr:0,c:p?parseInt(n.charAt(0)+"1",10)*parseFloat(n.substr(2)):parseFloat(n)-c||0};if("number"!==f&&("function"===f&&"get"===i&&(h=e.indexOf("set")||"function"!=typeof t["get"+e.substr(3)]?e:"get"+e.substr(3),d.s=c=o?t[h](o):t[h]()),"string"==typeof c&&(o||isNaN(c))?(d.fp=o,u=I(c,n,a||j.defaultStringFilter,d),d={t:u,p:"setRatio",s:0,c:1,f:2,pg:0,n:r||e,pr:0,m:0}):p||(d.s=parseFloat(c),d.c=parseFloat(n)-d.s||0)),d.c)return(d._next=this._firstPT)&&(d._next._prev=d),this._firstPT=d,d},B=j._internals={isArray:_,isSelector:E,lazyTweens:L,blobDif:I},H=j._plugins={},X=B.tweenLookup={},W=0,U=B.reservedProps={ease:1,delay:1,overwrite:1,onComplete:1,onCompleteParams:1,onCompleteScope:1,useFrames:1,runBackwards:1,startAt:1,onUpdate:1,onUpdateParams:1,onUpdateScope:1,onStart:1,onStartParams:1,onStartScope:1,onReverseComplete:1,onReverseCompleteParams:1,onReverseCompleteScope:1,onRepeat:1,onRepeatParams:1,onRepeatScope:1,easeParams:1,yoyo:1,immediateRender:1,repeat:1,repeatDelay:1,data:1,paused:1,reversed:1,autoCSS:1,lazy:1,onOverwrite:1,callbackScope:1,stringFilter:1,id:1},Y={none:0,all:1,auto:2,concurrent:3,allOnStart:4,preexisting:5,true:1,false:0},$=O._rootFramesTimeline=new R,V=O._rootTimeline=new R,Q=30,G=B.lazyRender=function(){var t,e=L.length;for(M={};--e>-1;)t=L[e],t&&t._lazy!==!1&&(t.render(t._lazy[0],t._lazy[1],!0),t._lazy=!1);L.length=0};V._startTime=l.time,$._startTime=l.frame,V._active=$._active=!0,setTimeout(G,1),O._updateRoot=j.render=function(){var t,e,i;if(L.length&&G(),V.render((l.time-V._startTime)*V._timeScale,!1,!1),$.render((l.frame-$._startTime)*$._timeScale,!1,!1),L.length&&G(),l.frame>=Q){Q=l.frame+(parseInt(j.autoSleep,10)||120);for(i in X){for(e=X[i].tweens,t=e.length;--t>-1;)e[t]._gc&&e.splice(t,1);0===e.length&&delete X[i]}if(i=V._first,(!i||i._paused)&&j.autoSleep&&!$._first&&1===l._listeners.tick.length){for(;i&&i._paused;)i=i._next;i||l.sleep()}}},l.addEventListener("tick",O._updateRoot);var K=function(t,e,i){var n,r,s=t._gsTweenID;if(X[s||(t._gsTweenID=s="t"+W++)]||(X[s]={target:t,tweens:[]}),e&&(n=X[s].tweens,n[r=n.length]=e,i))for(;--r>-1;)n[r]===e&&n.splice(r,1);return X[s].tweens},Z=function(t,e,i,n){var r,s,o=t.vars.onOverwrite;return o&&(r=o(t,e,i,n)),o=j.onOverwrite,o&&(s=o(t,e,i,n)),r!==!1&&s!==!1},J=function(t,e,i,n,r){var s,o,a,l;if(1===n||n>=4){for(l=r.length,s=0;s<l;s++)if((a=r[s])!==e)a._gc||a._kill(null,t,e)&&(o=!0);else if(5===n)break;return o}var u,h=e._startTime+f,c=[],p=0,d=0===e._duration;for(s=r.length;--s>-1;)(a=r[s])===e||a._gc||a._paused||(a._timeline!==e._timeline?(u=u||tt(e,0,d),0===tt(a,u,d)&&(c[p++]=a)):a._startTime<=h&&a._startTime+a.totalDuration()/a._timeScale>h&&((d||!a._initted)&&h-a._startTime<=2e-10||(c[p++]=a)));for(s=p;--s>-1;)if(a=c[s],2===n&&a._kill(i,t,e)&&(o=!0),2!==n||!a._firstPT&&a._initted){if(2!==n&&!Z(a,e))continue;a._enabled(!1,!1)&&(o=!0)}return o},tt=function(t,e,i){for(var n=t._timeline,r=n._timeScale,s=t._startTime;n._timeline;){if(s+=n._startTime,r*=n._timeScale,n._paused)return-100;n=n._timeline}return s/=r,s>e?s-e:i&&s===e||!t._initted&&s-e<2*f?f:(s+=t.totalDuration()/t._timeScale/r)>e+f?0:s-e-f};a._init=function(){var t,e,i,n,r,s,o=this.vars,a=this._overwrittenProps,l=this._duration,u=!!o.immediateRender,h=o.ease;if(o.startAt){this._startAt&&(this._startAt.render(-1,!0),this._startAt.kill()),r={};for(n in o.startAt)r[n]=o.startAt[n];if(r.overwrite=!1,r.immediateRender=!0,r.lazy=u&&o.lazy!==!1,r.startAt=r.delay=null,this._startAt=j.to(this.target,0,r),u)if(this._time>0)this._startAt=null;else if(0!==l)return}else if(o.runBackwards&&0!==l)if(this._startAt)this._startAt.render(-1,!0),this._startAt.kill(),this._startAt=null;else{0!==this._time&&(u=!1),i={};for(n in o)U[n]&&"autoCSS"!==n||(i[n]=o[n]);if(i.overwrite=0,i.data="isFromStart",i.lazy=u&&o.lazy!==!1,i.immediateRender=u,this._startAt=j.to(this.target,0,i),u){if(0===this._time)return}else this._startAt._init(),this._startAt._enabled(!1),this.vars.immediateRender&&(this._startAt=null)}if(this._ease=h=h?h instanceof x?h:"function"==typeof h?new x(h,o.easeParams):w[h]||j.defaultEase:j.defaultEase,o.easeParams instanceof Array&&h.config&&(this._ease=h.config.apply(h,o.easeParams)),this._easeType=this._ease._type,this._easePower=this._ease._power,this._firstPT=null,this._targets)for(s=this._targets.length,t=0;t<s;t++)this._initProps(this._targets[t],this._propLookup[t]={},this._siblings[t],a?a[t]:null,t)&&(e=!0);else e=this._initProps(this.target,this._propLookup,this._siblings,a,0);if(e&&j._onPluginEvent("_onInitAllProps",this),a&&(this._firstPT||"function"!=typeof this.target&&this._enabled(!1,!1)),o.runBackwards)for(i=this._firstPT;i;)i.s+=i.c,i.c=-i.c,i=i._next;this._onUpdate=o.onUpdate,this._initted=!0},a._initProps=function(e,i,n,r,s){var o,a,l,u,h,c;if(null==e)return!1;M[e._gsTweenID]&&G(),this.vars.css||e.style&&e!==t&&e.nodeType&&H.css&&this.vars.autoCSS!==!1&&N(this.vars,e);for(o in this.vars)if(c=this.vars[o],U[o])c&&(c instanceof Array||c.push&&_(c))&&c.join("").indexOf("{self}")!==-1&&(this.vars[o]=c=this._swapSelfInParams(c,this));else if(H[o]&&(u=new H[o])._onInitTween(e,this.vars[o],this,s)){for(this._firstPT=h={_next:this._firstPT,t:u,p:"setRatio",s:0,c:1,f:1,n:o,pg:1,pr:u._priority,m:0},a=u._overwriteProps.length;--a>-1;)i[u._overwriteProps[a]]=this._firstPT;(u._priority||u._onInitAllProps)&&(l=!0),(u._onDisable||u._onEnable)&&(this._notifyPluginsOfEnabled=!0),h._next&&(h._next._prev=h)}else i[o]=z.call(this,e,o,"get",c,o,0,null,this.vars.stringFilter,s);return r&&this._kill(r,e)?this._initProps(e,i,n,r,s):this._overwrite>1&&this._firstPT&&n.length>1&&J(e,this,i,this._overwrite,n)?(this._kill(i,e),this._initProps(e,i,n,r,s)):(this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration)&&(M[e._gsTweenID]=!0),l)},a.render=function(t,e,i){var n,r,s,o,a=this._time,l=this._duration,u=this._rawPrevTime;if(t>=l-1e-7)this._totalTime=this._time=l,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1,this._reversed||(n=!0,r="onComplete",i=i||this._timeline.autoRemoveChildren),0===l&&(this._initted||!this.vars.lazy||i)&&(this._startTime===this._timeline._duration&&(t=0),(u<0||t<=0&&t>=-1e-7||u===f&&"isPause"!==this.data)&&u!==t&&(i=!0,u>f&&(r="onReverseComplete")),this._rawPrevTime=o=!e||t||u===t?t:f);else if(t<1e-7)this._totalTime=this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==a||0===l&&u>0)&&(r="onReverseComplete",n=this._reversed),t<0&&(this._active=!1,0===l&&(this._initted||!this.vars.lazy||i)&&(u>=0&&(u!==f||"isPause"!==this.data)&&(i=!0),this._rawPrevTime=o=!e||t||u===t?t:f)),this._initted||(i=!0);else if(this._totalTime=this._time=t,this._easeType){var h=t/l,c=this._easeType,p=this._easePower;(1===c||3===c&&h>=.5)&&(h=1-h),3===c&&(h*=2),1===p?h*=h:2===p?h*=h*h:3===p?h*=h*h*h:4===p&&(h*=h*h*h*h),1===c?this.ratio=1-h:2===c?this.ratio=h:t/l<.5?this.ratio=h/2:this.ratio=1-h/2}else this.ratio=this._ease.getRatio(t/l);if(this._time!==a||i){if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!i&&this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration))return this._time=this._totalTime=a,this._rawPrevTime=u,L.push(this),void(this._lazy=[t,e]);this._time&&!n?this.ratio=this._ease.getRatio(this._time/l):n&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(this._lazy!==!1&&(this._lazy=!1),this._active||!this._paused&&this._time!==a&&t>=0&&(this._active=!0),0===a&&(this._startAt&&(t>=0?this._startAt.render(t,e,i):r||(r="_dummyGS")),this.vars.onStart&&(0===this._time&&0!==l||e||this._callback("onStart"))),s=this._firstPT;s;)s.f?s.t[s.p](s.c*this.ratio+s.s):s.t[s.p]=s.c*this.ratio+s.s,s=s._next;this._onUpdate&&(t<0&&this._startAt&&t!==-1e-4&&this._startAt.render(t,e,i),e||(this._time!==a||n||i)&&this._callback("onUpdate")),r&&(this._gc&&!i||(t<0&&this._startAt&&!this._onUpdate&&t!==-1e-4&&this._startAt.render(t,e,i),n&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[r]&&this._callback(r),0===l&&this._rawPrevTime===f&&o!==f&&(this._rawPrevTime=0)))}},a._kill=function(t,e,i){if("all"===t&&(t=null),null==t&&(null==e||e===this.target))return this._lazy=!1,this._enabled(!1,!1);e="string"!=typeof e?e||this._targets||this.target:j.selector(e)||e;var n,r,s,o,a,l,u,h,c,f=i&&this._time&&i._startTime===this._startTime&&this._timeline===i._timeline;if((_(e)||E(e))&&"number"!=typeof e[0])for(n=e.length;--n>-1;)this._kill(t,e[n],i)&&(l=!0);else{if(this._targets){for(n=this._targets.length;--n>-1;)if(e===this._targets[n]){a=this._propLookup[n]||{},this._overwrittenProps=this._overwrittenProps||[],r=this._overwrittenProps[n]=t?this._overwrittenProps[n]||{}:"all";break}}else{if(e!==this.target)return!1;a=this._propLookup,r=this._overwrittenProps=t?this._overwrittenProps||{}:"all"}if(a){if(u=t||a,h=t!==r&&"all"!==r&&t!==a&&("object"!=typeof t||!t._tempKill),i&&(j.onOverwrite||this.vars.onOverwrite)){for(s in u)a[s]&&(c||(c=[]),c.push(s));if((c||!t)&&!Z(this,i,e,c))return!1}for(s in u)(o=a[s])&&(f&&(o.f?o.t[o.p](o.s):o.t[o.p]=o.s,l=!0),o.pg&&o.t._kill(u)&&(l=!0),o.pg&&0!==o.t._overwriteProps.length||(o._prev?o._prev._next=o._next:o===this._firstPT&&(this._firstPT=o._next),o._next&&(o._next._prev=o._prev),o._next=o._prev=null),delete a[s]),h&&(r[s]=1);!this._firstPT&&this._initted&&this._enabled(!1,!1)}}return l},a.invalidate=function(){return this._notifyPluginsOfEnabled&&j._onPluginEvent("_onDisable",this),this._firstPT=this._overwrittenProps=this._startAt=this._onUpdate=null,this._notifyPluginsOfEnabled=this._active=this._lazy=!1,this._propLookup=this._targets?{}:[],O.prototype.invalidate.call(this),this.vars.immediateRender&&(this._time=-f,this.render(Math.min(0,-this._delay))),this},a._enabled=function(t,e){if(u||l.wake(),t&&this._gc){var i,n=this._targets;if(n)for(i=n.length;--i>-1;)this._siblings[i]=K(n[i],this,!0);else this._siblings=K(this.target,this,!0)}return O.prototype._enabled.call(this,t,e),!(!this._notifyPluginsOfEnabled||!this._firstPT)&&j._onPluginEvent(t?"_onEnable":"_onDisable",this)},j.to=function(t,e,i){return new j(t,e,i)},j.from=function(t,e,i){return i.runBackwards=!0,i.immediateRender=0!=i.immediateRender,new j(t,e,i)},j.fromTo=function(t,e,i,n){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,new j(t,e,n)},j.delayedCall=function(t,e,i,n,r){return new j(e,0,{delay:t,onComplete:e,onCompleteParams:i,callbackScope:n,onReverseComplete:e,
onReverseCompleteParams:i,immediateRender:!1,lazy:!1,useFrames:r,overwrite:0})},j.set=function(t,e){return new j(t,0,e)},j.getTweensOf=function(t,e){if(null==t)return[];t="string"!=typeof t?t:j.selector(t)||t;var i,n,r,s;if((_(t)||E(t))&&"number"!=typeof t[0]){for(i=t.length,n=[];--i>-1;)n=n.concat(j.getTweensOf(t[i],e));for(i=n.length;--i>-1;)for(s=n[i],r=i;--r>-1;)s===n[r]&&n.splice(i,1)}else for(n=K(t).concat(),i=n.length;--i>-1;)(n[i]._gc||e&&!n[i].isActive())&&n.splice(i,1);return n},j.killTweensOf=j.killDelayedCallsTo=function(t,e,i){"object"==typeof e&&(i=e,e=!1);for(var n=j.getTweensOf(t,e),r=n.length;--r>-1;)n[r]._kill(i,t)};var et=y("plugins.TweenPlugin",function(t,e){this._overwriteProps=(t||"").split(","),this._propName=this._overwriteProps[0],this._priority=e||0,this._super=et.prototype},!0);if(a=et.prototype,et.version="1.19.0",et.API=2,a._firstPT=null,a._addTween=z,a.setRatio=q,a._kill=function(t){var e,i=this._overwriteProps,n=this._firstPT;if(null!=t[this._propName])this._overwriteProps=[];else for(e=i.length;--e>-1;)null!=t[i[e]]&&i.splice(e,1);for(;n;)null!=t[n.n]&&(n._next&&(n._next._prev=n._prev),n._prev?(n._prev._next=n._next,n._prev=null):this._firstPT===n&&(this._firstPT=n._next)),n=n._next;return!1},a._mod=a._roundProps=function(t){for(var e,i=this._firstPT;i;)e=t[this._propName]||null!=i.n&&t[i.n.split(this._propName+"_").join("")],e&&"function"==typeof e&&(2===i.f?i.t._applyPT.m=e:i.m=e),i=i._next},j._onPluginEvent=function(t,e){var i,n,r,s,o,a=e._firstPT;if("_onInitAllProps"===t){for(;a;){for(o=a._next,n=r;n&&n.pr>a.pr;)n=n._next;(a._prev=n?n._prev:s)?a._prev._next=a:r=a,(a._next=n)?n._prev=a:s=a,a=o}a=e._firstPT=r}for(;a;)a.pg&&"function"==typeof a.t[t]&&a.t[t]()&&(i=!0),a=a._next;return i},et.activate=function(t){for(var e=t.length;--e>-1;)t[e].API===et.API&&(H[(new t[e])._propName]=t[e]);return!0},v.plugin=function(t){if(!(t&&t.propName&&t.init&&t.API))throw"illegal plugin definition.";var e,i=t.propName,n=t.priority||0,r=t.overwriteProps,s={init:"_onInitTween",set:"setRatio",kill:"_kill",round:"_mod",mod:"_mod",initAll:"_onInitAllProps"},o=y("plugins."+i.charAt(0).toUpperCase()+i.substr(1)+"Plugin",function(){et.call(this,i,n),this._overwriteProps=r||[]},t.global===!0),a=o.prototype=new et(i);a.constructor=o,o.API=t.API;for(e in s)"function"==typeof t[e]&&(a[s[e]]=t[e]);return o.version=t.version,et.activate([o]),o},s=t._gsQueue){for(o=0;o<s.length;o++)s[o]();for(a in m)m[a].func||t.console.log("GSAP encountered missing dependency: "+a)}u=!1}}("undefined"!=typeof e&&e.exports&&"undefined"!=typeof t?t:this||window,"TweenLite")}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],13:[function(t,e,i){(function(t){var i="undefined"!=typeof e&&e.exports&&"undefined"!=typeof t?t:this||window;(i._gsQueue||(i._gsQueue=[])).push(function(){"use strict";i._gsDefine("TweenMax",["core.Animation","core.SimpleTimeline","TweenLite"],function(t,e,i){var n=function(t){var e,i=[],n=t.length;for(e=0;e!==n;i.push(t[e++]));return i},r=function(t,e,i){var n,r,s=t.cycle;for(n in s)r=s[n],t[n]="function"==typeof r?r(i,e[i]):r[i%r.length];delete t.cycle},s=function(t,e,n){i.call(this,t,e,n),this._cycle=0,this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._dirty=!0,this.render=s.prototype.render},o=1e-10,a=i._internals,l=a.isSelector,u=a.isArray,h=s.prototype=i.to({},.1,{}),c=[];s.version="1.19.0",h.constructor=s,h.kill()._gc=!1,s.killTweensOf=s.killDelayedCallsTo=i.killTweensOf,s.getTweensOf=i.getTweensOf,s.lagSmoothing=i.lagSmoothing,s.ticker=i.ticker,s.render=i.render,h.invalidate=function(){return this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._uncache(!0),i.prototype.invalidate.call(this)},h.updateTo=function(t,e){var n,r=this.ratio,s=this.vars.immediateRender||t.immediateRender;e&&this._startTime<this._timeline._time&&(this._startTime=this._timeline._time,this._uncache(!1),this._gc?this._enabled(!0,!1):this._timeline.insert(this,this._startTime-this._delay));for(n in t)this.vars[n]=t[n];if(this._initted||s)if(e)this._initted=!1,s&&this.render(0,!0,!0);else if(this._gc&&this._enabled(!0,!1),this._notifyPluginsOfEnabled&&this._firstPT&&i._onPluginEvent("_onDisable",this),this._time/this._duration>.998){var o=this._totalTime;this.render(0,!0,!1),this._initted=!1,this.render(o,!0,!1)}else if(this._initted=!1,this._init(),this._time>0||s)for(var a,l=1/(1-r),u=this._firstPT;u;)a=u.s+u.c,u.c*=l,u.s=a-u.c,u=u._next;return this},h.render=function(t,e,i){this._initted||0===this._duration&&this.vars.repeat&&this.invalidate();var n,r,s,l,u,h,c,f,p=this._dirty?this.totalDuration():this._totalDuration,d=this._time,_=this._totalTime,m=this._cycle,g=this._duration,v=this._rawPrevTime;if(t>=p-1e-7?(this._totalTime=p,this._cycle=this._repeat,this._yoyo&&0!==(1&this._cycle)?(this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0):(this._time=g,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1),this._reversed||(n=!0,r="onComplete",i=i||this._timeline.autoRemoveChildren),0===g&&(this._initted||!this.vars.lazy||i)&&(this._startTime===this._timeline._duration&&(t=0),(v<0||t<=0&&t>=-1e-7||v===o&&"isPause"!==this.data)&&v!==t&&(i=!0,v>o&&(r="onReverseComplete")),this._rawPrevTime=f=!e||t||v===t?t:o)):t<1e-7?(this._totalTime=this._time=this._cycle=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==_||0===g&&v>0)&&(r="onReverseComplete",n=this._reversed),t<0&&(this._active=!1,0===g&&(this._initted||!this.vars.lazy||i)&&(v>=0&&(i=!0),this._rawPrevTime=f=!e||t||v===t?t:o)),this._initted||(i=!0)):(this._totalTime=this._time=t,0!==this._repeat&&(l=g+this._repeatDelay,this._cycle=this._totalTime/l>>0,0!==this._cycle&&this._cycle===this._totalTime/l&&_<=t&&this._cycle--,this._time=this._totalTime-this._cycle*l,this._yoyo&&0!==(1&this._cycle)&&(this._time=g-this._time),this._time>g?this._time=g:this._time<0&&(this._time=0)),this._easeType?(u=this._time/g,h=this._easeType,c=this._easePower,(1===h||3===h&&u>=.5)&&(u=1-u),3===h&&(u*=2),1===c?u*=u:2===c?u*=u*u:3===c?u*=u*u*u:4===c&&(u*=u*u*u*u),1===h?this.ratio=1-u:2===h?this.ratio=u:this._time/g<.5?this.ratio=u/2:this.ratio=1-u/2):this.ratio=this._ease.getRatio(this._time/g)),d===this._time&&!i&&m===this._cycle)return void(_!==this._totalTime&&this._onUpdate&&(e||this._callback("onUpdate")));if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!i&&this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration))return this._time=d,this._totalTime=_,this._rawPrevTime=v,this._cycle=m,a.lazyTweens.push(this),void(this._lazy=[t,e]);this._time&&!n?this.ratio=this._ease.getRatio(this._time/g):n&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(this._lazy!==!1&&(this._lazy=!1),this._active||!this._paused&&this._time!==d&&t>=0&&(this._active=!0),0===_&&(2===this._initted&&t>0&&this._init(),this._startAt&&(t>=0?this._startAt.render(t,e,i):r||(r="_dummyGS")),this.vars.onStart&&(0===this._totalTime&&0!==g||e||this._callback("onStart"))),s=this._firstPT;s;)s.f?s.t[s.p](s.c*this.ratio+s.s):s.t[s.p]=s.c*this.ratio+s.s,s=s._next;this._onUpdate&&(t<0&&this._startAt&&this._startTime&&this._startAt.render(t,e,i),e||(this._totalTime!==_||r)&&this._callback("onUpdate")),this._cycle!==m&&(e||this._gc||this.vars.onRepeat&&this._callback("onRepeat")),r&&(this._gc&&!i||(t<0&&this._startAt&&!this._onUpdate&&this._startTime&&this._startAt.render(t,e,i),n&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[r]&&this._callback(r),0===g&&this._rawPrevTime===o&&f!==o&&(this._rawPrevTime=0)))},s.to=function(t,e,i){return new s(t,e,i)},s.from=function(t,e,i){return i.runBackwards=!0,i.immediateRender=0!=i.immediateRender,new s(t,e,i)},s.fromTo=function(t,e,i,n){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,new s(t,e,n)},s.staggerTo=s.allTo=function(t,e,o,a,h,f,p){a=a||0;var d,_,m,g,v=0,y=[],T=function(){o.onComplete&&o.onComplete.apply(o.onCompleteScope||this,arguments),h.apply(p||o.callbackScope||this,f||c)},x=o.cycle,w=o.startAt&&o.startAt.cycle;for(u(t)||("string"==typeof t&&(t=i.selector(t)||t),l(t)&&(t=n(t))),t=t||[],a<0&&(t=n(t),t.reverse(),a*=-1),d=t.length-1,m=0;m<=d;m++){_={};for(g in o)_[g]=o[g];if(x&&(r(_,t,m),null!=_.duration&&(e=_.duration,delete _.duration)),w){w=_.startAt={};for(g in o.startAt)w[g]=o.startAt[g];r(_.startAt,t,m)}_.delay=v+(_.delay||0),m===d&&h&&(_.onComplete=T),y[m]=new s(t[m],e,_),v+=a}return y},s.staggerFrom=s.allFrom=function(t,e,i,n,r,o,a){return i.runBackwards=!0,i.immediateRender=0!=i.immediateRender,s.staggerTo(t,e,i,n,r,o,a)},s.staggerFromTo=s.allFromTo=function(t,e,i,n,r,o,a,l){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,s.staggerTo(t,e,n,r,o,a,l)},s.delayedCall=function(t,e,i,n,r){return new s(e,0,{delay:t,onComplete:e,onCompleteParams:i,callbackScope:n,onReverseComplete:e,onReverseCompleteParams:i,immediateRender:!1,useFrames:r,overwrite:0})},s.set=function(t,e){return new s(t,0,e)},s.isTweening=function(t){return i.getTweensOf(t,!0).length>0};var f=function(t,e){for(var n=[],r=0,s=t._first;s;)s instanceof i?n[r++]=s:(e&&(n[r++]=s),n=n.concat(f(s,e)),r=n.length),s=s._next;return n},p=s.getAllTweens=function(e){return f(t._rootTimeline,e).concat(f(t._rootFramesTimeline,e))};s.killAll=function(t,i,n,r){null==i&&(i=!0),null==n&&(n=!0);var s,o,a,l=p(0!=r),u=l.length,h=i&&n&&r;for(a=0;a<u;a++)o=l[a],(h||o instanceof e||(s=o.target===o.vars.onComplete)&&n||i&&!s)&&(t?o.totalTime(o._reversed?0:o.totalDuration()):o._enabled(!1,!1))},s.killChildTweensOf=function(t,e){if(null!=t){var r,o,h,c,f,p=a.tweenLookup;if("string"==typeof t&&(t=i.selector(t)||t),l(t)&&(t=n(t)),u(t))for(c=t.length;--c>-1;)s.killChildTweensOf(t[c],e);else{r=[];for(h in p)for(o=p[h].target.parentNode;o;)o===t&&(r=r.concat(p[h].tweens)),o=o.parentNode;for(f=r.length,c=0;c<f;c++)e&&r[c].totalTime(r[c].totalDuration()),r[c]._enabled(!1,!1)}}};var d=function(t,i,n,r){i=i!==!1,n=n!==!1,r=r!==!1;for(var s,o,a=p(r),l=i&&n&&r,u=a.length;--u>-1;)o=a[u],(l||o instanceof e||(s=o.target===o.vars.onComplete)&&n||i&&!s)&&o.paused(t)};return s.pauseAll=function(t,e,i){d(!0,t,e,i)},s.resumeAll=function(t,e,i){d(!1,t,e,i)},s.globalTimeScale=function(e){var n=t._rootTimeline,r=i.ticker.time;return arguments.length?(e=e||o,n._startTime=r-(r-n._startTime)*n._timeScale/e,n=t._rootFramesTimeline,r=i.ticker.frame,n._startTime=r-(r-n._startTime)*n._timeScale/e,n._timeScale=t._rootTimeline._timeScale=e,e):n._timeScale},h.progress=function(t,e){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!==(1&this._cycle)?1-t:t)+this._cycle*(this._duration+this._repeatDelay),e):this._time/this.duration()},h.totalProgress=function(t,e){return arguments.length?this.totalTime(this.totalDuration()*t,e):this._totalTime/this.totalDuration()},h.time=function(t,e){return arguments.length?(this._dirty&&this.totalDuration(),t>this._duration&&(t=this._duration),this._yoyo&&0!==(1&this._cycle)?t=this._duration-t+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(t+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(t,e)):this._time},h.duration=function(e){return arguments.length?t.prototype.duration.call(this,e):this._duration},h.totalDuration=function(t){return arguments.length?this._repeat===-1?this:this.duration((t-this._repeat*this._repeatDelay)/(this._repeat+1)):(this._dirty&&(this._totalDuration=this._repeat===-1?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat,this._dirty=!1),this._totalDuration)},h.repeat=function(t){return arguments.length?(this._repeat=t,this._uncache(!0)):this._repeat},h.repeatDelay=function(t){return arguments.length?(this._repeatDelay=t,this._uncache(!0)):this._repeatDelay},h.yoyo=function(t){return arguments.length?(this._yoyo=t,this):this._yoyo},s},!0),i._gsDefine("TimelineLite",["core.Animation","core.SimpleTimeline","TweenLite"],function(t,e,n){var r=function(t){e.call(this,t),this._labels={},this.autoRemoveChildren=this.vars.autoRemoveChildren===!0,this.smoothChildTiming=this.vars.smoothChildTiming===!0,this._sortChildren=!0,this._onUpdate=this.vars.onUpdate;var i,n,r=this.vars;for(n in r)i=r[n],u(i)&&i.join("").indexOf("{self}")!==-1&&(r[n]=this._swapSelfInParams(i));u(r.tweens)&&this.add(r.tweens,0,r.align,r.stagger)},s=1e-10,o=n._internals,a=r._internals={},l=o.isSelector,u=o.isArray,h=o.lazyTweens,c=o.lazyRender,f=i._gsDefine.globals,p=function(t){var e,i={};for(e in t)i[e]=t[e];return i},d=function(t,e,i){var n,r,s=t.cycle;for(n in s)r=s[n],t[n]="function"==typeof r?r.call(e[i],i):r[i%r.length];delete t.cycle},_=a.pauseCallback=function(){},m=function(t){var e,i=[],n=t.length;for(e=0;e!==n;i.push(t[e++]));return i},g=r.prototype=new e;return r.version="1.19.0",g.constructor=r,g.kill()._gc=g._forcingPlayhead=g._hasPause=!1,g.to=function(t,e,i,r){var s=i.repeat&&f.TweenMax||n;return e?this.add(new s(t,e,i),r):this.set(t,i,r)},g.from=function(t,e,i,r){return this.add((i.repeat&&f.TweenMax||n).from(t,e,i),r)},g.fromTo=function(t,e,i,r,s){var o=r.repeat&&f.TweenMax||n;return e?this.add(o.fromTo(t,e,i,r),s):this.set(t,r,s)},g.staggerTo=function(t,e,i,s,o,a,u,h){var c,f,_=new r({onComplete:a,onCompleteParams:u,callbackScope:h,smoothChildTiming:this.smoothChildTiming}),g=i.cycle;for("string"==typeof t&&(t=n.selector(t)||t),t=t||[],l(t)&&(t=m(t)),s=s||0,s<0&&(t=m(t),t.reverse(),s*=-1),f=0;f<t.length;f++)c=p(i),c.startAt&&(c.startAt=p(c.startAt),c.startAt.cycle&&d(c.startAt,t,f)),g&&(d(c,t,f),null!=c.duration&&(e=c.duration,delete c.duration)),_.to(t[f],e,c,f*s);return this.add(_,o)},g.staggerFrom=function(t,e,i,n,r,s,o,a){return i.immediateRender=0!=i.immediateRender,i.runBackwards=!0,this.staggerTo(t,e,i,n,r,s,o,a)},g.staggerFromTo=function(t,e,i,n,r,s,o,a,l){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,this.staggerTo(t,e,n,r,s,o,a,l)},g.call=function(t,e,i,r){return this.add(n.delayedCall(0,t,e,i),r)},g.set=function(t,e,i){return i=this._parseTimeOrLabel(i,0,!0),null==e.immediateRender&&(e.immediateRender=i===this._time&&!this._paused),this.add(new n(t,0,e),i)},r.exportRoot=function(t,e){t=t||{},null==t.smoothChildTiming&&(t.smoothChildTiming=!0);var i,s,o=new r(t),a=o._timeline;for(null==e&&(e=!0),a._remove(o,!0),o._startTime=0,o._rawPrevTime=o._time=o._totalTime=a._time,i=a._first;i;)s=i._next,e&&i instanceof n&&i.target===i.vars.onComplete||o.add(i,i._startTime-i._delay),i=s;return a.add(o,0),o},g.add=function(i,s,o,a){var l,h,c,f,p,d;if("number"!=typeof s&&(s=this._parseTimeOrLabel(s,0,!0,i)),!(i instanceof t)){if(i instanceof Array||i&&i.push&&u(i)){for(o=o||"normal",a=a||0,l=s,h=i.length,c=0;c<h;c++)u(f=i[c])&&(f=new r({tweens:f})),this.add(f,l),"string"!=typeof f&&"function"!=typeof f&&("sequence"===o?l=f._startTime+f.totalDuration()/f._timeScale:"start"===o&&(f._startTime-=f.delay())),l+=a;return this._uncache(!0)}if("string"==typeof i)return this.addLabel(i,s);if("function"!=typeof i)throw"Cannot add "+i+" into the timeline; it is not a tween, timeline, function, or string.";i=n.delayedCall(0,i)}if(e.prototype.add.call(this,i,s),(this._gc||this._time===this._duration)&&!this._paused&&this._duration<this.duration())for(p=this,d=p.rawTime()>i._startTime;p._timeline;)d&&p._timeline.smoothChildTiming?p.totalTime(p._totalTime,!0):p._gc&&p._enabled(!0,!1),p=p._timeline;return this},g.remove=function(e){if(e instanceof t){this._remove(e,!1);var i=e._timeline=e.vars.useFrames?t._rootFramesTimeline:t._rootTimeline;return e._startTime=(e._paused?e._pauseTime:i._time)-(e._reversed?e.totalDuration()-e._totalTime:e._totalTime)/e._timeScale,this}if(e instanceof Array||e&&e.push&&u(e)){for(var n=e.length;--n>-1;)this.remove(e[n]);return this}return"string"==typeof e?this.removeLabel(e):this.kill(null,e)},g._remove=function(t,i){e.prototype._remove.call(this,t,i);var n=this._last;return n?this._time>n._startTime+n._totalDuration/n._timeScale&&(this._time=this.duration(),this._totalTime=this._totalDuration):this._time=this._totalTime=this._duration=this._totalDuration=0,this},g.append=function(t,e){return this.add(t,this._parseTimeOrLabel(null,e,!0,t))},g.insert=g.insertMultiple=function(t,e,i,n){return this.add(t,e||0,i,n)},g.appendMultiple=function(t,e,i,n){return this.add(t,this._parseTimeOrLabel(null,e,!0,t),i,n)},g.addLabel=function(t,e){return this._labels[t]=this._parseTimeOrLabel(e),this},g.addPause=function(t,e,i,r){var s=n.delayedCall(0,_,i,r||this);return s.vars.onComplete=s.vars.onReverseComplete=e,s.data="isPause",this._hasPause=!0,this.add(s,t)},g.removeLabel=function(t){return delete this._labels[t],this},g.getLabelTime=function(t){return null!=this._labels[t]?this._labels[t]:-1},g._parseTimeOrLabel=function(e,i,n,r){var s;if(r instanceof t&&r.timeline===this)this.remove(r);else if(r&&(r instanceof Array||r.push&&u(r)))for(s=r.length;--s>-1;)r[s]instanceof t&&r[s].timeline===this&&this.remove(r[s]);if("string"==typeof i)return this._parseTimeOrLabel(i,n&&"number"==typeof e&&null==this._labels[i]?e-this.duration():0,n);if(i=i||0,"string"!=typeof e||!isNaN(e)&&null==this._labels[e])null==e&&(e=this.duration());else{if(s=e.indexOf("="),s===-1)return null==this._labels[e]?n?this._labels[e]=this.duration()+i:i:this._labels[e]+i;i=parseInt(e.charAt(s-1)+"1",10)*Number(e.substr(s+1)),e=s>1?this._parseTimeOrLabel(e.substr(0,s-1),0,n):this.duration()}return Number(e)+i},g.seek=function(t,e){return this.totalTime("number"==typeof t?t:this._parseTimeOrLabel(t),e!==!1)},g.stop=function(){return this.paused(!0)},g.gotoAndPlay=function(t,e){return this.play(t,e)},g.gotoAndStop=function(t,e){return this.pause(t,e)},g.render=function(t,e,i){this._gc&&this._enabled(!0,!1);var n,r,o,a,l,u,f,p=this._dirty?this.totalDuration():this._totalDuration,d=this._time,_=this._startTime,m=this._timeScale,g=this._paused;if(t>=p-1e-7)this._totalTime=this._time=p,this._reversed||this._hasPausedChild()||(r=!0,a="onComplete",l=!!this._timeline.autoRemoveChildren,0===this._duration&&(t<=0&&t>=-1e-7||this._rawPrevTime<0||this._rawPrevTime===s)&&this._rawPrevTime!==t&&this._first&&(l=!0,this._rawPrevTime>s&&(a="onReverseComplete"))),this._rawPrevTime=this._duration||!e||t||this._rawPrevTime===t?t:s,t=p+1e-4;else if(t<1e-7)if(this._totalTime=this._time=0,(0!==d||0===this._duration&&this._rawPrevTime!==s&&(this._rawPrevTime>0||t<0&&this._rawPrevTime>=0))&&(a="onReverseComplete",r=this._reversed),t<0)this._active=!1,this._timeline.autoRemoveChildren&&this._reversed?(l=r=!0,a="onReverseComplete"):this._rawPrevTime>=0&&this._first&&(l=!0),this._rawPrevTime=t;else{if(this._rawPrevTime=this._duration||!e||t||this._rawPrevTime===t?t:s,0===t&&r)for(n=this._first;n&&0===n._startTime;)n._duration||(r=!1),n=n._next;t=0,this._initted||(l=!0)}else{if(this._hasPause&&!this._forcingPlayhead&&!e){if(t>=d)for(n=this._first;n&&n._startTime<=t&&!u;)n._duration||"isPause"!==n.data||n.ratio||0===n._startTime&&0===this._rawPrevTime||(u=n),n=n._next;else for(n=this._last;n&&n._startTime>=t&&!u;)n._duration||"isPause"===n.data&&n._rawPrevTime>0&&(u=n),n=n._prev;u&&(this._time=t=u._startTime,this._totalTime=t+this._cycle*(this._totalDuration+this._repeatDelay))}this._totalTime=this._time=this._rawPrevTime=t}if(this._time!==d&&this._first||i||l||u){if(this._initted||(this._initted=!0),this._active||!this._paused&&this._time!==d&&t>0&&(this._active=!0),0===d&&this.vars.onStart&&(0===this._time&&this._duration||e||this._callback("onStart")),f=this._time,f>=d)for(n=this._first;n&&(o=n._next,f===this._time&&(!this._paused||g));)(n._active||n._startTime<=f&&!n._paused&&!n._gc)&&(u===n&&this.pause(),n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)),n=o;else for(n=this._last;n&&(o=n._prev,f===this._time&&(!this._paused||g));){if(n._active||n._startTime<=d&&!n._paused&&!n._gc){if(u===n){for(u=n._prev;u&&u.endTime()>this._time;)u.render(u._reversed?u.totalDuration()-(t-u._startTime)*u._timeScale:(t-u._startTime)*u._timeScale,e,i),u=u._prev;u=null,this.pause()}n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)}n=o}this._onUpdate&&(e||(h.length&&c(),this._callback("onUpdate"))),a&&(this._gc||_!==this._startTime&&m===this._timeScale||(0===this._time||p>=this.totalDuration())&&(r&&(h.length&&c(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[a]&&this._callback(a)))}},g._hasPausedChild=function(){for(var t=this._first;t;){if(t._paused||t instanceof r&&t._hasPausedChild())return!0;t=t._next}return!1},g.getChildren=function(t,e,i,r){r=r||-9999999999;for(var s=[],o=this._first,a=0;o;)o._startTime<r||(o instanceof n?e!==!1&&(s[a++]=o):(i!==!1&&(s[a++]=o),t!==!1&&(s=s.concat(o.getChildren(!0,e,i)),a=s.length))),o=o._next;return s},g.getTweensOf=function(t,e){var i,r,s=this._gc,o=[],a=0;for(s&&this._enabled(!0,!0),i=n.getTweensOf(t),r=i.length;--r>-1;)(i[r].timeline===this||e&&this._contains(i[r]))&&(o[a++]=i[r]);return s&&this._enabled(!1,!0),o},g.recent=function(){return this._recent},g._contains=function(t){for(var e=t.timeline;e;){if(e===this)return!0;e=e.timeline}return!1},g.shiftChildren=function(t,e,i){i=i||0;for(var n,r=this._first,s=this._labels;r;)r._startTime>=i&&(r._startTime+=t),r=r._next;if(e)for(n in s)s[n]>=i&&(s[n]+=t);return this._uncache(!0)},g._kill=function(t,e){if(!t&&!e)return this._enabled(!1,!1);for(var i=e?this.getTweensOf(e):this.getChildren(!0,!0,!1),n=i.length,r=!1;--n>-1;)i[n]._kill(t,e)&&(r=!0);return r},g.clear=function(t){var e=this.getChildren(!1,!0,!0),i=e.length;for(this._time=this._totalTime=0;--i>-1;)e[i]._enabled(!1,!1);return t!==!1&&(this._labels={}),this._uncache(!0)},g.invalidate=function(){for(var e=this._first;e;)e.invalidate(),e=e._next;return t.prototype.invalidate.call(this)},g._enabled=function(t,i){if(t===this._gc)for(var n=this._first;n;)n._enabled(t,!0),n=n._next;return e.prototype._enabled.call(this,t,i)},g.totalTime=function(e,i,n){this._forcingPlayhead=!0;var r=t.prototype.totalTime.apply(this,arguments);return this._forcingPlayhead=!1,r},g.duration=function(t){return arguments.length?(0!==this.duration()&&0!==t&&this.timeScale(this._duration/t),this):(this._dirty&&this.totalDuration(),this._duration)},g.totalDuration=function(t){if(!arguments.length){if(this._dirty){for(var e,i,n=0,r=this._last,s=999999999999;r;)e=r._prev,r._dirty&&r.totalDuration(),r._startTime>s&&this._sortChildren&&!r._paused?this.add(r,r._startTime-r._delay):s=r._startTime,r._startTime<0&&!r._paused&&(n-=r._startTime,this._timeline.smoothChildTiming&&(this._startTime+=r._startTime/this._timeScale),this.shiftChildren(-r._startTime,!1,-9999999999),s=0),i=r._startTime+r._totalDuration/r._timeScale,i>n&&(n=i),r=e;this._duration=this._totalDuration=n,this._dirty=!1}return this._totalDuration}return t&&this.totalDuration()?this.timeScale(this._totalDuration/t):this},g.paused=function(e){if(!e)for(var i=this._first,n=this._time;i;)i._startTime===n&&"isPause"===i.data&&(i._rawPrevTime=0),i=i._next;return t.prototype.paused.apply(this,arguments)},g.usesFrames=function(){for(var e=this._timeline;e._timeline;)e=e._timeline;return e===t._rootFramesTimeline},g.rawTime=function(){return this._paused?this._totalTime:(this._timeline.rawTime()-this._startTime)*this._timeScale},r},!0),i._gsDefine("TimelineMax",["TimelineLite","TweenLite","easing.Ease"],function(t,e,n){var r=function(e){t.call(this,e),this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._cycle=0,this._yoyo=this.vars.yoyo===!0,this._dirty=!0},s=1e-10,o=e._internals,a=o.lazyTweens,l=o.lazyRender,u=i._gsDefine.globals,h=new n(null,null,1,0),c=r.prototype=new t;return c.constructor=r,c.kill()._gc=!1,r.version="1.19.0",c.invalidate=function(){return this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._uncache(!0),t.prototype.invalidate.call(this)},c.addCallback=function(t,i,n,r){return this.add(e.delayedCall(0,t,n,r),i)},c.removeCallback=function(t,e){if(t)if(null==e)this._kill(null,t);else for(var i=this.getTweensOf(t,!1),n=i.length,r=this._parseTimeOrLabel(e);--n>-1;)i[n]._startTime===r&&i[n]._enabled(!1,!1);return this},c.removePause=function(e){return this.removeCallback(t._internals.pauseCallback,e)},c.tweenTo=function(t,i){i=i||{};var n,r,s,o={ease:h,useFrames:this.usesFrames(),immediateRender:!1},a=i.repeat&&u.TweenMax||e;for(r in i)o[r]=i[r];return o.time=this._parseTimeOrLabel(t),n=Math.abs(Number(o.time)-this._time)/this._timeScale||.001,s=new a(this,n,o),o.onStart=function(){s.target.paused(!0),s.vars.time!==s.target.time()&&n===s.duration()&&s.duration(Math.abs(s.vars.time-s.target.time())/s.target._timeScale),i.onStart&&s._callback("onStart")},s},c.tweenFromTo=function(t,e,i){i=i||{},t=this._parseTimeOrLabel(t),i.startAt={onComplete:this.seek,onCompleteParams:[t],callbackScope:this},i.immediateRender=i.immediateRender!==!1;var n=this.tweenTo(e,i);return n.duration(Math.abs(n.vars.time-t)/this._timeScale||.001)},c.render=function(t,e,i){this._gc&&this._enabled(!0,!1);var n,r,o,u,h,c,f,p,d=this._dirty?this.totalDuration():this._totalDuration,_=this._duration,m=this._time,g=this._totalTime,v=this._startTime,y=this._timeScale,T=this._rawPrevTime,x=this._paused,w=this._cycle;if(t>=d-1e-7)this._locked||(this._totalTime=d,this._cycle=this._repeat),this._reversed||this._hasPausedChild()||(r=!0,u="onComplete",h=!!this._timeline.autoRemoveChildren,0===this._duration&&(t<=0&&t>=-1e-7||T<0||T===s)&&T!==t&&this._first&&(h=!0,T>s&&(u="onReverseComplete"))),this._rawPrevTime=this._duration||!e||t||this._rawPrevTime===t?t:s,this._yoyo&&0!==(1&this._cycle)?this._time=t=0:(this._time=_,t=_+1e-4);else if(t<1e-7)if(this._locked||(this._totalTime=this._cycle=0),this._time=0,(0!==m||0===_&&T!==s&&(T>0||t<0&&T>=0)&&!this._locked)&&(u="onReverseComplete",r=this._reversed),t<0)this._active=!1,this._timeline.autoRemoveChildren&&this._reversed?(h=r=!0,u="onReverseComplete"):T>=0&&this._first&&(h=!0),this._rawPrevTime=t;else{if(this._rawPrevTime=_||!e||t||this._rawPrevTime===t?t:s,0===t&&r)for(n=this._first;n&&0===n._startTime;)n._duration||(r=!1),n=n._next;t=0,this._initted||(h=!0)}else if(0===_&&T<0&&(h=!0),this._time=this._rawPrevTime=t,this._locked||(this._totalTime=t,0!==this._repeat&&(c=_+this._repeatDelay,this._cycle=this._totalTime/c>>0,0!==this._cycle&&this._cycle===this._totalTime/c&&g<=t&&this._cycle--,this._time=this._totalTime-this._cycle*c,this._yoyo&&0!==(1&this._cycle)&&(this._time=_-this._time),this._time>_?(this._time=_,t=_+1e-4):this._time<0?this._time=t=0:t=this._time)),this._hasPause&&!this._forcingPlayhead&&!e){if(t=this._time,t>=m)for(n=this._first;n&&n._startTime<=t&&!f;)n._duration||"isPause"!==n.data||n.ratio||0===n._startTime&&0===this._rawPrevTime||(f=n),n=n._next;else for(n=this._last;n&&n._startTime>=t&&!f;)n._duration||"isPause"===n.data&&n._rawPrevTime>0&&(f=n),n=n._prev;f&&(this._time=t=f._startTime,this._totalTime=t+this._cycle*(this._totalDuration+this._repeatDelay))}if(this._cycle!==w&&!this._locked){var b=this._yoyo&&0!==(1&w),P=b===(this._yoyo&&0!==(1&this._cycle)),C=this._totalTime,k=this._cycle,S=this._rawPrevTime,A=this._time;if(this._totalTime=w*_,this._cycle<w?b=!b:this._totalTime+=_,this._time=m,this._rawPrevTime=0===_?T-1e-4:T,this._cycle=w,this._locked=!0,m=b?0:_,this.render(m,e,0===_),e||this._gc||this.vars.onRepeat&&this._callback("onRepeat"),m!==this._time)return;if(P&&(m=b?_+1e-4:-1e-4,this.render(m,!0,!1)),this._locked=!1,this._paused&&!x)return;this._time=A,this._totalTime=C,this._cycle=k,this._rawPrevTime=S}if(!(this._time!==m&&this._first||i||h||f))return void(g!==this._totalTime&&this._onUpdate&&(e||this._callback("onUpdate")));if(this._initted||(this._initted=!0),this._active||!this._paused&&this._totalTime!==g&&t>0&&(this._active=!0),0===g&&this.vars.onStart&&(0===this._totalTime&&this._totalDuration||e||this._callback("onStart")),p=this._time,p>=m)for(n=this._first;n&&(o=n._next,p===this._time&&(!this._paused||x));)(n._active||n._startTime<=this._time&&!n._paused&&!n._gc)&&(f===n&&this.pause(),n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)),n=o;else for(n=this._last;n&&(o=n._prev,p===this._time&&(!this._paused||x));){if(n._active||n._startTime<=m&&!n._paused&&!n._gc){if(f===n){for(f=n._prev;f&&f.endTime()>this._time;)f.render(f._reversed?f.totalDuration()-(t-f._startTime)*f._timeScale:(t-f._startTime)*f._timeScale,e,i),f=f._prev;f=null,this.pause()}n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)}n=o}this._onUpdate&&(e||(a.length&&l(),this._callback("onUpdate"))),u&&(this._locked||this._gc||v!==this._startTime&&y===this._timeScale||(0===this._time||d>=this.totalDuration())&&(r&&(a.length&&l(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[u]&&this._callback(u)))},c.getActive=function(t,e,i){null==t&&(t=!0),null==e&&(e=!0),null==i&&(i=!1);var n,r,s=[],o=this.getChildren(t,e,i),a=0,l=o.length;for(n=0;n<l;n++)r=o[n],r.isActive()&&(s[a++]=r);return s},c.getLabelAfter=function(t){t||0!==t&&(t=this._time);var e,i=this.getLabelsArray(),n=i.length;for(e=0;e<n;e++)if(i[e].time>t)return i[e].name;return null},c.getLabelBefore=function(t){null==t&&(t=this._time);for(var e=this.getLabelsArray(),i=e.length;--i>-1;)if(e[i].time<t)return e[i].name;return null},c.getLabelsArray=function(){var t,e=[],i=0;for(t in this._labels)e[i++]={time:this._labels[t],name:t};return e.sort(function(t,e){return t.time-e.time}),e},c.progress=function(t,e){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!==(1&this._cycle)?1-t:t)+this._cycle*(this._duration+this._repeatDelay),e):this._time/this.duration()},c.totalProgress=function(t,e){return arguments.length?this.totalTime(this.totalDuration()*t,e):this._totalTime/this.totalDuration()},c.totalDuration=function(e){return arguments.length?this._repeat!==-1&&e?this.timeScale(this.totalDuration()/e):this:(this._dirty&&(t.prototype.totalDuration.call(this),this._totalDuration=this._repeat===-1?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat),this._totalDuration)},c.time=function(t,e){return arguments.length?(this._dirty&&this.totalDuration(),t>this._duration&&(t=this._duration),this._yoyo&&0!==(1&this._cycle)?t=this._duration-t+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(t+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(t,e)):this._time},c.repeat=function(t){return arguments.length?(this._repeat=t,this._uncache(!0)):this._repeat},c.repeatDelay=function(t){return arguments.length?(this._repeatDelay=t,this._uncache(!0)):this._repeatDelay},c.yoyo=function(t){return arguments.length?(this._yoyo=t,this):this._yoyo},c.currentLabel=function(t){return arguments.length?this.seek(t,!0):this.getLabelBefore(this._time+1e-8)},r},!0),function(){var t=180/Math.PI,e=[],n=[],r=[],s={},o=i._gsDefine.globals,a=function(t,e,i,n){i===n&&(i=n-(n-e)/1e6),t===e&&(e=t+(i-t)/1e6),this.a=t,this.b=e,this.c=i,this.d=n,this.da=n-t,this.ca=i-t,this.ba=e-t},l=",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,",u=function(t,e,i,n){var r={a:t},s={},o={},a={c:n},l=(t+e)/2,u=(e+i)/2,h=(i+n)/2,c=(l+u)/2,f=(u+h)/2,p=(f-c)/8;return r.b=l+(t-l)/4,s.b=c+p,r.c=s.a=(r.b+s.b)/2,s.c=o.a=(c+f)/2,o.b=f-p,a.b=h+(n-h)/4,o.c=a.a=(o.b+a.b)/2,[r,s,o,a]},h=function(t,i,s,o,a){var l,h,c,f,p,d,_,m,g,v,y,T,x,w=t.length-1,b=0,P=t[0].a;for(l=0;l<w;l++)p=t[b],h=p.a,c=p.d,
f=t[b+1].d,a?(y=e[l],T=n[l],x=(T+y)*i*.25/(o?.5:r[l]||.5),d=c-(c-h)*(o?.5*i:0!==y?x/y:0),_=c+(f-c)*(o?.5*i:0!==T?x/T:0),m=c-(d+((_-d)*(3*y/(y+T)+.5)/4||0))):(d=c-(c-h)*i*.5,_=c+(f-c)*i*.5,m=c-(d+_)/2),d+=m,_+=m,p.c=g=d,0!==l?p.b=P:p.b=P=p.a+.6*(p.c-p.a),p.da=c-h,p.ca=g-h,p.ba=P-h,s?(v=u(h,P,g,c),t.splice(b,1,v[0],v[1],v[2],v[3]),b+=4):b++,P=_;p=t[b],p.b=P,p.c=P+.4*(p.d-P),p.da=p.d-p.a,p.ca=p.c-p.a,p.ba=P-p.a,s&&(v=u(p.a,P,p.c,p.d),t.splice(b,1,v[0],v[1],v[2],v[3]))},c=function(t,i,r,s){var o,l,u,h,c,f,p=[];if(s)for(t=[s].concat(t),l=t.length;--l>-1;)"string"==typeof(f=t[l][i])&&"="===f.charAt(1)&&(t[l][i]=s[i]+Number(f.charAt(0)+f.substr(2)));if(o=t.length-2,o<0)return p[0]=new a(t[0][i],0,0,t[o<-1?0:1][i]),p;for(l=0;l<o;l++)u=t[l][i],h=t[l+1][i],p[l]=new a(u,0,0,h),r&&(c=t[l+2][i],e[l]=(e[l]||0)+(h-u)*(h-u),n[l]=(n[l]||0)+(c-h)*(c-h));return p[l]=new a(t[l][i],0,0,t[l+1][i]),p},f=function(t,i,o,a,u,f){var p,d,_,m,g,v,y,T,x={},w=[],b=f||t[0];u="string"==typeof u?","+u+",":l,null==i&&(i=1);for(d in t[0])w.push(d);if(t.length>1){for(T=t[t.length-1],y=!0,p=w.length;--p>-1;)if(d=w[p],Math.abs(b[d]-T[d])>.05){y=!1;break}y&&(t=t.concat(),f&&t.unshift(f),t.push(t[1]),f=t[t.length-3])}for(e.length=n.length=r.length=0,p=w.length;--p>-1;)d=w[p],s[d]=u.indexOf(","+d+",")!==-1,x[d]=c(t,d,s[d],f);for(p=e.length;--p>-1;)e[p]=Math.sqrt(e[p]),n[p]=Math.sqrt(n[p]);if(!a){for(p=w.length;--p>-1;)if(s[d])for(_=x[w[p]],v=_.length-1,m=0;m<v;m++)g=_[m+1].da/n[m]+_[m].da/e[m]||0,r[m]=(r[m]||0)+g*g;for(p=r.length;--p>-1;)r[p]=Math.sqrt(r[p])}for(p=w.length,m=o?4:1;--p>-1;)d=w[p],_=x[d],h(_,i,o,a,s[d]),y&&(_.splice(0,m),_.splice(_.length-m,m));return x},p=function(t,e,i){e=e||"soft";var n,r,s,o,l,u,h,c,f,p,d,_={},m="cubic"===e?3:2,g="soft"===e,v=[];if(g&&i&&(t=[i].concat(t)),null==t||t.length<m+1)throw"invalid Bezier data";for(f in t[0])v.push(f);for(u=v.length;--u>-1;){for(f=v[u],_[f]=l=[],p=0,c=t.length,h=0;h<c;h++)n=null==i?t[h][f]:"string"==typeof(d=t[h][f])&&"="===d.charAt(1)?i[f]+Number(d.charAt(0)+d.substr(2)):Number(d),g&&h>1&&h<c-1&&(l[p++]=(n+l[p-2])/2),l[p++]=n;for(c=p-m+1,p=0,h=0;h<c;h+=m)n=l[h],r=l[h+1],s=l[h+2],o=2===m?0:l[h+3],l[p++]=d=3===m?new a(n,r,s,o):new a(n,(2*r+n)/3,(2*r+s)/3,s);l.length=p}return _},d=function(t,e,i){for(var n,r,s,o,a,l,u,h,c,f,p,d=1/i,_=t.length;--_>-1;)for(f=t[_],s=f.a,o=f.d-s,a=f.c-s,l=f.b-s,n=r=0,h=1;h<=i;h++)u=d*h,c=1-u,n=r-(r=(u*u*o+3*c*(u*a+c*l))*u),p=_*i+h-1,e[p]=(e[p]||0)+n*n},_=function(t,e){e=e>>0||6;var i,n,r,s,o=[],a=[],l=0,u=0,h=e-1,c=[],f=[];for(i in t)d(t[i],o,e);for(r=o.length,n=0;n<r;n++)l+=Math.sqrt(o[n]),s=n%e,f[s]=l,s===h&&(u+=l,s=n/e>>0,c[s]=f,a[s]=u,l=0,f=[]);return{length:u,lengths:a,segments:c}},m=i._gsDefine.plugin({propName:"bezier",priority:-1,version:"1.3.7",API:2,global:!0,init:function(t,e,i){this._target=t,e instanceof Array&&(e={values:e}),this._func={},this._mod={},this._props=[],this._timeRes=null==e.timeResolution?6:parseInt(e.timeResolution,10);var n,r,s,o,a,l=e.values||[],u={},h=l[0],c=e.autoRotate||i.vars.orientToBezier;this._autoRotate=c?c instanceof Array?c:[["x","y","rotation",c===!0?0:Number(c)||0]]:null;for(n in h)this._props.push(n);for(s=this._props.length;--s>-1;)n=this._props[s],this._overwriteProps.push(n),r=this._func[n]="function"==typeof t[n],u[n]=r?t[n.indexOf("set")||"function"!=typeof t["get"+n.substr(3)]?n:"get"+n.substr(3)]():parseFloat(t[n]),a||u[n]!==l[0][n]&&(a=u);if(this._beziers="cubic"!==e.type&&"quadratic"!==e.type&&"soft"!==e.type?f(l,isNaN(e.curviness)?1:e.curviness,!1,"thruBasic"===e.type,e.correlate,a):p(l,e.type,u),this._segCount=this._beziers[n].length,this._timeRes){var d=_(this._beziers,this._timeRes);this._length=d.length,this._lengths=d.lengths,this._segments=d.segments,this._l1=this._li=this._s1=this._si=0,this._l2=this._lengths[0],this._curSeg=this._segments[0],this._s2=this._curSeg[0],this._prec=1/this._curSeg.length}if(c=this._autoRotate)for(this._initialRotations=[],c[0]instanceof Array||(this._autoRotate=c=[c]),s=c.length;--s>-1;){for(o=0;o<3;o++)n=c[s][o],this._func[n]="function"==typeof t[n]&&t[n.indexOf("set")||"function"!=typeof t["get"+n.substr(3)]?n:"get"+n.substr(3)];n=c[s][2],this._initialRotations[s]=(this._func[n]?this._func[n].call(this._target):this._target[n])||0,this._overwriteProps.push(n)}return this._startRatio=i.vars.runBackwards?1:0,!0},set:function(e){var i,n,r,s,o,a,l,u,h,c,f=this._segCount,p=this._func,d=this._target,_=e!==this._startRatio;if(this._timeRes){if(h=this._lengths,c=this._curSeg,e*=this._length,r=this._li,e>this._l2&&r<f-1){for(u=f-1;r<u&&(this._l2=h[++r])<=e;);this._l1=h[r-1],this._li=r,this._curSeg=c=this._segments[r],this._s2=c[this._s1=this._si=0]}else if(e<this._l1&&r>0){for(;r>0&&(this._l1=h[--r])>=e;);0===r&&e<this._l1?this._l1=0:r++,this._l2=h[r],this._li=r,this._curSeg=c=this._segments[r],this._s1=c[(this._si=c.length-1)-1]||0,this._s2=c[this._si]}if(i=r,e-=this._l1,r=this._si,e>this._s2&&r<c.length-1){for(u=c.length-1;r<u&&(this._s2=c[++r])<=e;);this._s1=c[r-1],this._si=r}else if(e<this._s1&&r>0){for(;r>0&&(this._s1=c[--r])>=e;);0===r&&e<this._s1?this._s1=0:r++,this._s2=c[r],this._si=r}a=(r+(e-this._s1)/(this._s2-this._s1))*this._prec||0}else i=e<0?0:e>=1?f-1:f*e>>0,a=(e-i*(1/f))*f;for(n=1-a,r=this._props.length;--r>-1;)s=this._props[r],o=this._beziers[s][i],l=(a*a*o.da+3*n*(a*o.ca+n*o.ba))*a+o.a,this._mod[s]&&(l=this._mod[s](l,d)),p[s]?d[s](l):d[s]=l;if(this._autoRotate){var m,g,v,y,T,x,w,b=this._autoRotate;for(r=b.length;--r>-1;)s=b[r][2],x=b[r][3]||0,w=b[r][4]===!0?1:t,o=this._beziers[b[r][0]],m=this._beziers[b[r][1]],o&&m&&(o=o[i],m=m[i],g=o.a+(o.b-o.a)*a,y=o.b+(o.c-o.b)*a,g+=(y-g)*a,y+=(o.c+(o.d-o.c)*a-y)*a,v=m.a+(m.b-m.a)*a,T=m.b+(m.c-m.b)*a,v+=(T-v)*a,T+=(m.c+(m.d-m.c)*a-T)*a,l=_?Math.atan2(T-v,y-g)*w+x:this._initialRotations[r],this._mod[s]&&(l=this._mod[s](l,d)),p[s]?d[s](l):d[s]=l)}}}),g=m.prototype;m.bezierThrough=f,m.cubicToQuadratic=u,m._autoCSS=!0,m.quadraticToCubic=function(t,e,i){return new a(t,(2*e+t)/3,(2*e+i)/3,i)},m._cssRegister=function(){var t=o.CSSPlugin;if(t){var e=t._internals,i=e._parseToProxy,n=e._setPluginRatio,r=e.CSSPropTween;e._registerComplexSpecialProp("bezier",{parser:function(t,e,s,o,a,l){e instanceof Array&&(e={values:e}),l=new m;var u,h,c,f=e.values,p=f.length-1,d=[],_={};if(p<0)return a;for(u=0;u<=p;u++)c=i(t,f[u],o,a,l,p!==u),d[u]=c.end;for(h in e)_[h]=e[h];return _.values=d,a=new r(t,"bezier",0,0,c.pt,2),a.data=c,a.plugin=l,a.setRatio=n,0===_.autoRotate&&(_.autoRotate=!0),!_.autoRotate||_.autoRotate instanceof Array||(u=_.autoRotate===!0?0:Number(_.autoRotate),_.autoRotate=null!=c.end.left?[["left","top","rotation",u,!1]]:null!=c.end.x&&[["x","y","rotation",u,!1]]),_.autoRotate&&(o._transform||o._enableTransforms(!1),c.autoRotate=o._target._gsTransform,c.proxy.rotation=c.autoRotate.rotation||0,o._overwriteProps.push("rotation")),l._onInitTween(c.proxy,_,o._tween),a}})}},g._mod=function(t){for(var e,i=this._overwriteProps,n=i.length;--n>-1;)e=t[i[n]],e&&"function"==typeof e&&(this._mod[i[n]]=e)},g._kill=function(t){var e,i,n=this._props;for(e in this._beziers)if(e in t)for(delete this._beziers[e],delete this._func[e],i=n.length;--i>-1;)n[i]===e&&n.splice(i,1);if(n=this._autoRotate)for(i=n.length;--i>-1;)t[n[i][2]]&&n.splice(i,1);return this._super._kill.call(this,t)}}(),i._gsDefine("plugins.CSSPlugin",["plugins.TweenPlugin","TweenLite"],function(t,e){var n,r,s,o,a=function(){t.call(this,"css"),this._overwriteProps.length=0,this.setRatio=a.prototype.setRatio},l=i._gsDefine.globals,u={},h=a.prototype=new t("css");h.constructor=a,a.version="1.19.0",a.API=2,a.defaultTransformPerspective=0,a.defaultSkewType="compensated",a.defaultSmoothOrigin=!0,h="px",a.suffixMap={top:h,right:h,bottom:h,left:h,width:h,height:h,fontSize:h,padding:h,margin:h,perspective:h,lineHeight:""};var c,f,p,d,_,m,g,v,y=/(?:\-|\.|\b)(\d|\.|e\-)+/g,T=/(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g,x=/(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi,w=/(?![+-]?\d*\.?\d+|[+-]|e[+-]\d+)[^0-9]/g,b=/(?:\d|\-|\+|=|#|\.)*/g,P=/opacity *= *([^)]*)/i,C=/opacity:([^;]*)/i,k=/alpha\(opacity *=.+?\)/i,S=/^(rgb|hsl)/,A=/([A-Z])/g,O=/-([a-z])/gi,D=/(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi,R=function(t,e){return e.toUpperCase()},j=/(?:Left|Right|Width)/i,E=/(M11|M12|M21|M22)=[\d\-\.e]+/gi,N=/progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i,L=/,(?=[^\)]*(?:\(|$))/gi,M=/[\s,\(]/i,F=Math.PI/180,q=180/Math.PI,I={},z=document,B=function(t){return z.createElementNS?z.createElementNS("http://www.w3.org/1999/xhtml",t):z.createElement(t)},H=B("div"),X=B("img"),W=a._internals={_specialProps:u},U=navigator.userAgent,Y=function(){var t=U.indexOf("Android"),e=B("a");return p=U.indexOf("Safari")!==-1&&U.indexOf("Chrome")===-1&&(t===-1||Number(U.substr(t+8,1))>3),_=p&&Number(U.substr(U.indexOf("Version/")+8,1))<6,d=U.indexOf("Firefox")!==-1,(/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(U)||/Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(U))&&(m=parseFloat(RegExp.$1)),!!e&&(e.style.cssText="top:1px;opacity:.55;",/^0.55/.test(e.style.opacity))}(),$=function(t){return P.test("string"==typeof t?t:(t.currentStyle?t.currentStyle.filter:t.style.filter)||"")?parseFloat(RegExp.$1)/100:1},V=function(t){window.console&&console.log(t)},Q="",G="",K=function(t,e){e=e||H;var i,n,r=e.style;if(void 0!==r[t])return t;for(t=t.charAt(0).toUpperCase()+t.substr(1),i=["O","Moz","ms","Ms","Webkit"],n=5;--n>-1&&void 0===r[i[n]+t];);return n>=0?(G=3===n?"ms":i[n],Q="-"+G.toLowerCase()+"-",G+t):null},Z=z.defaultView?z.defaultView.getComputedStyle:function(){},J=a.getStyle=function(t,e,i,n,r){var s;return Y||"opacity"!==e?(!n&&t.style[e]?s=t.style[e]:(i=i||Z(t))?s=i[e]||i.getPropertyValue(e)||i.getPropertyValue(e.replace(A,"-$1").toLowerCase()):t.currentStyle&&(s=t.currentStyle[e]),null==r||s&&"none"!==s&&"auto"!==s&&"auto auto"!==s?s:r):$(t)},tt=W.convertToPixels=function(t,i,n,r,s){if("px"===r||!r)return n;if("auto"===r||!n)return 0;var o,l,u,h=j.test(i),c=t,f=H.style,p=n<0,d=1===n;if(p&&(n=-n),d&&(n*=100),"%"===r&&i.indexOf("border")!==-1)o=n/100*(h?t.clientWidth:t.clientHeight);else{if(f.cssText="border:0 solid red;position:"+J(t,"position")+";line-height:0;","%"!==r&&c.appendChild&&"v"!==r.charAt(0)&&"rem"!==r)f[h?"borderLeftWidth":"borderTopWidth"]=n+r;else{if(c=t.parentNode||z.body,l=c._gsCache,u=e.ticker.frame,l&&h&&l.time===u)return l.width*n/100;f[h?"width":"height"]=n+r}c.appendChild(H),o=parseFloat(H[h?"offsetWidth":"offsetHeight"]),c.removeChild(H),h&&"%"===r&&a.cacheWidths!==!1&&(l=c._gsCache=c._gsCache||{},l.time=u,l.width=o/n*100),0!==o||s||(o=tt(t,i,n,r,!0))}return d&&(o/=100),p?-o:o},et=W.calculateOffset=function(t,e,i){if("absolute"!==J(t,"position",i))return 0;var n="left"===e?"Left":"Top",r=J(t,"margin"+n,i);return t["offset"+n]-(tt(t,e,parseFloat(r),r.replace(b,""))||0)},it=function(t,e){var i,n,r,s={};if(e=e||Z(t,null))if(i=e.length)for(;--i>-1;)r=e[i],r.indexOf("-transform")!==-1&&Ot!==r||(s[r.replace(O,R)]=e.getPropertyValue(r));else for(i in e)i.indexOf("Transform")!==-1&&At!==i||(s[i]=e[i]);else if(e=t.currentStyle||t.style)for(i in e)"string"==typeof i&&void 0===s[i]&&(s[i.replace(O,R)]=e[i]);return Y||(s.opacity=$(t)),n=Ht(t,e,!1),s.rotation=n.rotation,s.skewX=n.skewX,s.scaleX=n.scaleX,s.scaleY=n.scaleY,s.x=n.x,s.y=n.y,Rt&&(s.z=n.z,s.rotationX=n.rotationX,s.rotationY=n.rotationY,s.scaleZ=n.scaleZ),s.filters&&delete s.filters,s},nt=function(t,e,i,n,r){var s,o,a,l={},u=t.style;for(o in i)"cssText"!==o&&"length"!==o&&isNaN(o)&&(e[o]!==(s=i[o])||r&&r[o])&&o.indexOf("Origin")===-1&&("number"!=typeof s&&"string"!=typeof s||(l[o]="auto"!==s||"left"!==o&&"top"!==o?""!==s&&"auto"!==s&&"none"!==s||"string"!=typeof e[o]||""===e[o].replace(w,"")?s:0:et(t,o),void 0!==u[o]&&(a=new vt(u,o,u[o],a))));if(n)for(o in n)"className"!==o&&(l[o]=n[o]);return{difs:l,firstMPT:a}},rt={width:["Left","Right"],height:["Top","Bottom"]},st=["marginLeft","marginRight","marginTop","marginBottom"],ot=function(t,e,i){if("svg"===(t.nodeName+"").toLowerCase())return(i||Z(t))[e]||0;if(t.getBBox&&It(t))return t.getBBox()[e]||0;var n=parseFloat("width"===e?t.offsetWidth:t.offsetHeight),r=rt[e],s=r.length;for(i=i||Z(t,null);--s>-1;)n-=parseFloat(J(t,"padding"+r[s],i,!0))||0,n-=parseFloat(J(t,"border"+r[s]+"Width",i,!0))||0;return n},at=function(t,e){if("contain"===t||"auto"===t||"auto auto"===t)return t+" ";null!=t&&""!==t||(t="0 0");var i,n=t.split(" "),r=t.indexOf("left")!==-1?"0%":t.indexOf("right")!==-1?"100%":n[0],s=t.indexOf("top")!==-1?"0%":t.indexOf("bottom")!==-1?"100%":n[1];if(n.length>3&&!e){for(n=t.split(", ").join(",").split(","),t=[],i=0;i<n.length;i++)t.push(at(n[i]));return t.join(",")}return null==s?s="center"===r?"50%":"0":"center"===s&&(s="50%"),("center"===r||isNaN(parseFloat(r))&&(r+"").indexOf("=")===-1)&&(r="50%"),t=r+" "+s+(n.length>2?" "+n[2]:""),e&&(e.oxp=r.indexOf("%")!==-1,e.oyp=s.indexOf("%")!==-1,e.oxr="="===r.charAt(1),e.oyr="="===s.charAt(1),e.ox=parseFloat(r.replace(w,"")),e.oy=parseFloat(s.replace(w,"")),e.v=t),e||t},lt=function(t,e){return"function"==typeof t&&(t=t(v,g)),"string"==typeof t&&"="===t.charAt(1)?parseInt(t.charAt(0)+"1",10)*parseFloat(t.substr(2)):parseFloat(t)-parseFloat(e)||0},ut=function(t,e){return"function"==typeof t&&(t=t(v,g)),null==t?e:"string"==typeof t&&"="===t.charAt(1)?parseInt(t.charAt(0)+"1",10)*parseFloat(t.substr(2))+e:parseFloat(t)||0},ht=function(t,e,i,n){var r,s,o,a,l,u=1e-6;return"function"==typeof t&&(t=t(v,g)),null==t?a=e:"number"==typeof t?a=t:(r=360,s=t.split("_"),l="="===t.charAt(1),o=(l?parseInt(t.charAt(0)+"1",10)*parseFloat(s[0].substr(2)):parseFloat(s[0]))*(t.indexOf("rad")===-1?1:q)-(l?0:e),s.length&&(n&&(n[i]=e+o),t.indexOf("short")!==-1&&(o%=r,o!==o%(r/2)&&(o=o<0?o+r:o-r)),t.indexOf("_cw")!==-1&&o<0?o=(o+9999999999*r)%r-(o/r|0)*r:t.indexOf("ccw")!==-1&&o>0&&(o=(o-9999999999*r)%r-(o/r|0)*r)),a=e+o),a<u&&a>-u&&(a=0),a},ct={aqua:[0,255,255],lime:[0,255,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,255],navy:[0,0,128],white:[255,255,255],fuchsia:[255,0,255],olive:[128,128,0],yellow:[255,255,0],orange:[255,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[255,0,0],pink:[255,192,203],cyan:[0,255,255],transparent:[255,255,255,0]},ft=function(t,e,i){return t=t<0?t+1:t>1?t-1:t,255*(6*t<1?e+(i-e)*t*6:t<.5?i:3*t<2?e+(i-e)*(2/3-t)*6:e)+.5|0},pt=a.parseColor=function(t,e){var i,n,r,s,o,a,l,u,h,c,f;if(t)if("number"==typeof t)i=[t>>16,t>>8&255,255&t];else{if(","===t.charAt(t.length-1)&&(t=t.substr(0,t.length-1)),ct[t])i=ct[t];else if("#"===t.charAt(0))4===t.length&&(n=t.charAt(1),r=t.charAt(2),s=t.charAt(3),t="#"+n+n+r+r+s+s),t=parseInt(t.substr(1),16),i=[t>>16,t>>8&255,255&t];else if("hsl"===t.substr(0,3))if(i=f=t.match(y),e){if(t.indexOf("=")!==-1)return t.match(T)}else o=Number(i[0])%360/360,a=Number(i[1])/100,l=Number(i[2])/100,r=l<=.5?l*(a+1):l+a-l*a,n=2*l-r,i.length>3&&(i[3]=Number(t[3])),i[0]=ft(o+1/3,n,r),i[1]=ft(o,n,r),i[2]=ft(o-1/3,n,r);else i=t.match(y)||ct.transparent;i[0]=Number(i[0]),i[1]=Number(i[1]),i[2]=Number(i[2]),i.length>3&&(i[3]=Number(i[3]))}else i=ct.black;return e&&!f&&(n=i[0]/255,r=i[1]/255,s=i[2]/255,u=Math.max(n,r,s),h=Math.min(n,r,s),l=(u+h)/2,u===h?o=a=0:(c=u-h,a=l>.5?c/(2-u-h):c/(u+h),o=u===n?(r-s)/c+(r<s?6:0):u===r?(s-n)/c+2:(n-r)/c+4,o*=60),i[0]=o+.5|0,i[1]=100*a+.5|0,i[2]=100*l+.5|0),i},dt=function(t,e){var i,n,r,s=t.match(_t)||[],o=0,a=s.length?"":t;for(i=0;i<s.length;i++)n=s[i],r=t.substr(o,t.indexOf(n,o)-o),o+=r.length+n.length,n=pt(n,e),3===n.length&&n.push(1),a+=r+(e?"hsla("+n[0]+","+n[1]+"%,"+n[2]+"%,"+n[3]:"rgba("+n.join(","))+")";return a+t.substr(o)},_t="(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3}){1,2}\\b";for(h in ct)_t+="|"+h+"\\b";_t=new RegExp(_t+")","gi"),a.colorStringFilter=function(t){var e,i=t[0]+t[1];_t.test(i)&&(e=i.indexOf("hsl(")!==-1||i.indexOf("hsla(")!==-1,t[0]=dt(t[0],e),t[1]=dt(t[1],e)),_t.lastIndex=0},e.defaultStringFilter||(e.defaultStringFilter=a.colorStringFilter);var mt=function(t,e,i,n){if(null==t)return function(t){return t};var r,s=e?(t.match(_t)||[""])[0]:"",o=t.split(s).join("").match(x)||[],a=t.substr(0,t.indexOf(o[0])),l=")"===t.charAt(t.length-1)?")":"",u=t.indexOf(" ")!==-1?" ":",",h=o.length,c=h>0?o[0].replace(y,""):"";return h?r=e?function(t){var e,f,p,d;if("number"==typeof t)t+=c;else if(n&&L.test(t)){for(d=t.replace(L,"|").split("|"),p=0;p<d.length;p++)d[p]=r(d[p]);return d.join(",")}if(e=(t.match(_t)||[s])[0],f=t.split(e).join("").match(x)||[],p=f.length,h>p--)for(;++p<h;)f[p]=i?f[(p-1)/2|0]:o[p];return a+f.join(u)+u+e+l+(t.indexOf("inset")!==-1?" inset":"")}:function(t){var e,s,f;if("number"==typeof t)t+=c;else if(n&&L.test(t)){for(s=t.replace(L,"|").split("|"),f=0;f<s.length;f++)s[f]=r(s[f]);return s.join(",")}if(e=t.match(x)||[],f=e.length,h>f--)for(;++f<h;)e[f]=i?e[(f-1)/2|0]:o[f];return a+e.join(u)+l}:function(t){return t}},gt=function(t){return t=t.split(","),function(e,i,n,r,s,o,a){var l,u=(i+"").split(" ");for(a={},l=0;l<4;l++)a[t[l]]=u[l]=u[l]||u[(l-1)/2>>0];return r.parse(e,a,s,o)}},vt=(W._setPluginRatio=function(t){this.plugin.setRatio(t);for(var e,i,n,r,s,o=this.data,a=o.proxy,l=o.firstMPT,u=1e-6;l;)e=a[l.v],l.r?e=Math.round(e):e<u&&e>-u&&(e=0),l.t[l.p]=e,l=l._next;if(o.autoRotate&&(o.autoRotate.rotation=o.mod?o.mod(a.rotation,this.t):a.rotation),1===t||0===t)for(l=o.firstMPT,s=1===t?"e":"b";l;){if(i=l.t,i.type){if(1===i.type){for(r=i.xs0+i.s+i.xs1,n=1;n<i.l;n++)r+=i["xn"+n]+i["xs"+(n+1)];i[s]=r}}else i[s]=i.s+i.xs0;l=l._next}},function(t,e,i,n,r){this.t=t,this.p=e,this.v=i,this.r=r,n&&(n._prev=this,this._next=n)}),yt=(W._parseToProxy=function(t,e,i,n,r,s){var o,a,l,u,h,c=n,f={},p={},d=i._transform,_=I;for(i._transform=null,I=e,n=h=i.parse(t,e,n,r),I=_,s&&(i._transform=d,c&&(c._prev=null,c._prev&&(c._prev._next=null)));n&&n!==c;){if(n.type<=1&&(a=n.p,p[a]=n.s+n.c,f[a]=n.s,s||(u=new vt(n,"s",a,u,n.r),n.c=0),1===n.type))for(o=n.l;--o>0;)l="xn"+o,a=n.p+"_"+l,p[a]=n.data[l],f[a]=n[l],s||(u=new vt(n,l,a,u,n.rxp[l]));n=n._next}return{proxy:f,end:p,firstMPT:u,pt:h}},W.CSSPropTween=function(t,e,i,r,s,a,l,u,h,c,f){this.t=t,this.p=e,this.s=i,this.c=r,this.n=l||e,t instanceof yt||o.push(this.n),this.r=u,this.type=a||0,h&&(this.pr=h,n=!0),this.b=void 0===c?i:c,this.e=void 0===f?i+r:f,s&&(this._next=s,s._prev=this)}),Tt=function(t,e,i,n,r,s){var o=new yt(t,e,i,n-i,r,(-1),s);return o.b=i,o.e=o.xs0=n,o},xt=a.parseComplex=function(t,e,i,n,r,s,o,l,u,h){i=i||s||"","function"==typeof n&&(n=n(v,g)),o=new yt(t,e,0,0,o,h?2:1,null,(!1),l,i,n),n+="",r&&_t.test(n+i)&&(n=[i,n],a.colorStringFilter(n),i=n[0],n=n[1]);var f,p,d,_,m,x,w,b,P,C,k,S,A,O=i.split(", ").join(",").split(" "),D=n.split(", ").join(",").split(" "),R=O.length,j=c!==!1;for(n.indexOf(",")===-1&&i.indexOf(",")===-1||(O=O.join(" ").replace(L,", ").split(" "),D=D.join(" ").replace(L,", ").split(" "),R=O.length),R!==D.length&&(O=(s||"").split(" "),R=O.length),o.plugin=u,o.setRatio=h,_t.lastIndex=0,f=0;f<R;f++)if(_=O[f],m=D[f],b=parseFloat(_),b||0===b)o.appendXtra("",b,lt(m,b),m.replace(T,""),j&&m.indexOf("px")!==-1,!0);else if(r&&_t.test(_))S=m.indexOf(")")+1,S=")"+(S?m.substr(S):""),A=m.indexOf("hsl")!==-1&&Y,_=pt(_,A),m=pt(m,A),P=_.length+m.length>6,P&&!Y&&0===m[3]?(o["xs"+o.l]+=o.l?" transparent":"transparent",o.e=o.e.split(D[f]).join("transparent")):(Y||(P=!1),A?o.appendXtra(P?"hsla(":"hsl(",_[0],lt(m[0],_[0]),",",!1,!0).appendXtra("",_[1],lt(m[1],_[1]),"%,",!1).appendXtra("",_[2],lt(m[2],_[2]),P?"%,":"%"+S,!1):o.appendXtra(P?"rgba(":"rgb(",_[0],m[0]-_[0],",",!0,!0).appendXtra("",_[1],m[1]-_[1],",",!0).appendXtra("",_[2],m[2]-_[2],P?",":S,!0),P&&(_=_.length<4?1:_[3],o.appendXtra("",_,(m.length<4?1:m[3])-_,S,!1))),_t.lastIndex=0;else if(x=_.match(y)){if(w=m.match(T),!w||w.length!==x.length)return o;for(d=0,p=0;p<x.length;p++)k=x[p],C=_.indexOf(k,d),o.appendXtra(_.substr(d,C-d),Number(k),lt(w[p],k),"",j&&"px"===_.substr(C+k.length,2),0===p),d=C+k.length;o["xs"+o.l]+=_.substr(d)}else o["xs"+o.l]+=o.l||o["xs"+o.l]?" "+m:m;if(n.indexOf("=")!==-1&&o.data){for(S=o.xs0+o.data.s,f=1;f<o.l;f++)S+=o["xs"+f]+o.data["xn"+f];o.e=S+o["xs"+f]}return o.l||(o.type=-1,o.xs0=o.e),o.xfirst||o},wt=9;for(h=yt.prototype,h.l=h.pr=0;--wt>0;)h["xn"+wt]=0,h["xs"+wt]="";h.xs0="",h._next=h._prev=h.xfirst=h.data=h.plugin=h.setRatio=h.rxp=null,h.appendXtra=function(t,e,i,n,r,s){var o=this,a=o.l;return o["xs"+a]+=s&&(a||o["xs"+a])?" "+t:t||"",i||0===a||o.plugin?(o.l++,o.type=o.setRatio?2:1,o["xs"+o.l]=n||"",a>0?(o.data["xn"+a]=e+i,o.rxp["xn"+a]=r,o["xn"+a]=e,o.plugin||(o.xfirst=new yt(o,"xn"+a,e,i,o.xfirst||o,0,o.n,r,o.pr),o.xfirst.xs0=0),o):(o.data={s:e+i},o.rxp={},o.s=e,o.c=i,o.r=r,o)):(o["xs"+a]+=e+(n||""),o)};var bt=function(t,e){e=e||{},this.p=e.prefix?K(t)||t:t,u[t]=u[this.p]=this,this.format=e.formatter||mt(e.defaultValue,e.color,e.collapsible,e.multi),e.parser&&(this.parse=e.parser),this.clrs=e.color,this.multi=e.multi,this.keyword=e.keyword,this.dflt=e.defaultValue,this.pr=e.priority||0},Pt=W._registerComplexSpecialProp=function(t,e,i){"object"!=typeof e&&(e={parser:i});var n,r,s=t.split(","),o=e.defaultValue;for(i=i||[o],n=0;n<s.length;n++)e.prefix=0===n&&e.prefix,e.defaultValue=i[n]||o,r=new bt(s[n],e)},Ct=W._registerPluginProp=function(t){if(!u[t]){var e=t.charAt(0).toUpperCase()+t.substr(1)+"Plugin";Pt(t,{parser:function(t,i,n,r,s,o,a){var h=l.com.greensock.plugins[e];return h?(h._cssRegister(),u[n].parse(t,i,n,r,s,o,a)):(V("Error: "+e+" js file not loaded."),s)}})}};h=bt.prototype,h.parseComplex=function(t,e,i,n,r,s){var o,a,l,u,h,c,f=this.keyword;if(this.multi&&(L.test(i)||L.test(e)?(a=e.replace(L,"|").split("|"),l=i.replace(L,"|").split("|")):f&&(a=[e],l=[i])),l){for(u=l.length>a.length?l.length:a.length,o=0;o<u;o++)e=a[o]=a[o]||this.dflt,i=l[o]=l[o]||this.dflt,f&&(h=e.indexOf(f),c=i.indexOf(f),h!==c&&(c===-1?a[o]=a[o].split(f).join(""):h===-1&&(a[o]+=" "+f)));e=a.join(", "),i=l.join(", ")}return xt(t,this.p,e,i,this.clrs,this.dflt,n,this.pr,r,s)},h.parse=function(t,e,i,n,r,o,a){return this.parseComplex(t.style,this.format(J(t,this.p,s,!1,this.dflt)),this.format(e),r,o)},a.registerSpecialProp=function(t,e,i){Pt(t,{parser:function(t,n,r,s,o,a,l){var u=new yt(t,r,0,0,o,2,r,(!1),i);return u.plugin=a,u.setRatio=e(t,n,s._tween,r),u},priority:i})},a.useSVGTransformAttr=p||d;var kt,St="scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(","),At=K("transform"),Ot=Q+"transform",Dt=K("transformOrigin"),Rt=null!==K("perspective"),jt=W.Transform=function(){this.perspective=parseFloat(a.defaultTransformPerspective)||0,this.force3D=!(a.defaultForce3D===!1||!Rt)&&(a.defaultForce3D||"auto")},Et=window.SVGElement,Nt=function(t,e,i){var n,r=z.createElementNS("http://www.w3.org/2000/svg",t),s=/([a-z])([A-Z])/g;for(n in i)r.setAttributeNS(null,n.replace(s,"$1-$2").toLowerCase(),i[n]);return e.appendChild(r),r},Lt=z.documentElement,Mt=function(){var t,e,i,n=m||/Android/i.test(U)&&!window.chrome;return z.createElementNS&&!n&&(t=Nt("svg",Lt),e=Nt("rect",t,{width:100,height:50,x:100}),i=e.getBoundingClientRect().width,e.style[Dt]="50% 50%",e.style[At]="scaleX(0.5)",n=i===e.getBoundingClientRect().width&&!(d&&Rt),Lt.removeChild(t)),n}(),Ft=function(t,e,i,n,r,s){var o,l,u,h,c,f,p,d,_,m,g,v,y,T,x=t._gsTransform,w=Bt(t,!0);x&&(y=x.xOrigin,T=x.yOrigin),(!n||(o=n.split(" ")).length<2)&&(p=t.getBBox(),e=at(e).split(" "),o=[(e[0].indexOf("%")!==-1?parseFloat(e[0])/100*p.width:parseFloat(e[0]))+p.x,(e[1].indexOf("%")!==-1?parseFloat(e[1])/100*p.height:parseFloat(e[1]))+p.y]),i.xOrigin=h=parseFloat(o[0]),i.yOrigin=c=parseFloat(o[1]),n&&w!==zt&&(f=w[0],p=w[1],d=w[2],_=w[3],m=w[4],g=w[5],v=f*_-p*d,l=h*(_/v)+c*(-d/v)+(d*g-_*m)/v,u=h*(-p/v)+c*(f/v)-(f*g-p*m)/v,h=i.xOrigin=o[0]=l,c=i.yOrigin=o[1]=u),x&&(s&&(i.xOffset=x.xOffset,i.yOffset=x.yOffset,x=i),r||r!==!1&&a.defaultSmoothOrigin!==!1?(l=h-y,u=c-T,x.xOffset+=l*w[0]+u*w[2]-l,x.yOffset+=l*w[1]+u*w[3]-u):x.xOffset=x.yOffset=0),s||t.setAttribute("data-svg-origin",o.join(" "))},qt=function(t){try{return t.getBBox()}catch(t){}},It=function(t){return!!(Et&&t.getBBox&&t.getCTM&&qt(t)&&(!t.parentNode||t.parentNode.getBBox&&t.parentNode.getCTM))},zt=[1,0,0,1,0,0],Bt=function(t,e){var i,n,r,s,o,a,l=t._gsTransform||new jt,u=1e5,h=t.style;if(At?n=J(t,Ot,null,!0):t.currentStyle&&(n=t.currentStyle.filter.match(E),n=n&&4===n.length?[n[0].substr(4),Number(n[2].substr(4)),Number(n[1].substr(4)),n[3].substr(4),l.x||0,l.y||0].join(","):""),i=!n||"none"===n||"matrix(1, 0, 0, 1, 0, 0)"===n,i&&At&&((a="none"===Z(t).display)||!t.parentNode)&&(a&&(s=h.display,h.display="block"),t.parentNode||(o=1,Lt.appendChild(t)),n=J(t,Ot,null,!0),i=!n||"none"===n||"matrix(1, 0, 0, 1, 0, 0)"===n,s?h.display=s:a&&Yt(h,"display"),o&&Lt.removeChild(t)),(l.svg||t.getBBox&&It(t))&&(i&&(h[At]+"").indexOf("matrix")!==-1&&(n=h[At],i=0),r=t.getAttribute("transform"),i&&r&&(r.indexOf("matrix")!==-1?(n=r,i=0):r.indexOf("translate")!==-1&&(n="matrix(1,0,0,1,"+r.match(/(?:\-|\b)[\d\-\.e]+\b/gi).join(",")+")",i=0))),i)return zt;for(r=(n||"").match(y)||[],wt=r.length;--wt>-1;)s=Number(r[wt]),r[wt]=(o=s-(s|=0))?(o*u+(o<0?-.5:.5)|0)/u+s:s;return e&&r.length>6?[r[0],r[1],r[4],r[5],r[12],r[13]]:r},Ht=W.getTransform=function(t,i,n,r){if(t._gsTransform&&n&&!r)return t._gsTransform;var s,o,l,u,h,c,f=n?t._gsTransform||new jt:new jt,p=f.scaleX<0,d=2e-5,_=1e5,m=Rt?parseFloat(J(t,Dt,i,!1,"0 0 0").split(" ")[2])||f.zOrigin||0:0,g=parseFloat(a.defaultTransformPerspective)||0;if(f.svg=!(!t.getBBox||!It(t)),f.svg&&(Ft(t,J(t,Dt,i,!1,"50% 50%")+"",f,t.getAttribute("data-svg-origin")),kt=a.useSVGTransformAttr||Mt),s=Bt(t),s!==zt){if(16===s.length){var v,y,T,x,w,b=s[0],P=s[1],C=s[2],k=s[3],S=s[4],A=s[5],O=s[6],D=s[7],R=s[8],j=s[9],E=s[10],N=s[12],L=s[13],M=s[14],F=s[11],I=Math.atan2(O,E);f.zOrigin&&(M=-f.zOrigin,N=R*M-s[12],L=j*M-s[13],M=E*M+f.zOrigin-s[14]),f.rotationX=I*q,I&&(x=Math.cos(-I),w=Math.sin(-I),v=S*x+R*w,y=A*x+j*w,T=O*x+E*w,R=S*-w+R*x,j=A*-w+j*x,E=O*-w+E*x,F=D*-w+F*x,S=v,A=y,O=T),I=Math.atan2(-C,E),f.rotationY=I*q,I&&(x=Math.cos(-I),w=Math.sin(-I),v=b*x-R*w,y=P*x-j*w,T=C*x-E*w,j=P*w+j*x,E=C*w+E*x,F=k*w+F*x,b=v,P=y,C=T),I=Math.atan2(P,b),f.rotation=I*q,I&&(x=Math.cos(-I),w=Math.sin(-I),b=b*x+S*w,y=P*x+A*w,A=P*-w+A*x,O=C*-w+O*x,P=y),f.rotationX&&Math.abs(f.rotationX)+Math.abs(f.rotation)>359.9&&(f.rotationX=f.rotation=0,f.rotationY=180-f.rotationY),f.scaleX=(Math.sqrt(b*b+P*P)*_+.5|0)/_,f.scaleY=(Math.sqrt(A*A+j*j)*_+.5|0)/_,f.scaleZ=(Math.sqrt(O*O+E*E)*_+.5|0)/_,f.rotationX||f.rotationY?f.skewX=0:(f.skewX=S||A?Math.atan2(S,A)*q+f.rotation:f.skewX||0,Math.abs(f.skewX)>90&&Math.abs(f.skewX)<270&&(p?(f.scaleX*=-1,f.skewX+=f.rotation<=0?180:-180,f.rotation+=f.rotation<=0?180:-180):(f.scaleY*=-1,f.skewX+=f.skewX<=0?180:-180))),f.perspective=F?1/(F<0?-F:F):0,f.x=N,f.y=L,f.z=M,f.svg&&(f.x-=f.xOrigin-(f.xOrigin*b-f.yOrigin*S),f.y-=f.yOrigin-(f.yOrigin*P-f.xOrigin*A))}else if(!Rt||r||!s.length||f.x!==s[4]||f.y!==s[5]||!f.rotationX&&!f.rotationY){var z=s.length>=6,B=z?s[0]:1,H=s[1]||0,X=s[2]||0,W=z?s[3]:1;f.x=s[4]||0,f.y=s[5]||0,l=Math.sqrt(B*B+H*H),u=Math.sqrt(W*W+X*X),h=B||H?Math.atan2(H,B)*q:f.rotation||0,c=X||W?Math.atan2(X,W)*q+h:f.skewX||0,Math.abs(c)>90&&Math.abs(c)<270&&(p?(l*=-1,c+=h<=0?180:-180,h+=h<=0?180:-180):(u*=-1,c+=c<=0?180:-180)),f.scaleX=l,f.scaleY=u,f.rotation=h,f.skewX=c,Rt&&(f.rotationX=f.rotationY=f.z=0,f.perspective=g,f.scaleZ=1),f.svg&&(f.x-=f.xOrigin-(f.xOrigin*B+f.yOrigin*X),f.y-=f.yOrigin-(f.xOrigin*H+f.yOrigin*W))}f.zOrigin=m;for(o in f)f[o]<d&&f[o]>-d&&(f[o]=0)}return n&&(t._gsTransform=f,f.svg&&(kt&&t.style[At]?e.delayedCall(.001,function(){Yt(t.style,At)}):!kt&&t.getAttribute("transform")&&e.delayedCall(.001,function(){t.removeAttribute("transform")}))),f},Xt=function(t){var e,i,n=this.data,r=-n.rotation*F,s=r+n.skewX*F,o=1e5,a=(Math.cos(r)*n.scaleX*o|0)/o,l=(Math.sin(r)*n.scaleX*o|0)/o,u=(Math.sin(s)*-n.scaleY*o|0)/o,h=(Math.cos(s)*n.scaleY*o|0)/o,c=this.t.style,f=this.t.currentStyle;if(f){i=l,l=-u,u=-i,e=f.filter,c.filter="";var p,d,_=this.t.offsetWidth,g=this.t.offsetHeight,v="absolute"!==f.position,y="progid:DXImageTransform.Microsoft.Matrix(M11="+a+", M12="+l+", M21="+u+", M22="+h,T=n.x+_*n.xPercent/100,x=n.y+g*n.yPercent/100;if(null!=n.ox&&(p=(n.oxp?_*n.ox*.01:n.ox)-_/2,d=(n.oyp?g*n.oy*.01:n.oy)-g/2,T+=p-(p*a+d*l),x+=d-(p*u+d*h)),v?(p=_/2,d=g/2,y+=", Dx="+(p-(p*a+d*l)+T)+", Dy="+(d-(p*u+d*h)+x)+")"):y+=", sizingMethod='auto expand')",e.indexOf("DXImageTransform.Microsoft.Matrix(")!==-1?c.filter=e.replace(N,y):c.filter=y+" "+e,0!==t&&1!==t||1===a&&0===l&&0===u&&1===h&&(v&&y.indexOf("Dx=0, Dy=0")===-1||P.test(e)&&100!==parseFloat(RegExp.$1)||e.indexOf(e.indexOf("Alpha"))===-1&&c.removeAttribute("filter")),!v){var w,C,k,S=m<8?1:-1;for(p=n.ieOffsetX||0,d=n.ieOffsetY||0,n.ieOffsetX=Math.round((_-((a<0?-a:a)*_+(l<0?-l:l)*g))/2+T),n.ieOffsetY=Math.round((g-((h<0?-h:h)*g+(u<0?-u:u)*_))/2+x),wt=0;wt<4;wt++)C=st[wt],w=f[C],i=w.indexOf("px")!==-1?parseFloat(w):tt(this.t,C,parseFloat(w),w.replace(b,""))||0,k=i!==n[C]?wt<2?-n.ieOffsetX:-n.ieOffsetY:wt<2?p-n.ieOffsetX:d-n.ieOffsetY,c[C]=(n[C]=Math.round(i-k*(0===wt||2===wt?1:S)))+"px"}}},Wt=W.set3DTransformRatio=W.setTransformRatio=function(t){var e,i,n,r,s,o,a,l,u,h,c,f,p,_,m,g,v,y,T,x,w,b,P,C=this.data,k=this.t.style,S=C.rotation,A=C.rotationX,O=C.rotationY,D=C.scaleX,R=C.scaleY,j=C.scaleZ,E=C.x,N=C.y,L=C.z,M=C.svg,q=C.perspective,I=C.force3D;if(((1===t||0===t)&&"auto"===I&&(this.tween._totalTime===this.tween._totalDuration||!this.tween._totalTime)||!I)&&!L&&!q&&!O&&!A&&1===j||kt&&M||!Rt)return void(S||C.skewX||M?(S*=F,b=C.skewX*F,P=1e5,e=Math.cos(S)*D,r=Math.sin(S)*D,i=Math.sin(S-b)*-R,s=Math.cos(S-b)*R,b&&"simple"===C.skewType&&(v=Math.tan(b-C.skewY*F),v=Math.sqrt(1+v*v),i*=v,s*=v,C.skewY&&(v=Math.tan(C.skewY*F),v=Math.sqrt(1+v*v),e*=v,r*=v)),M&&(E+=C.xOrigin-(C.xOrigin*e+C.yOrigin*i)+C.xOffset,N+=C.yOrigin-(C.xOrigin*r+C.yOrigin*s)+C.yOffset,kt&&(C.xPercent||C.yPercent)&&(_=this.t.getBBox(),E+=.01*C.xPercent*_.width,N+=.01*C.yPercent*_.height),_=1e-6,E<_&&E>-_&&(E=0),N<_&&N>-_&&(N=0)),T=(e*P|0)/P+","+(r*P|0)/P+","+(i*P|0)/P+","+(s*P|0)/P+","+E+","+N+")",M&&kt?this.t.setAttribute("transform","matrix("+T):k[At]=(C.xPercent||C.yPercent?"translate("+C.xPercent+"%,"+C.yPercent+"%) matrix(":"matrix(")+T):k[At]=(C.xPercent||C.yPercent?"translate("+C.xPercent+"%,"+C.yPercent+"%) matrix(":"matrix(")+D+",0,0,"+R+","+E+","+N+")");if(d&&(_=1e-4,D<_&&D>-_&&(D=j=2e-5),R<_&&R>-_&&(R=j=2e-5),!q||C.z||C.rotationX||C.rotationY||(q=0)),S||C.skewX)S*=F,m=e=Math.cos(S),g=r=Math.sin(S),C.skewX&&(S-=C.skewX*F,m=Math.cos(S),g=Math.sin(S),"simple"===C.skewType&&(v=Math.tan((C.skewX-C.skewY)*F),v=Math.sqrt(1+v*v),m*=v,g*=v,C.skewY&&(v=Math.tan(C.skewY*F),v=Math.sqrt(1+v*v),e*=v,r*=v))),i=-g,s=m;else{if(!(O||A||1!==j||q||M))return void(k[At]=(C.xPercent||C.yPercent?"translate("+C.xPercent+"%,"+C.yPercent+"%) translate3d(":"translate3d(")+E+"px,"+N+"px,"+L+"px)"+(1!==D||1!==R?" scale("+D+","+R+")":""));e=s=1,i=r=0}u=1,n=o=a=l=h=c=0,f=q?-1/q:0,p=C.zOrigin,_=1e-6,x=",",w="0",S=O*F,S&&(m=Math.cos(S),g=Math.sin(S),a=-g,h=f*-g,n=e*g,o=r*g,u=m,f*=m,e*=m,r*=m),S=A*F,S&&(m=Math.cos(S),g=Math.sin(S),v=i*m+n*g,y=s*m+o*g,l=u*g,c=f*g,n=i*-g+n*m,o=s*-g+o*m,u*=m,f*=m,i=v,s=y),1!==j&&(n*=j,o*=j,u*=j,f*=j),1!==R&&(i*=R,s*=R,l*=R,c*=R),1!==D&&(e*=D,r*=D,a*=D,h*=D),(p||M)&&(p&&(E+=n*-p,N+=o*-p,L+=u*-p+p),M&&(E+=C.xOrigin-(C.xOrigin*e+C.yOrigin*i)+C.xOffset,N+=C.yOrigin-(C.xOrigin*r+C.yOrigin*s)+C.yOffset),E<_&&E>-_&&(E=w),N<_&&N>-_&&(N=w),L<_&&L>-_&&(L=0)),T=C.xPercent||C.yPercent?"translate("+C.xPercent+"%,"+C.yPercent+"%) matrix3d(":"matrix3d(",T+=(e<_&&e>-_?w:e)+x+(r<_&&r>-_?w:r)+x+(a<_&&a>-_?w:a),T+=x+(h<_&&h>-_?w:h)+x+(i<_&&i>-_?w:i)+x+(s<_&&s>-_?w:s),A||O||1!==j?(T+=x+(l<_&&l>-_?w:l)+x+(c<_&&c>-_?w:c)+x+(n<_&&n>-_?w:n),T+=x+(o<_&&o>-_?w:o)+x+(u<_&&u>-_?w:u)+x+(f<_&&f>-_?w:f)+x):T+=",0,0,0,0,1,0,",T+=E+x+N+x+L+x+(q?1+-L/q:1)+")",k[At]=T};h=jt.prototype,h.x=h.y=h.z=h.skewX=h.skewY=h.rotation=h.rotationX=h.rotationY=h.zOrigin=h.xPercent=h.yPercent=h.xOffset=h.yOffset=0,h.scaleX=h.scaleY=h.scaleZ=1,Pt("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin",{
parser:function(t,e,i,n,r,o,l){if(n._lastParsedTransform===l)return r;n._lastParsedTransform=l;var u;"function"==typeof l[i]&&(u=l[i],l[i]=e);var h,c,f,p,d,_,m,y,T,x=t._gsTransform,w=t.style,b=1e-6,P=St.length,C=l,k={},S="transformOrigin",A=Ht(t,s,!0,C.parseTransform),O=C.transform&&("function"==typeof C.transform?C.transform(v,g):C.transform);if(n._transform=A,O&&"string"==typeof O&&At)c=H.style,c[At]=O,c.display="block",c.position="absolute",z.body.appendChild(H),h=Ht(H,null,!1),A.svg&&(_=A.xOrigin,m=A.yOrigin,h.x-=A.xOffset,h.y-=A.yOffset,(C.transformOrigin||C.svgOrigin)&&(O={},Ft(t,at(C.transformOrigin),O,C.svgOrigin,C.smoothOrigin,!0),_=O.xOrigin,m=O.yOrigin,h.x-=O.xOffset-A.xOffset,h.y-=O.yOffset-A.yOffset),(_||m)&&(y=Bt(H,!0),h.x-=_-(_*y[0]+m*y[2]),h.y-=m-(_*y[1]+m*y[3]))),z.body.removeChild(H),h.perspective||(h.perspective=A.perspective),null!=C.xPercent&&(h.xPercent=ut(C.xPercent,A.xPercent)),null!=C.yPercent&&(h.yPercent=ut(C.yPercent,A.yPercent));else if("object"==typeof C){if(h={scaleX:ut(null!=C.scaleX?C.scaleX:C.scale,A.scaleX),scaleY:ut(null!=C.scaleY?C.scaleY:C.scale,A.scaleY),scaleZ:ut(C.scaleZ,A.scaleZ),x:ut(C.x,A.x),y:ut(C.y,A.y),z:ut(C.z,A.z),xPercent:ut(C.xPercent,A.xPercent),yPercent:ut(C.yPercent,A.yPercent),perspective:ut(C.transformPerspective,A.perspective)},d=C.directionalRotation,null!=d)if("object"==typeof d)for(c in d)C[c]=d[c];else C.rotation=d;"string"==typeof C.x&&C.x.indexOf("%")!==-1&&(h.x=0,h.xPercent=ut(C.x,A.xPercent)),"string"==typeof C.y&&C.y.indexOf("%")!==-1&&(h.y=0,h.yPercent=ut(C.y,A.yPercent)),h.rotation=ht("rotation"in C?C.rotation:"shortRotation"in C?C.shortRotation+"_short":"rotationZ"in C?C.rotationZ:A.rotation-A.skewY,A.rotation-A.skewY,"rotation",k),Rt&&(h.rotationX=ht("rotationX"in C?C.rotationX:"shortRotationX"in C?C.shortRotationX+"_short":A.rotationX||0,A.rotationX,"rotationX",k),h.rotationY=ht("rotationY"in C?C.rotationY:"shortRotationY"in C?C.shortRotationY+"_short":A.rotationY||0,A.rotationY,"rotationY",k)),h.skewX=ht(C.skewX,A.skewX-A.skewY),(h.skewY=ht(C.skewY,A.skewY))&&(h.skewX+=h.skewY,h.rotation+=h.skewY)}for(Rt&&null!=C.force3D&&(A.force3D=C.force3D,p=!0),A.skewType=C.skewType||A.skewType||a.defaultSkewType,f=A.force3D||A.z||A.rotationX||A.rotationY||h.z||h.rotationX||h.rotationY||h.perspective,f||null==C.scale||(h.scaleZ=1);--P>-1;)T=St[P],O=h[T]-A[T],(O>b||O<-b||null!=C[T]||null!=I[T])&&(p=!0,r=new yt(A,T,A[T],O,r),T in k&&(r.e=k[T]),r.xs0=0,r.plugin=o,n._overwriteProps.push(r.n));return O=C.transformOrigin,A.svg&&(O||C.svgOrigin)&&(_=A.xOffset,m=A.yOffset,Ft(t,at(O),h,C.svgOrigin,C.smoothOrigin),r=Tt(A,"xOrigin",(x?A:h).xOrigin,h.xOrigin,r,S),r=Tt(A,"yOrigin",(x?A:h).yOrigin,h.yOrigin,r,S),_===A.xOffset&&m===A.yOffset||(r=Tt(A,"xOffset",x?_:A.xOffset,A.xOffset,r,S),r=Tt(A,"yOffset",x?m:A.yOffset,A.yOffset,r,S)),O=kt?null:"0px 0px"),(O||Rt&&f&&A.zOrigin)&&(At?(p=!0,T=Dt,O=(O||J(t,T,s,!1,"50% 50%"))+"",r=new yt(w,T,0,0,r,(-1),S),r.b=w[T],r.plugin=o,Rt?(c=A.zOrigin,O=O.split(" "),A.zOrigin=(O.length>2&&(0===c||"0px"!==O[2])?parseFloat(O[2]):c)||0,r.xs0=r.e=O[0]+" "+(O[1]||"50%")+" 0px",r=new yt(A,"zOrigin",0,0,r,(-1),r.n),r.b=c,r.xs0=r.e=A.zOrigin):r.xs0=r.e=O):at(O+"",A)),p&&(n._transformType=A.svg&&kt||!f&&3!==this._transformType?2:3),u&&(l[i]=u),r},prefix:!0}),Pt("boxShadow",{defaultValue:"0px 0px 0px 0px #999",prefix:!0,color:!0,multi:!0,keyword:"inset"}),Pt("borderRadius",{defaultValue:"0px",parser:function(t,e,i,n,o,a){e=this.format(e);var l,u,h,c,f,p,d,_,m,g,v,y,T,x,w,b,P=["borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius"],C=t.style;for(m=parseFloat(t.offsetWidth),g=parseFloat(t.offsetHeight),l=e.split(" "),u=0;u<P.length;u++)this.p.indexOf("border")&&(P[u]=K(P[u])),f=c=J(t,P[u],s,!1,"0px"),f.indexOf(" ")!==-1&&(c=f.split(" "),f=c[0],c=c[1]),p=h=l[u],d=parseFloat(f),y=f.substr((d+"").length),T="="===p.charAt(1),T?(_=parseInt(p.charAt(0)+"1",10),p=p.substr(2),_*=parseFloat(p),v=p.substr((_+"").length-(_<0?1:0))||""):(_=parseFloat(p),v=p.substr((_+"").length)),""===v&&(v=r[i]||y),v!==y&&(x=tt(t,"borderLeft",d,y),w=tt(t,"borderTop",d,y),"%"===v?(f=x/m*100+"%",c=w/g*100+"%"):"em"===v?(b=tt(t,"borderLeft",1,"em"),f=x/b+"em",c=w/b+"em"):(f=x+"px",c=w+"px"),T&&(p=parseFloat(f)+_+v,h=parseFloat(c)+_+v)),o=xt(C,P[u],f+" "+c,p+" "+h,!1,"0px",o);return o},prefix:!0,formatter:mt("0px 0px 0px 0px",!1,!0)}),Pt("borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius",{defaultValue:"0px",parser:function(t,e,i,n,r,o){return xt(t.style,i,this.format(J(t,i,s,!1,"0px 0px")),this.format(e),!1,"0px",r)},prefix:!0,formatter:mt("0px 0px",!1,!0)}),Pt("backgroundPosition",{defaultValue:"0 0",parser:function(t,e,i,n,r,o){var a,l,u,h,c,f,p="background-position",d=s||Z(t,null),_=this.format((d?m?d.getPropertyValue(p+"-x")+" "+d.getPropertyValue(p+"-y"):d.getPropertyValue(p):t.currentStyle.backgroundPositionX+" "+t.currentStyle.backgroundPositionY)||"0 0"),g=this.format(e);if(_.indexOf("%")!==-1!=(g.indexOf("%")!==-1)&&g.split(",").length<2&&(f=J(t,"backgroundImage").replace(D,""),f&&"none"!==f)){for(a=_.split(" "),l=g.split(" "),X.setAttribute("src",f),u=2;--u>-1;)_=a[u],h=_.indexOf("%")!==-1,h!==(l[u].indexOf("%")!==-1)&&(c=0===u?t.offsetWidth-X.width:t.offsetHeight-X.height,a[u]=h?parseFloat(_)/100*c+"px":parseFloat(_)/c*100+"%");_=a.join(" ")}return this.parseComplex(t.style,_,g,r,o)},formatter:at}),Pt("backgroundSize",{defaultValue:"0 0",formatter:function(t){return t+="",at(t.indexOf(" ")===-1?t+" "+t:t)}}),Pt("perspective",{defaultValue:"0px",prefix:!0}),Pt("perspectiveOrigin",{defaultValue:"50% 50%",prefix:!0}),Pt("transformStyle",{prefix:!0}),Pt("backfaceVisibility",{prefix:!0}),Pt("userSelect",{prefix:!0}),Pt("margin",{parser:gt("marginTop,marginRight,marginBottom,marginLeft")}),Pt("padding",{parser:gt("paddingTop,paddingRight,paddingBottom,paddingLeft")}),Pt("clip",{defaultValue:"rect(0px,0px,0px,0px)",parser:function(t,e,i,n,r,o){var a,l,u;return m<9?(l=t.currentStyle,u=m<8?" ":",",a="rect("+l.clipTop+u+l.clipRight+u+l.clipBottom+u+l.clipLeft+")",e=this.format(e).split(",").join(u)):(a=this.format(J(t,this.p,s,!1,this.dflt)),e=this.format(e)),this.parseComplex(t.style,a,e,r,o)}}),Pt("textShadow",{defaultValue:"0px 0px 0px #999",color:!0,multi:!0}),Pt("autoRound,strictUnits",{parser:function(t,e,i,n,r){return r}}),Pt("border",{defaultValue:"0px solid #000",parser:function(t,e,i,n,r,o){var a=J(t,"borderTopWidth",s,!1,"0px"),l=this.format(e).split(" "),u=l[0].replace(b,"");return"px"!==u&&(a=parseFloat(a)/tt(t,"borderTopWidth",1,u)+u),this.parseComplex(t.style,this.format(a+" "+J(t,"borderTopStyle",s,!1,"solid")+" "+J(t,"borderTopColor",s,!1,"#000")),l.join(" "),r,o)},color:!0,formatter:function(t){var e=t.split(" ");return e[0]+" "+(e[1]||"solid")+" "+(t.match(_t)||["#000"])[0]}}),Pt("borderWidth",{parser:gt("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth")}),Pt("float,cssFloat,styleFloat",{parser:function(t,e,i,n,r,s){var o=t.style,a="cssFloat"in o?"cssFloat":"styleFloat";return new yt(o,a,0,0,r,(-1),i,(!1),0,o[a],e)}});var Ut=function(t){var e,i=this.t,n=i.filter||J(this.data,"filter")||"",r=this.s+this.c*t|0;100===r&&(n.indexOf("atrix(")===-1&&n.indexOf("radient(")===-1&&n.indexOf("oader(")===-1?(i.removeAttribute("filter"),e=!J(this.data,"filter")):(i.filter=n.replace(k,""),e=!0)),e||(this.xn1&&(i.filter=n=n||"alpha(opacity="+r+")"),n.indexOf("pacity")===-1?0===r&&this.xn1||(i.filter=n+" alpha(opacity="+r+")"):i.filter=n.replace(P,"opacity="+r))};Pt("opacity,alpha,autoAlpha",{defaultValue:"1",parser:function(t,e,i,n,r,o){var a=parseFloat(J(t,"opacity",s,!1,"1")),l=t.style,u="autoAlpha"===i;return"string"==typeof e&&"="===e.charAt(1)&&(e=("-"===e.charAt(0)?-1:1)*parseFloat(e.substr(2))+a),u&&1===a&&"hidden"===J(t,"visibility",s)&&0!==e&&(a=0),Y?r=new yt(l,"opacity",a,e-a,r):(r=new yt(l,"opacity",100*a,100*(e-a),r),r.xn1=u?1:0,l.zoom=1,r.type=2,r.b="alpha(opacity="+r.s+")",r.e="alpha(opacity="+(r.s+r.c)+")",r.data=t,r.plugin=o,r.setRatio=Ut),u&&(r=new yt(l,"visibility",0,0,r,(-1),null,(!1),0,0!==a?"inherit":"hidden",0===e?"hidden":"inherit"),r.xs0="inherit",n._overwriteProps.push(r.n),n._overwriteProps.push(i)),r}});var Yt=function(t,e){e&&(t.removeProperty?("ms"!==e.substr(0,2)&&"webkit"!==e.substr(0,6)||(e="-"+e),t.removeProperty(e.replace(A,"-$1").toLowerCase())):t.removeAttribute(e))},$t=function(t){if(this.t._gsClassPT=this,1===t||0===t){this.t.setAttribute("class",0===t?this.b:this.e);for(var e=this.data,i=this.t.style;e;)e.v?i[e.p]=e.v:Yt(i,e.p),e=e._next;1===t&&this.t._gsClassPT===this&&(this.t._gsClassPT=null)}else this.t.getAttribute("class")!==this.e&&this.t.setAttribute("class",this.e)};Pt("className",{parser:function(t,e,i,r,o,a,l){var u,h,c,f,p,d=t.getAttribute("class")||"",_=t.style.cssText;if(o=r._classNamePT=new yt(t,i,0,0,o,2),o.setRatio=$t,o.pr=-11,n=!0,o.b=d,h=it(t,s),c=t._gsClassPT){for(f={},p=c.data;p;)f[p.p]=1,p=p._next;c.setRatio(1)}return t._gsClassPT=o,o.e="="!==e.charAt(1)?e:d.replace(new RegExp("(?:\\s|^)"+e.substr(2)+"(?![\\w-])"),"")+("+"===e.charAt(0)?" "+e.substr(2):""),t.setAttribute("class",o.e),u=nt(t,h,it(t),l,f),t.setAttribute("class",d),o.data=u.firstMPT,t.style.cssText=_,o=o.xfirst=r.parse(t,u.difs,o,a)}});var Vt=function(t){if((1===t||0===t)&&this.data._totalTime===this.data._totalDuration&&"isFromStart"!==this.data.data){var e,i,n,r,s,o=this.t.style,a=u.transform.parse;if("all"===this.e)o.cssText="",r=!0;else for(e=this.e.split(" ").join("").split(","),n=e.length;--n>-1;)i=e[n],u[i]&&(u[i].parse===a?r=!0:i="transformOrigin"===i?Dt:u[i].p),Yt(o,i);r&&(Yt(o,At),s=this.t._gsTransform,s&&(s.svg&&(this.t.removeAttribute("data-svg-origin"),this.t.removeAttribute("transform")),delete this.t._gsTransform))}};for(Pt("clearProps",{parser:function(t,e,i,r,s){return s=new yt(t,i,0,0,s,2),s.setRatio=Vt,s.e=e,s.pr=-10,s.data=r._tween,n=!0,s}}),h="bezier,throwProps,physicsProps,physics2D".split(","),wt=h.length;wt--;)Ct(h[wt]);h=a.prototype,h._firstPT=h._lastParsedTransform=h._transform=null,h._onInitTween=function(t,e,i,l){if(!t.nodeType)return!1;this._target=g=t,this._tween=i,this._vars=e,v=l,c=e.autoRound,n=!1,r=e.suffixMap||a.suffixMap,s=Z(t,""),o=this._overwriteProps;var h,d,m,y,T,x,w,b,P,k=t.style;if(f&&""===k.zIndex&&(h=J(t,"zIndex",s),"auto"!==h&&""!==h||this._addLazySet(k,"zIndex",0)),"string"==typeof e&&(y=k.cssText,h=it(t,s),k.cssText=y+";"+e,h=nt(t,h,it(t)).difs,!Y&&C.test(e)&&(h.opacity=parseFloat(RegExp.$1)),e=h,k.cssText=y),e.className?this._firstPT=d=u.className.parse(t,e.className,"className",this,null,null,e):this._firstPT=d=this.parse(t,e,null),this._transformType){for(P=3===this._transformType,At?p&&(f=!0,""===k.zIndex&&(w=J(t,"zIndex",s),"auto"!==w&&""!==w||this._addLazySet(k,"zIndex",0)),_&&this._addLazySet(k,"WebkitBackfaceVisibility",this._vars.WebkitBackfaceVisibility||(P?"visible":"hidden"))):k.zoom=1,m=d;m&&m._next;)m=m._next;b=new yt(t,"transform",0,0,null,2),this._linkCSSP(b,null,m),b.setRatio=At?Wt:Xt,b.data=this._transform||Ht(t,s,!0),b.tween=i,b.pr=-1,o.pop()}if(n){for(;d;){for(x=d._next,m=y;m&&m.pr>d.pr;)m=m._next;(d._prev=m?m._prev:T)?d._prev._next=d:y=d,(d._next=m)?m._prev=d:T=d,d=x}this._firstPT=y}return!0},h.parse=function(t,e,i,n){var o,a,l,h,f,p,d,_,m,y,T=t.style;for(o in e)p=e[o],"function"==typeof p&&(p=p(v,g)),a=u[o],a?i=a.parse(t,p,o,this,i,n,e):(f=J(t,o,s)+"",m="string"==typeof p,"color"===o||"fill"===o||"stroke"===o||o.indexOf("Color")!==-1||m&&S.test(p)?(m||(p=pt(p),p=(p.length>3?"rgba(":"rgb(")+p.join(",")+")"),i=xt(T,o,f,p,!0,"transparent",i,0,n)):m&&M.test(p)?i=xt(T,o,f,p,!0,null,i,0,n):(l=parseFloat(f),d=l||0===l?f.substr((l+"").length):"",""!==f&&"auto"!==f||("width"===o||"height"===o?(l=ot(t,o,s),d="px"):"left"===o||"top"===o?(l=et(t,o,s),d="px"):(l="opacity"!==o?0:1,d="")),y=m&&"="===p.charAt(1),y?(h=parseInt(p.charAt(0)+"1",10),p=p.substr(2),h*=parseFloat(p),_=p.replace(b,"")):(h=parseFloat(p),_=m?p.replace(b,""):""),""===_&&(_=o in r?r[o]:d),p=h||0===h?(y?h+l:h)+_:e[o],d!==_&&""!==_&&(h||0===h)&&l&&(l=tt(t,o,l,d),"%"===_?(l/=tt(t,o,100,"%")/100,e.strictUnits!==!0&&(f=l+"%")):"em"===_||"rem"===_||"vw"===_||"vh"===_?l/=tt(t,o,1,_):"px"!==_&&(h=tt(t,o,h,_),_="px"),y&&(h||0===h)&&(p=h+l+_)),y&&(h+=l),!l&&0!==l||!h&&0!==h?void 0!==T[o]&&(p||p+""!="NaN"&&null!=p)?(i=new yt(T,o,h||l||0,0,i,(-1),o,(!1),0,f,p),i.xs0="none"!==p||"display"!==o&&o.indexOf("Style")===-1?p:f):V("invalid "+o+" tween value: "+e[o]):(i=new yt(T,o,l,h-l,i,0,o,c!==!1&&("px"===_||"zIndex"===o),0,f,p),i.xs0=_))),n&&i&&!i.plugin&&(i.plugin=n);return i},h.setRatio=function(t){var e,i,n,r=this._firstPT,s=1e-6;if(1!==t||this._tween._time!==this._tween._duration&&0!==this._tween._time)if(t||this._tween._time!==this._tween._duration&&0!==this._tween._time||this._tween._rawPrevTime===-1e-6)for(;r;){if(e=r.c*t+r.s,r.r?e=Math.round(e):e<s&&e>-s&&(e=0),r.type)if(1===r.type)if(n=r.l,2===n)r.t[r.p]=r.xs0+e+r.xs1+r.xn1+r.xs2;else if(3===n)r.t[r.p]=r.xs0+e+r.xs1+r.xn1+r.xs2+r.xn2+r.xs3;else if(4===n)r.t[r.p]=r.xs0+e+r.xs1+r.xn1+r.xs2+r.xn2+r.xs3+r.xn3+r.xs4;else if(5===n)r.t[r.p]=r.xs0+e+r.xs1+r.xn1+r.xs2+r.xn2+r.xs3+r.xn3+r.xs4+r.xn4+r.xs5;else{for(i=r.xs0+e+r.xs1,n=1;n<r.l;n++)i+=r["xn"+n]+r["xs"+(n+1)];r.t[r.p]=i}else r.type===-1?r.t[r.p]=r.xs0:r.setRatio&&r.setRatio(t);else r.t[r.p]=e+r.xs0;r=r._next}else for(;r;)2!==r.type?r.t[r.p]=r.b:r.setRatio(t),r=r._next;else for(;r;){if(2!==r.type)if(r.r&&r.type!==-1)if(e=Math.round(r.s+r.c),r.type){if(1===r.type){for(n=r.l,i=r.xs0+e+r.xs1,n=1;n<r.l;n++)i+=r["xn"+n]+r["xs"+(n+1)];r.t[r.p]=i}}else r.t[r.p]=e+r.xs0;else r.t[r.p]=r.e;else r.setRatio(t);r=r._next}},h._enableTransforms=function(t){this._transform=this._transform||Ht(this._target,s,!0),this._transformType=this._transform.svg&&kt||!t&&3!==this._transformType?2:3};var Qt=function(t){this.t[this.p]=this.e,this.data._linkCSSP(this,this._next,null,!0)};h._addLazySet=function(t,e,i){var n=this._firstPT=new yt(t,e,0,0,this._firstPT,2);n.e=i,n.setRatio=Qt,n.data=this},h._linkCSSP=function(t,e,i,n){return t&&(e&&(e._prev=t),t._next&&(t._next._prev=t._prev),t._prev?t._prev._next=t._next:this._firstPT===t&&(this._firstPT=t._next,n=!0),i?i._next=t:n||null!==this._firstPT||(this._firstPT=t),t._next=e,t._prev=i),t},h._mod=function(t){for(var e=this._firstPT;e;)"function"==typeof t[e.p]&&t[e.p]===Math.round&&(e.r=1),e=e._next},h._kill=function(e){var i,n,r,s=e;if(e.autoAlpha||e.alpha){s={};for(n in e)s[n]=e[n];s.opacity=1,s.autoAlpha&&(s.visibility=1)}for(e.className&&(i=this._classNamePT)&&(r=i.xfirst,r&&r._prev?this._linkCSSP(r._prev,i._next,r._prev._prev):r===this._firstPT&&(this._firstPT=i._next),i._next&&this._linkCSSP(i._next,i._next._next,r._prev),this._classNamePT=null),i=this._firstPT;i;)i.plugin&&i.plugin!==n&&i.plugin._kill&&(i.plugin._kill(e),n=i.plugin),i=i._next;return t.prototype._kill.call(this,s)};var Gt=function(t,e,i){var n,r,s,o;if(t.slice)for(r=t.length;--r>-1;)Gt(t[r],e,i);else for(n=t.childNodes,r=n.length;--r>-1;)s=n[r],o=s.type,s.style&&(e.push(it(s)),i&&i.push(s)),1!==o&&9!==o&&11!==o||!s.childNodes.length||Gt(s,e,i)};return a.cascadeTo=function(t,i,n){var r,s,o,a,l=e.to(t,i,n),u=[l],h=[],c=[],f=[],p=e._internals.reservedProps;for(t=l._targets||l.target,Gt(t,h,f),l.render(i,!0,!0),Gt(t,c),l.render(0,!0,!0),l._enabled(!0),r=f.length;--r>-1;)if(s=nt(f[r],h[r],c[r]),s.firstMPT){s=s.difs;for(o in n)p[o]&&(s[o]=n[o]);a={};for(o in s)a[o]=h[r][o];u.push(e.fromTo(f[r],i,a,s))}return u},t.activate([a]),a},!0),function(){var t=i._gsDefine.plugin({propName:"roundProps",version:"1.6.0",priority:-1,API:2,init:function(t,e,i){return this._tween=i,!0}}),e=function(t){for(;t;)t.f||t.blob||(t.m=Math.round),t=t._next},n=t.prototype;n._onInitAllProps=function(){for(var t,i,n,r=this._tween,s=r.vars.roundProps.join?r.vars.roundProps:r.vars.roundProps.split(","),o=s.length,a={},l=r._propLookup.roundProps;--o>-1;)a[s[o]]=Math.round;for(o=s.length;--o>-1;)for(t=s[o],i=r._firstPT;i;)n=i._next,i.pg?i.t._mod(a):i.n===t&&(2===i.f&&i.t?e(i.t._firstPT):(this._add(i.t,t,i.s,i.c),n&&(n._prev=i._prev),i._prev?i._prev._next=n:r._firstPT===i&&(r._firstPT=n),i._next=i._prev=null,r._propLookup[t]=l)),i=n;return!1},n._add=function(t,e,i,n){this._addTween(t,e,i,i+n,e,Math.round),this._overwriteProps.push(e)}}(),function(){i._gsDefine.plugin({propName:"attr",API:2,version:"0.6.0",init:function(t,e,i,n){var r,s;if("function"!=typeof t.setAttribute)return!1;for(r in e)s=e[r],"function"==typeof s&&(s=s(n,t)),this._addTween(t,"setAttribute",t.getAttribute(r)+"",s+"",r,!1,r),this._overwriteProps.push(r);return!0}})}(),i._gsDefine.plugin({propName:"directionalRotation",version:"0.3.0",API:2,init:function(t,e,i,n){"object"!=typeof e&&(e={rotation:e}),this.finals={};var r,s,o,a,l,u,h=e.useRadians===!0?2*Math.PI:360,c=1e-6;for(r in e)"useRadians"!==r&&(a=e[r],"function"==typeof a&&(a=a(n,t)),u=(a+"").split("_"),s=u[0],o=parseFloat("function"!=typeof t[r]?t[r]:t[r.indexOf("set")||"function"!=typeof t["get"+r.substr(3)]?r:"get"+r.substr(3)]()),a=this.finals[r]="string"==typeof s&&"="===s.charAt(1)?o+parseInt(s.charAt(0)+"1",10)*Number(s.substr(2)):Number(s)||0,l=a-o,u.length&&(s=u.join("_"),s.indexOf("short")!==-1&&(l%=h,l!==l%(h/2)&&(l=l<0?l+h:l-h)),s.indexOf("_cw")!==-1&&l<0?l=(l+9999999999*h)%h-(l/h|0)*h:s.indexOf("ccw")!==-1&&l>0&&(l=(l-9999999999*h)%h-(l/h|0)*h)),(l>c||l<-c)&&(this._addTween(t,r,o,o+l,r),this._overwriteProps.push(r)));return!0},set:function(t){var e;if(1!==t)this._super.setRatio.call(this,t);else for(e=this._firstPT;e;)e.f?e.t[e.p](this.finals[e.p]):e.t[e.p]=this.finals[e.p],e=e._next}})._autoCSS=!0,i._gsDefine("easing.Back",["easing.Ease"],function(t){var e,n,r,s=i.GreenSockGlobals||i,o=s.com.greensock,a=2*Math.PI,l=Math.PI/2,u=o._class,h=function(e,i){var n=u("easing."+e,function(){},!0),r=n.prototype=new t;return r.constructor=n,r.getRatio=i,n},c=t.register||function(){},f=function(t,e,i,n,r){var s=u("easing."+t,{easeOut:new e,easeIn:new i,easeInOut:new n},!0);return c(s,t),s},p=function(t,e,i){this.t=t,this.v=e,i&&(this.next=i,i.prev=this,this.c=i.v-e,this.gap=i.t-t)},d=function(e,i){var n=u("easing."+e,function(t){this._p1=t||0===t?t:1.70158,this._p2=1.525*this._p1},!0),r=n.prototype=new t;return r.constructor=n,r.getRatio=i,r.config=function(t){return new n(t)},n},_=f("Back",d("BackOut",function(t){return(t-=1)*t*((this._p1+1)*t+this._p1)+1}),d("BackIn",function(t){return t*t*((this._p1+1)*t-this._p1)}),d("BackInOut",function(t){return(t*=2)<1?.5*t*t*((this._p2+1)*t-this._p2):.5*((t-=2)*t*((this._p2+1)*t+this._p2)+2)})),m=u("easing.SlowMo",function(t,e,i){e=e||0===e?e:.7,null==t?t=.7:t>1&&(t=1),this._p=1!==t?e:0,this._p1=(1-t)/2,this._p2=t,this._p3=this._p1+this._p2,this._calcEnd=i===!0},!0),g=m.prototype=new t;return g.constructor=m,g.getRatio=function(t){var e=t+(.5-t)*this._p;return t<this._p1?this._calcEnd?1-(t=1-t/this._p1)*t:e-(t=1-t/this._p1)*t*t*t*e:t>this._p3?this._calcEnd?1-(t=(t-this._p3)/this._p1)*t:e+(t-e)*(t=(t-this._p3)/this._p1)*t*t*t:this._calcEnd?1:e},m.ease=new m(.7,.7),g.config=m.config=function(t,e,i){return new m(t,e,i)},e=u("easing.SteppedEase",function(t){t=t||1,this._p1=1/t,this._p2=t+1},!0),g=e.prototype=new t,g.constructor=e,g.getRatio=function(t){return t<0?t=0:t>=1&&(t=.999999999),(this._p2*t>>0)*this._p1},g.config=e.config=function(t){return new e(t)},n=u("easing.RoughEase",function(e){e=e||{};for(var i,n,r,s,o,a,l=e.taper||"none",u=[],h=0,c=0|(e.points||20),f=c,d=e.randomize!==!1,_=e.clamp===!0,m=e.template instanceof t?e.template:null,g="number"==typeof e.strength?.4*e.strength:.4;--f>-1;)i=d?Math.random():1/c*f,n=m?m.getRatio(i):i,"none"===l?r=g:"out"===l?(s=1-i,r=s*s*g):"in"===l?r=i*i*g:i<.5?(s=2*i,r=s*s*.5*g):(s=2*(1-i),r=s*s*.5*g),d?n+=Math.random()*r-.5*r:f%2?n+=.5*r:n-=.5*r,_&&(n>1?n=1:n<0&&(n=0)),u[h++]={x:i,y:n};for(u.sort(function(t,e){return t.x-e.x}),a=new p(1,1,null),f=c;--f>-1;)o=u[f],a=new p(o.x,o.y,a);this._prev=new p(0,0,0!==a.t?a:a.next)},!0),g=n.prototype=new t,g.constructor=n,g.getRatio=function(t){var e=this._prev;if(t>e.t){for(;e.next&&t>=e.t;)e=e.next;e=e.prev}else for(;e.prev&&t<=e.t;)e=e.prev;return this._prev=e,e.v+(t-e.t)/e.gap*e.c},g.config=function(t){return new n(t)},n.ease=new n,f("Bounce",h("BounceOut",function(t){return t<1/2.75?7.5625*t*t:t<2/2.75?7.5625*(t-=1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375}),h("BounceIn",function(t){return(t=1-t)<1/2.75?1-7.5625*t*t:t<2/2.75?1-(7.5625*(t-=1.5/2.75)*t+.75):t<2.5/2.75?1-(7.5625*(t-=2.25/2.75)*t+.9375):1-(7.5625*(t-=2.625/2.75)*t+.984375)}),h("BounceInOut",function(t){var e=t<.5;return t=e?1-2*t:2*t-1,t=t<1/2.75?7.5625*t*t:t<2/2.75?7.5625*(t-=1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375,e?.5*(1-t):.5*t+.5})),f("Circ",h("CircOut",function(t){return Math.sqrt(1-(t-=1)*t)}),h("CircIn",function(t){return-(Math.sqrt(1-t*t)-1)}),h("CircInOut",function(t){return(t*=2)<1?-.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-=2)*t)+1)})),r=function(e,i,n){var r=u("easing."+e,function(t,e){this._p1=t>=1?t:1,this._p2=(e||n)/(t<1?t:1),this._p3=this._p2/a*(Math.asin(1/this._p1)||0),this._p2=a/this._p2},!0),s=r.prototype=new t;return s.constructor=r,s.getRatio=i,s.config=function(t,e){return new r(t,e)},r},f("Elastic",r("ElasticOut",function(t){return this._p1*Math.pow(2,-10*t)*Math.sin((t-this._p3)*this._p2)+1},.3),r("ElasticIn",function(t){return-(this._p1*Math.pow(2,10*(t-=1))*Math.sin((t-this._p3)*this._p2))},.3),r("ElasticInOut",function(t){return(t*=2)<1?-.5*(this._p1*Math.pow(2,10*(t-=1))*Math.sin((t-this._p3)*this._p2)):this._p1*Math.pow(2,-10*(t-=1))*Math.sin((t-this._p3)*this._p2)*.5+1},.45)),f("Expo",h("ExpoOut",function(t){return 1-Math.pow(2,-10*t)}),h("ExpoIn",function(t){return Math.pow(2,10*(t-1))-.001}),h("ExpoInOut",function(t){return(t*=2)<1?.5*Math.pow(2,10*(t-1)):.5*(2-Math.pow(2,-10*(t-1)))})),f("Sine",h("SineOut",function(t){return Math.sin(t*l)}),h("SineIn",function(t){return-Math.cos(t*l)+1}),h("SineInOut",function(t){return-.5*(Math.cos(Math.PI*t)-1)})),u("easing.EaseLookup",{find:function(e){return t.map[e]}},!0),c(s.SlowMo,"SlowMo","ease,"),c(n,"RoughEase","ease,"),c(e,"SteppedEase","ease,"),_},!0)}),i._gsDefine&&i._gsQueue.pop()(),function(t,i){"use strict";var n={},r=t.GreenSockGlobals=t.GreenSockGlobals||t;if(!r.TweenLite){var s,o,a,l,u,h=function(t){var e,i=t.split("."),n=r;for(e=0;e<i.length;e++)n[i[e]]=n=n[i[e]]||{};return n},c=h("com.greensock"),f=1e-10,p=function(t){var e,i=[],n=t.length;for(e=0;e!==n;i.push(t[e++]));return i},d=function(){},_=function(){var t=Object.prototype.toString,e=t.call([]);return function(i){return null!=i&&(i instanceof Array||"object"==typeof i&&!!i.push&&t.call(i)===e)}}(),m={},g=function(s,o,a,l){this.sc=m[s]?m[s].sc:[],m[s]=this,this.gsClass=null,this.func=a;var u=[];this.check=function(c){for(var f,p,d,_,v,y=o.length,T=y;--y>-1;)(f=m[o[y]]||new g(o[y],[])).gsClass?(u[y]=f.gsClass,T--):c&&f.sc.push(this);if(0===T&&a){if(p=("com.greensock."+s).split("."),d=p.pop(),_=h(p.join("."))[d]=this.gsClass=a.apply(a,u),l)if(r[d]=n[d]=_,v="undefined"!=typeof e&&e.exports,!v&&"function"==typeof define&&define.amd)define((t.GreenSockAMDPath?t.GreenSockAMDPath+"/":"")+s.split(".").pop(),[],function(){return _});else if(v)if(s===i){e.exports=n[i]=_;for(y in n)_[y]=n[y]}else n[i]&&(n[i][d]=_);for(y=0;y<this.sc.length;y++)this.sc[y].check()}},this.check(!0)},v=t._gsDefine=function(t,e,i,n){return new g(t,e,i,n)},y=c._class=function(t,e,i){return e=e||function(){},v(t,[],function(){return e},i),e};v.globals=r;var T=[0,0,1,1],x=y("easing.Ease",function(t,e,i,n){this._func=t,this._type=i||0,this._power=n||0,this._params=e?T.concat(e):T},!0),w=x.map={},b=x.register=function(t,e,i,n){for(var r,s,o,a,l=e.split(","),u=l.length,h=(i||"easeIn,easeOut,easeInOut").split(",");--u>-1;)for(s=l[u],r=n?y("easing."+s,null,!0):c.easing[s]||{},o=h.length;--o>-1;)a=h[o],w[s+"."+a]=w[a+s]=r[a]=t.getRatio?t:t[a]||new t};for(a=x.prototype,a._calcEnd=!1,a.getRatio=function(t){if(this._func)return this._params[0]=t,this._func.apply(null,this._params);var e=this._type,i=this._power,n=1===e?1-t:2===e?t:t<.5?2*t:2*(1-t);return 1===i?n*=n:2===i?n*=n*n:3===i?n*=n*n*n:4===i&&(n*=n*n*n*n),1===e?1-n:2===e?n:t<.5?n/2:1-n/2},s=["Linear","Quad","Cubic","Quart","Quint,Strong"],o=s.length;--o>-1;)a=s[o]+",Power"+o,b(new x(null,null,1,o),a,"easeOut",!0),b(new x(null,null,2,o),a,"easeIn"+(0===o?",easeNone":"")),b(new x(null,null,3,o),a,"easeInOut");w.linear=c.easing.Linear.easeIn,w.swing=c.easing.Quad.easeInOut;var P=y("events.EventDispatcher",function(t){this._listeners={},this._eventTarget=t||this});a=P.prototype,a.addEventListener=function(t,e,i,n,r){r=r||0;var s,o,a=this._listeners[t],h=0;for(this!==l||u||l.wake(),null==a&&(this._listeners[t]=a=[]),o=a.length;--o>-1;)s=a[o],s.c===e&&s.s===i?a.splice(o,1):0===h&&s.pr<r&&(h=o+1);a.splice(h,0,{c:e,s:i,up:n,pr:r})},a.removeEventListener=function(t,e){var i,n=this._listeners[t];if(n)for(i=n.length;--i>-1;)if(n[i].c===e)return void n.splice(i,1)},a.dispatchEvent=function(t){var e,i,n,r=this._listeners[t];if(r)for(e=r.length,e>1&&(r=r.slice(0)),i=this._eventTarget;--e>-1;)n=r[e],n&&(n.up?n.c.call(n.s||i,{type:t,target:i}):n.c.call(n.s||i))};var C=t.requestAnimationFrame,k=t.cancelAnimationFrame,S=Date.now||function(){return(new Date).getTime()},A=S();for(s=["ms","moz","webkit","o"],o=s.length;--o>-1&&!C;)C=t[s[o]+"RequestAnimationFrame"],k=t[s[o]+"CancelAnimationFrame"]||t[s[o]+"CancelRequestAnimationFrame"];y("Ticker",function(t,e){var i,n,r,s,o,a=this,h=S(),c=!(e===!1||!C)&&"auto",p=500,_=33,m="tick",g=function(t){var e,l,u=S()-A;u>p&&(h+=u-_),A+=u,a.time=(A-h)/1e3,e=a.time-o,(!i||e>0||t===!0)&&(a.frame++,o+=e+(e>=s?.004:s-e),l=!0),t!==!0&&(r=n(g)),l&&a.dispatchEvent(m)};P.call(a),a.time=a.frame=0,a.tick=function(){g(!0)},a.lagSmoothing=function(t,e){p=t||1/f,_=Math.min(e,p,0)},a.sleep=function(){null!=r&&(c&&k?k(r):clearTimeout(r),n=d,r=null,a===l&&(u=!1))},a.wake=function(t){null!==r?a.sleep():t?h+=-A+(A=S()):a.frame>10&&(A=S()-p+5),n=0===i?d:c&&C?C:function(t){return setTimeout(t,1e3*(o-a.time)+1|0)},a===l&&(u=!0),g(2)},a.fps=function(t){return arguments.length?(i=t,s=1/(i||60),o=this.time+s,void a.wake()):i},a.useRAF=function(t){return arguments.length?(a.sleep(),c=t,void a.fps(i)):c},a.fps(t),setTimeout(function(){"auto"===c&&a.frame<5&&"hidden"!==document.visibilityState&&a.useRAF(!1)},1500)}),a=c.Ticker.prototype=new c.events.EventDispatcher,a.constructor=c.Ticker;var O=y("core.Animation",function(t,e){if(this.vars=e=e||{},this._duration=this._totalDuration=t||0,this._delay=Number(e.delay)||0,this._timeScale=1,this._active=e.immediateRender===!0,this.data=e.data,this._reversed=e.reversed===!0,V){u||l.wake();var i=this.vars.useFrames?$:V;i.add(this,i._time),this.vars.paused&&this.paused(!0)}});l=O.ticker=new c.Ticker,a=O.prototype,a._dirty=a._gc=a._initted=a._paused=!1,a._totalTime=a._time=0,a._rawPrevTime=-1,a._next=a._last=a._onUpdate=a._timeline=a.timeline=null,a._paused=!1;var D=function(){u&&S()-A>2e3&&l.wake(),setTimeout(D,2e3)};D(),a.play=function(t,e){return null!=t&&this.seek(t,e),this.reversed(!1).paused(!1)},a.pause=function(t,e){return null!=t&&this.seek(t,e),this.paused(!0)},a.resume=function(t,e){return null!=t&&this.seek(t,e),this.paused(!1)},a.seek=function(t,e){return this.totalTime(Number(t),e!==!1)},a.restart=function(t,e){return this.reversed(!1).paused(!1).totalTime(t?-this._delay:0,e!==!1,!0)},a.reverse=function(t,e){return null!=t&&this.seek(t||this.totalDuration(),e),this.reversed(!0).paused(!1)},a.render=function(t,e,i){},a.invalidate=function(){return this._time=this._totalTime=0,this._initted=this._gc=!1,this._rawPrevTime=-1,!this._gc&&this.timeline||this._enabled(!0),this},a.isActive=function(){var t,e=this._timeline,i=this._startTime;return!e||!this._gc&&!this._paused&&e.isActive()&&(t=e.rawTime())>=i&&t<i+this.totalDuration()/this._timeScale},a._enabled=function(t,e){return u||l.wake(),this._gc=!t,this._active=this.isActive(),e!==!0&&(t&&!this.timeline?this._timeline.add(this,this._startTime-this._delay):!t&&this.timeline&&this._timeline._remove(this,!0)),!1},a._kill=function(t,e){return this._enabled(!1,!1)},a.kill=function(t,e){return this._kill(t,e),this},a._uncache=function(t){for(var e=t?this:this.timeline;e;)e._dirty=!0,e=e.timeline;return this},a._swapSelfInParams=function(t){for(var e=t.length,i=t.concat();--e>-1;)"{self}"===t[e]&&(i[e]=this);return i},a._callback=function(t){var e=this.vars,i=e[t],n=e[t+"Params"],r=e[t+"Scope"]||e.callbackScope||this,s=n?n.length:0;switch(s){case 0:i.call(r);break;case 1:i.call(r,n[0]);break;case 2:i.call(r,n[0],n[1]);break;default:i.apply(r,n)}},a.eventCallback=function(t,e,i,n){if("on"===(t||"").substr(0,2)){var r=this.vars;if(1===arguments.length)return r[t];null==e?delete r[t]:(r[t]=e,r[t+"Params"]=_(i)&&i.join("").indexOf("{self}")!==-1?this._swapSelfInParams(i):i,r[t+"Scope"]=n),"onUpdate"===t&&(this._onUpdate=e)}return this},a.delay=function(t){return arguments.length?(this._timeline.smoothChildTiming&&this.startTime(this._startTime+t-this._delay),this._delay=t,this):this._delay},a.duration=function(t){return arguments.length?(this._duration=this._totalDuration=t,this._uncache(!0),this._timeline.smoothChildTiming&&this._time>0&&this._time<this._duration&&0!==t&&this.totalTime(this._totalTime*(t/this._duration),!0),this):(this._dirty=!1,this._duration)},a.totalDuration=function(t){return this._dirty=!1,arguments.length?this.duration(t):this._totalDuration},a.time=function(t,e){return arguments.length?(this._dirty&&this.totalDuration(),this.totalTime(t>this._duration?this._duration:t,e)):this._time},a.totalTime=function(t,e,i){if(u||l.wake(),!arguments.length)return this._totalTime;if(this._timeline){if(t<0&&!i&&(t+=this.totalDuration()),this._timeline.smoothChildTiming){this._dirty&&this.totalDuration();var n=this._totalDuration,r=this._timeline;if(t>n&&!i&&(t=n),this._startTime=(this._paused?this._pauseTime:r._time)-(this._reversed?n-t:t)/this._timeScale,r._dirty||this._uncache(!1),r._timeline)for(;r._timeline;)r._timeline._time!==(r._startTime+r._totalTime)/r._timeScale&&r.totalTime(r._totalTime,!0),r=r._timeline}this._gc&&this._enabled(!0,!1),this._totalTime===t&&0!==this._duration||(L.length&&G(),this.render(t,e,!1),L.length&&G())}return this},a.progress=a.totalProgress=function(t,e){var i=this.duration();return arguments.length?this.totalTime(i*t,e):i?this._time/i:this.ratio},a.startTime=function(t){return arguments.length?(t!==this._startTime&&(this._startTime=t,this.timeline&&this.timeline._sortChildren&&this.timeline.add(this,t-this._delay)),this):this._startTime},a.endTime=function(t){return this._startTime+(0!=t?this.totalDuration():this.duration())/this._timeScale},a.timeScale=function(t){if(!arguments.length)return this._timeScale;if(t=t||f,this._timeline&&this._timeline.smoothChildTiming){var e=this._pauseTime,i=e||0===e?e:this._timeline.totalTime();this._startTime=i-(i-this._startTime)*this._timeScale/t}return this._timeScale=t,this._uncache(!1)},a.reversed=function(t){return arguments.length?(t!=this._reversed&&(this._reversed=t,this.totalTime(this._timeline&&!this._timeline.smoothChildTiming?this.totalDuration()-this._totalTime:this._totalTime,!0)),this):this._reversed},a.paused=function(t){if(!arguments.length)return this._paused;var e,i,n=this._timeline;return t!=this._paused&&n&&(u||t||l.wake(),e=n.rawTime(),i=e-this._pauseTime,!t&&n.smoothChildTiming&&(this._startTime+=i,this._uncache(!1)),this._pauseTime=t?e:null,this._paused=t,this._active=this.isActive(),!t&&0!==i&&this._initted&&this.duration()&&(e=n.smoothChildTiming?this._totalTime:(e-this._startTime)/this._timeScale,this.render(e,e===this._totalTime,!0))),this._gc&&!t&&this._enabled(!0,!1),this};var R=y("core.SimpleTimeline",function(t){O.call(this,0,t),this.autoRemoveChildren=this.smoothChildTiming=!0});a=R.prototype=new O,a.constructor=R,a.kill()._gc=!1,a._first=a._last=a._recent=null,a._sortChildren=!1,a.add=a.insert=function(t,e,i,n){
var r,s;if(t._startTime=Number(e||0)+t._delay,t._paused&&this!==t._timeline&&(t._pauseTime=t._startTime+(this.rawTime()-t._startTime)/t._timeScale),t.timeline&&t.timeline._remove(t,!0),t.timeline=t._timeline=this,t._gc&&t._enabled(!0,!0),r=this._last,this._sortChildren)for(s=t._startTime;r&&r._startTime>s;)r=r._prev;return r?(t._next=r._next,r._next=t):(t._next=this._first,this._first=t),t._next?t._next._prev=t:this._last=t,t._prev=r,this._recent=t,this._timeline&&this._uncache(!0),this},a._remove=function(t,e){return t.timeline===this&&(e||t._enabled(!1,!0),t._prev?t._prev._next=t._next:this._first===t&&(this._first=t._next),t._next?t._next._prev=t._prev:this._last===t&&(this._last=t._prev),t._next=t._prev=t.timeline=null,t===this._recent&&(this._recent=this._last),this._timeline&&this._uncache(!0)),this},a.render=function(t,e,i){var n,r=this._first;for(this._totalTime=this._time=this._rawPrevTime=t;r;)n=r._next,(r._active||t>=r._startTime&&!r._paused)&&(r._reversed?r.render((r._dirty?r.totalDuration():r._totalDuration)-(t-r._startTime)*r._timeScale,e,i):r.render((t-r._startTime)*r._timeScale,e,i)),r=n},a.rawTime=function(){return u||l.wake(),this._totalTime};var j=y("TweenLite",function(e,i,n){if(O.call(this,i,n),this.render=j.prototype.render,null==e)throw"Cannot tween a null target.";this.target=e="string"!=typeof e?e:j.selector(e)||e;var r,s,o,a=e.jquery||e.length&&e!==t&&e[0]&&(e[0]===t||e[0].nodeType&&e[0].style&&!e.nodeType),l=this.vars.overwrite;if(this._overwrite=l=null==l?Y[j.defaultOverwrite]:"number"==typeof l?l>>0:Y[l],(a||e instanceof Array||e.push&&_(e))&&"number"!=typeof e[0])for(this._targets=o=p(e),this._propLookup=[],this._siblings=[],r=0;r<o.length;r++)s=o[r],s?"string"!=typeof s?s.length&&s!==t&&s[0]&&(s[0]===t||s[0].nodeType&&s[0].style&&!s.nodeType)?(o.splice(r--,1),this._targets=o=o.concat(p(s))):(this._siblings[r]=K(s,this,!1),1===l&&this._siblings[r].length>1&&J(s,this,null,1,this._siblings[r])):(s=o[r--]=j.selector(s),"string"==typeof s&&o.splice(r+1,1)):o.splice(r--,1);else this._propLookup={},this._siblings=K(e,this,!1),1===l&&this._siblings.length>1&&J(e,this,null,1,this._siblings);(this.vars.immediateRender||0===i&&0===this._delay&&this.vars.immediateRender!==!1)&&(this._time=-f,this.render(Math.min(0,-this._delay)))},!0),E=function(e){return e&&e.length&&e!==t&&e[0]&&(e[0]===t||e[0].nodeType&&e[0].style&&!e.nodeType)},N=function(t,e){var i,n={};for(i in t)U[i]||i in e&&"transform"!==i&&"x"!==i&&"y"!==i&&"width"!==i&&"height"!==i&&"className"!==i&&"border"!==i||!(!H[i]||H[i]&&H[i]._autoCSS)||(n[i]=t[i],delete t[i]);t.css=n};a=j.prototype=new O,a.constructor=j,a.kill()._gc=!1,a.ratio=0,a._firstPT=a._targets=a._overwrittenProps=a._startAt=null,a._notifyPluginsOfEnabled=a._lazy=!1,j.version="1.19.0",j.defaultEase=a._ease=new x(null,null,1,1),j.defaultOverwrite="auto",j.ticker=l,j.autoSleep=120,j.lagSmoothing=function(t,e){l.lagSmoothing(t,e)},j.selector=t.$||t.jQuery||function(e){var i=t.$||t.jQuery;return i?(j.selector=i,i(e)):"undefined"==typeof document?e:document.querySelectorAll?document.querySelectorAll(e):document.getElementById("#"===e.charAt(0)?e.substr(1):e)};var L=[],M={},F=/(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi,q=function(t){for(var e,i=this._firstPT,n=1e-6;i;)e=i.blob?t?this.join(""):this.start:i.c*t+i.s,i.m?e=i.m(e,this._target||i.t):e<n&&e>-n&&(e=0),i.f?i.fp?i.t[i.p](i.fp,e):i.t[i.p](e):i.t[i.p]=e,i=i._next},I=function(t,e,i,n){var r,s,o,a,l,u,h,c=[t,e],f=0,p="",d=0;for(c.start=t,i&&(i(c),t=c[0],e=c[1]),c.length=0,r=t.match(F)||[],s=e.match(F)||[],n&&(n._next=null,n.blob=1,c._firstPT=c._applyPT=n),l=s.length,a=0;a<l;a++)h=s[a],u=e.substr(f,e.indexOf(h,f)-f),p+=u||!a?u:",",f+=u.length,d?d=(d+1)%5:"rgba("===u.substr(-5)&&(d=1),h===r[a]||r.length<=a?p+=h:(p&&(c.push(p),p=""),o=parseFloat(r[a]),c.push(o),c._firstPT={_next:c._firstPT,t:c,p:c.length-1,s:o,c:("="===h.charAt(1)?parseInt(h.charAt(0)+"1",10)*parseFloat(h.substr(2)):parseFloat(h)-o)||0,f:0,m:d&&d<4?Math.round:0}),f+=h.length;return p+=e.substr(f),p&&c.push(p),c.setRatio=q,c},z=function(t,e,i,n,r,s,o,a,l){"function"==typeof n&&(n=n(l||0,t));var u,h,c="get"===i?t[e]:i,f=typeof t[e],p="string"==typeof n&&"="===n.charAt(1),d={t:t,p:e,s:c,f:"function"===f,pg:0,n:r||e,m:s?"function"==typeof s?s:Math.round:0,pr:0,c:p?parseInt(n.charAt(0)+"1",10)*parseFloat(n.substr(2)):parseFloat(n)-c||0};if("number"!==f&&("function"===f&&"get"===i&&(h=e.indexOf("set")||"function"!=typeof t["get"+e.substr(3)]?e:"get"+e.substr(3),d.s=c=o?t[h](o):t[h]()),"string"==typeof c&&(o||isNaN(c))?(d.fp=o,u=I(c,n,a||j.defaultStringFilter,d),d={t:u,p:"setRatio",s:0,c:1,f:2,pg:0,n:r||e,pr:0,m:0}):p||(d.s=parseFloat(c),d.c=parseFloat(n)-d.s||0)),d.c)return(d._next=this._firstPT)&&(d._next._prev=d),this._firstPT=d,d},B=j._internals={isArray:_,isSelector:E,lazyTweens:L,blobDif:I},H=j._plugins={},X=B.tweenLookup={},W=0,U=B.reservedProps={ease:1,delay:1,overwrite:1,onComplete:1,onCompleteParams:1,onCompleteScope:1,useFrames:1,runBackwards:1,startAt:1,onUpdate:1,onUpdateParams:1,onUpdateScope:1,onStart:1,onStartParams:1,onStartScope:1,onReverseComplete:1,onReverseCompleteParams:1,onReverseCompleteScope:1,onRepeat:1,onRepeatParams:1,onRepeatScope:1,easeParams:1,yoyo:1,immediateRender:1,repeat:1,repeatDelay:1,data:1,paused:1,reversed:1,autoCSS:1,lazy:1,onOverwrite:1,callbackScope:1,stringFilter:1,id:1},Y={none:0,all:1,auto:2,concurrent:3,allOnStart:4,preexisting:5,true:1,false:0},$=O._rootFramesTimeline=new R,V=O._rootTimeline=new R,Q=30,G=B.lazyRender=function(){var t,e=L.length;for(M={};--e>-1;)t=L[e],t&&t._lazy!==!1&&(t.render(t._lazy[0],t._lazy[1],!0),t._lazy=!1);L.length=0};V._startTime=l.time,$._startTime=l.frame,V._active=$._active=!0,setTimeout(G,1),O._updateRoot=j.render=function(){var t,e,i;if(L.length&&G(),V.render((l.time-V._startTime)*V._timeScale,!1,!1),$.render((l.frame-$._startTime)*$._timeScale,!1,!1),L.length&&G(),l.frame>=Q){Q=l.frame+(parseInt(j.autoSleep,10)||120);for(i in X){for(e=X[i].tweens,t=e.length;--t>-1;)e[t]._gc&&e.splice(t,1);0===e.length&&delete X[i]}if(i=V._first,(!i||i._paused)&&j.autoSleep&&!$._first&&1===l._listeners.tick.length){for(;i&&i._paused;)i=i._next;i||l.sleep()}}},l.addEventListener("tick",O._updateRoot);var K=function(t,e,i){var n,r,s=t._gsTweenID;if(X[s||(t._gsTweenID=s="t"+W++)]||(X[s]={target:t,tweens:[]}),e&&(n=X[s].tweens,n[r=n.length]=e,i))for(;--r>-1;)n[r]===e&&n.splice(r,1);return X[s].tweens},Z=function(t,e,i,n){var r,s,o=t.vars.onOverwrite;return o&&(r=o(t,e,i,n)),o=j.onOverwrite,o&&(s=o(t,e,i,n)),r!==!1&&s!==!1},J=function(t,e,i,n,r){var s,o,a,l;if(1===n||n>=4){for(l=r.length,s=0;s<l;s++)if((a=r[s])!==e)a._gc||a._kill(null,t,e)&&(o=!0);else if(5===n)break;return o}var u,h=e._startTime+f,c=[],p=0,d=0===e._duration;for(s=r.length;--s>-1;)(a=r[s])===e||a._gc||a._paused||(a._timeline!==e._timeline?(u=u||tt(e,0,d),0===tt(a,u,d)&&(c[p++]=a)):a._startTime<=h&&a._startTime+a.totalDuration()/a._timeScale>h&&((d||!a._initted)&&h-a._startTime<=2e-10||(c[p++]=a)));for(s=p;--s>-1;)if(a=c[s],2===n&&a._kill(i,t,e)&&(o=!0),2!==n||!a._firstPT&&a._initted){if(2!==n&&!Z(a,e))continue;a._enabled(!1,!1)&&(o=!0)}return o},tt=function(t,e,i){for(var n=t._timeline,r=n._timeScale,s=t._startTime;n._timeline;){if(s+=n._startTime,r*=n._timeScale,n._paused)return-100;n=n._timeline}return s/=r,s>e?s-e:i&&s===e||!t._initted&&s-e<2*f?f:(s+=t.totalDuration()/t._timeScale/r)>e+f?0:s-e-f};a._init=function(){var t,e,i,n,r,s,o=this.vars,a=this._overwrittenProps,l=this._duration,u=!!o.immediateRender,h=o.ease;if(o.startAt){this._startAt&&(this._startAt.render(-1,!0),this._startAt.kill()),r={};for(n in o.startAt)r[n]=o.startAt[n];if(r.overwrite=!1,r.immediateRender=!0,r.lazy=u&&o.lazy!==!1,r.startAt=r.delay=null,this._startAt=j.to(this.target,0,r),u)if(this._time>0)this._startAt=null;else if(0!==l)return}else if(o.runBackwards&&0!==l)if(this._startAt)this._startAt.render(-1,!0),this._startAt.kill(),this._startAt=null;else{0!==this._time&&(u=!1),i={};for(n in o)U[n]&&"autoCSS"!==n||(i[n]=o[n]);if(i.overwrite=0,i.data="isFromStart",i.lazy=u&&o.lazy!==!1,i.immediateRender=u,this._startAt=j.to(this.target,0,i),u){if(0===this._time)return}else this._startAt._init(),this._startAt._enabled(!1),this.vars.immediateRender&&(this._startAt=null)}if(this._ease=h=h?h instanceof x?h:"function"==typeof h?new x(h,o.easeParams):w[h]||j.defaultEase:j.defaultEase,o.easeParams instanceof Array&&h.config&&(this._ease=h.config.apply(h,o.easeParams)),this._easeType=this._ease._type,this._easePower=this._ease._power,this._firstPT=null,this._targets)for(s=this._targets.length,t=0;t<s;t++)this._initProps(this._targets[t],this._propLookup[t]={},this._siblings[t],a?a[t]:null,t)&&(e=!0);else e=this._initProps(this.target,this._propLookup,this._siblings,a,0);if(e&&j._onPluginEvent("_onInitAllProps",this),a&&(this._firstPT||"function"!=typeof this.target&&this._enabled(!1,!1)),o.runBackwards)for(i=this._firstPT;i;)i.s+=i.c,i.c=-i.c,i=i._next;this._onUpdate=o.onUpdate,this._initted=!0},a._initProps=function(e,i,n,r,s){var o,a,l,u,h,c;if(null==e)return!1;M[e._gsTweenID]&&G(),this.vars.css||e.style&&e!==t&&e.nodeType&&H.css&&this.vars.autoCSS!==!1&&N(this.vars,e);for(o in this.vars)if(c=this.vars[o],U[o])c&&(c instanceof Array||c.push&&_(c))&&c.join("").indexOf("{self}")!==-1&&(this.vars[o]=c=this._swapSelfInParams(c,this));else if(H[o]&&(u=new H[o])._onInitTween(e,this.vars[o],this,s)){for(this._firstPT=h={_next:this._firstPT,t:u,p:"setRatio",s:0,c:1,f:1,n:o,pg:1,pr:u._priority,m:0},a=u._overwriteProps.length;--a>-1;)i[u._overwriteProps[a]]=this._firstPT;(u._priority||u._onInitAllProps)&&(l=!0),(u._onDisable||u._onEnable)&&(this._notifyPluginsOfEnabled=!0),h._next&&(h._next._prev=h)}else i[o]=z.call(this,e,o,"get",c,o,0,null,this.vars.stringFilter,s);return r&&this._kill(r,e)?this._initProps(e,i,n,r,s):this._overwrite>1&&this._firstPT&&n.length>1&&J(e,this,i,this._overwrite,n)?(this._kill(i,e),this._initProps(e,i,n,r,s)):(this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration)&&(M[e._gsTweenID]=!0),l)},a.render=function(t,e,i){var n,r,s,o,a=this._time,l=this._duration,u=this._rawPrevTime;if(t>=l-1e-7)this._totalTime=this._time=l,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1,this._reversed||(n=!0,r="onComplete",i=i||this._timeline.autoRemoveChildren),0===l&&(this._initted||!this.vars.lazy||i)&&(this._startTime===this._timeline._duration&&(t=0),(u<0||t<=0&&t>=-1e-7||u===f&&"isPause"!==this.data)&&u!==t&&(i=!0,u>f&&(r="onReverseComplete")),this._rawPrevTime=o=!e||t||u===t?t:f);else if(t<1e-7)this._totalTime=this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==a||0===l&&u>0)&&(r="onReverseComplete",n=this._reversed),t<0&&(this._active=!1,0===l&&(this._initted||!this.vars.lazy||i)&&(u>=0&&(u!==f||"isPause"!==this.data)&&(i=!0),this._rawPrevTime=o=!e||t||u===t?t:f)),this._initted||(i=!0);else if(this._totalTime=this._time=t,this._easeType){var h=t/l,c=this._easeType,p=this._easePower;(1===c||3===c&&h>=.5)&&(h=1-h),3===c&&(h*=2),1===p?h*=h:2===p?h*=h*h:3===p?h*=h*h*h:4===p&&(h*=h*h*h*h),1===c?this.ratio=1-h:2===c?this.ratio=h:t/l<.5?this.ratio=h/2:this.ratio=1-h/2}else this.ratio=this._ease.getRatio(t/l);if(this._time!==a||i){if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!i&&this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration))return this._time=this._totalTime=a,this._rawPrevTime=u,L.push(this),void(this._lazy=[t,e]);this._time&&!n?this.ratio=this._ease.getRatio(this._time/l):n&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(this._lazy!==!1&&(this._lazy=!1),this._active||!this._paused&&this._time!==a&&t>=0&&(this._active=!0),0===a&&(this._startAt&&(t>=0?this._startAt.render(t,e,i):r||(r="_dummyGS")),this.vars.onStart&&(0===this._time&&0!==l||e||this._callback("onStart"))),s=this._firstPT;s;)s.f?s.t[s.p](s.c*this.ratio+s.s):s.t[s.p]=s.c*this.ratio+s.s,s=s._next;this._onUpdate&&(t<0&&this._startAt&&t!==-1e-4&&this._startAt.render(t,e,i),e||(this._time!==a||n||i)&&this._callback("onUpdate")),r&&(this._gc&&!i||(t<0&&this._startAt&&!this._onUpdate&&t!==-1e-4&&this._startAt.render(t,e,i),n&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[r]&&this._callback(r),0===l&&this._rawPrevTime===f&&o!==f&&(this._rawPrevTime=0)))}},a._kill=function(t,e,i){if("all"===t&&(t=null),null==t&&(null==e||e===this.target))return this._lazy=!1,this._enabled(!1,!1);e="string"!=typeof e?e||this._targets||this.target:j.selector(e)||e;var n,r,s,o,a,l,u,h,c,f=i&&this._time&&i._startTime===this._startTime&&this._timeline===i._timeline;if((_(e)||E(e))&&"number"!=typeof e[0])for(n=e.length;--n>-1;)this._kill(t,e[n],i)&&(l=!0);else{if(this._targets){for(n=this._targets.length;--n>-1;)if(e===this._targets[n]){a=this._propLookup[n]||{},this._overwrittenProps=this._overwrittenProps||[],r=this._overwrittenProps[n]=t?this._overwrittenProps[n]||{}:"all";break}}else{if(e!==this.target)return!1;a=this._propLookup,r=this._overwrittenProps=t?this._overwrittenProps||{}:"all"}if(a){if(u=t||a,h=t!==r&&"all"!==r&&t!==a&&("object"!=typeof t||!t._tempKill),i&&(j.onOverwrite||this.vars.onOverwrite)){for(s in u)a[s]&&(c||(c=[]),c.push(s));if((c||!t)&&!Z(this,i,e,c))return!1}for(s in u)(o=a[s])&&(f&&(o.f?o.t[o.p](o.s):o.t[o.p]=o.s,l=!0),o.pg&&o.t._kill(u)&&(l=!0),o.pg&&0!==o.t._overwriteProps.length||(o._prev?o._prev._next=o._next:o===this._firstPT&&(this._firstPT=o._next),o._next&&(o._next._prev=o._prev),o._next=o._prev=null),delete a[s]),h&&(r[s]=1);!this._firstPT&&this._initted&&this._enabled(!1,!1)}}return l},a.invalidate=function(){return this._notifyPluginsOfEnabled&&j._onPluginEvent("_onDisable",this),this._firstPT=this._overwrittenProps=this._startAt=this._onUpdate=null,this._notifyPluginsOfEnabled=this._active=this._lazy=!1,this._propLookup=this._targets?{}:[],O.prototype.invalidate.call(this),this.vars.immediateRender&&(this._time=-f,this.render(Math.min(0,-this._delay))),this},a._enabled=function(t,e){if(u||l.wake(),t&&this._gc){var i,n=this._targets;if(n)for(i=n.length;--i>-1;)this._siblings[i]=K(n[i],this,!0);else this._siblings=K(this.target,this,!0)}return O.prototype._enabled.call(this,t,e),!(!this._notifyPluginsOfEnabled||!this._firstPT)&&j._onPluginEvent(t?"_onEnable":"_onDisable",this)},j.to=function(t,e,i){return new j(t,e,i)},j.from=function(t,e,i){return i.runBackwards=!0,i.immediateRender=0!=i.immediateRender,new j(t,e,i)},j.fromTo=function(t,e,i,n){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,new j(t,e,n)},j.delayedCall=function(t,e,i,n,r){return new j(e,0,{delay:t,onComplete:e,onCompleteParams:i,callbackScope:n,onReverseComplete:e,onReverseCompleteParams:i,immediateRender:!1,lazy:!1,useFrames:r,overwrite:0})},j.set=function(t,e){return new j(t,0,e)},j.getTweensOf=function(t,e){if(null==t)return[];t="string"!=typeof t?t:j.selector(t)||t;var i,n,r,s;if((_(t)||E(t))&&"number"!=typeof t[0]){for(i=t.length,n=[];--i>-1;)n=n.concat(j.getTweensOf(t[i],e));for(i=n.length;--i>-1;)for(s=n[i],r=i;--r>-1;)s===n[r]&&n.splice(i,1)}else for(n=K(t).concat(),i=n.length;--i>-1;)(n[i]._gc||e&&!n[i].isActive())&&n.splice(i,1);return n},j.killTweensOf=j.killDelayedCallsTo=function(t,e,i){"object"==typeof e&&(i=e,e=!1);for(var n=j.getTweensOf(t,e),r=n.length;--r>-1;)n[r]._kill(i,t)};var et=y("plugins.TweenPlugin",function(t,e){this._overwriteProps=(t||"").split(","),this._propName=this._overwriteProps[0],this._priority=e||0,this._super=et.prototype},!0);if(a=et.prototype,et.version="1.19.0",et.API=2,a._firstPT=null,a._addTween=z,a.setRatio=q,a._kill=function(t){var e,i=this._overwriteProps,n=this._firstPT;if(null!=t[this._propName])this._overwriteProps=[];else for(e=i.length;--e>-1;)null!=t[i[e]]&&i.splice(e,1);for(;n;)null!=t[n.n]&&(n._next&&(n._next._prev=n._prev),n._prev?(n._prev._next=n._next,n._prev=null):this._firstPT===n&&(this._firstPT=n._next)),n=n._next;return!1},a._mod=a._roundProps=function(t){for(var e,i=this._firstPT;i;)e=t[this._propName]||null!=i.n&&t[i.n.split(this._propName+"_").join("")],e&&"function"==typeof e&&(2===i.f?i.t._applyPT.m=e:i.m=e),i=i._next},j._onPluginEvent=function(t,e){var i,n,r,s,o,a=e._firstPT;if("_onInitAllProps"===t){for(;a;){for(o=a._next,n=r;n&&n.pr>a.pr;)n=n._next;(a._prev=n?n._prev:s)?a._prev._next=a:r=a,(a._next=n)?n._prev=a:s=a,a=o}a=e._firstPT=r}for(;a;)a.pg&&"function"==typeof a.t[t]&&a.t[t]()&&(i=!0),a=a._next;return i},et.activate=function(t){for(var e=t.length;--e>-1;)t[e].API===et.API&&(H[(new t[e])._propName]=t[e]);return!0},v.plugin=function(t){if(!(t&&t.propName&&t.init&&t.API))throw"illegal plugin definition.";var e,i=t.propName,n=t.priority||0,r=t.overwriteProps,s={init:"_onInitTween",set:"setRatio",kill:"_kill",round:"_mod",mod:"_mod",initAll:"_onInitAllProps"},o=y("plugins."+i.charAt(0).toUpperCase()+i.substr(1)+"Plugin",function(){et.call(this,i,n),this._overwriteProps=r||[]},t.global===!0),a=o.prototype=new et(i);a.constructor=o,o.API=t.API;for(e in s)"function"==typeof t[e]&&(a[s[e]]=t[e]);return o.version=t.version,et.activate([o]),o},s=t._gsQueue){for(o=0;o<s.length;o++)s[o]();for(a in m)m[a].func||t.console.log("GSAP encountered missing dependency: "+a)}u=!1}}("undefined"!=typeof e&&e.exports&&"undefined"!=typeof t?t:this||window,"TweenMax")}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],14:[function(t,e,i){!function(t,i){"use strict";"object"==typeof e&&"object"==typeof e.exports?e.exports=t.document?i(t,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return i(t)}:i(t)}("undefined"!=typeof window?window:this,function(t,e){"use strict";function i(t,e){e=e||J;var i=e.createElement("script");i.text=t,e.head.appendChild(i).parentNode.removeChild(i)}function n(t){var e=!!t&&"length"in t&&t.length,i=ft.type(t);return"function"!==i&&!ft.isWindow(t)&&("array"===i||0===e||"number"==typeof e&&e>0&&e-1 in t)}function r(t,e,i){if(ft.isFunction(e))return ft.grep(t,function(t,n){return!!e.call(t,n,t)!==i});if(e.nodeType)return ft.grep(t,function(t){return t===e!==i});if("string"==typeof e){if(wt.test(e))return ft.filter(e,t,i);e=ft.filter(e,t)}return ft.grep(t,function(t){return rt.call(e,t)>-1!==i&&1===t.nodeType})}function s(t,e){for(;(t=t[e])&&1!==t.nodeType;);return t}function o(t){var e={};return ft.each(t.match(At)||[],function(t,i){e[i]=!0}),e}function a(t){return t}function l(t){throw t}function u(t,e,i){var n;try{t&&ft.isFunction(n=t.promise)?n.call(t).done(e).fail(i):t&&ft.isFunction(n=t.then)?n.call(t,e,i):e.call(void 0,t)}catch(t){i.call(void 0,t)}}function h(){J.removeEventListener("DOMContentLoaded",h),t.removeEventListener("load",h),ft.ready()}function c(){this.expando=ft.expando+c.uid++}function f(t,e,i){var n;if(void 0===i&&1===t.nodeType)if(n="data-"+e.replace(Mt,"-$&").toLowerCase(),i=t.getAttribute(n),"string"==typeof i){try{i="true"===i||"false"!==i&&("null"===i?null:+i+""===i?+i:Lt.test(i)?JSON.parse(i):i)}catch(t){}Nt.set(t,e,i)}else i=void 0;return i}function p(t,e,i,n){var r,s=1,o=20,a=n?function(){return n.cur()}:function(){return ft.css(t,e,"")},l=a(),u=i&&i[3]||(ft.cssNumber[e]?"":"px"),h=(ft.cssNumber[e]||"px"!==u&&+l)&&qt.exec(ft.css(t,e));if(h&&h[3]!==u){u=u||h[3],i=i||[],h=+l||1;do s=s||".5",h/=s,ft.style(t,e,h+u);while(s!==(s=a()/l)&&1!==s&&--o)}return i&&(h=+h||+l||0,r=i[1]?h+(i[1]+1)*i[2]:+i[2],n&&(n.unit=u,n.start=h,n.end=r)),r}function d(t){var e,i=t.ownerDocument,n=t.nodeName,r=Ht[n];return r?r:(e=i.body.appendChild(i.createElement(n)),r=ft.css(e,"display"),e.parentNode.removeChild(e),"none"===r&&(r="block"),Ht[n]=r,r)}function _(t,e){for(var i,n,r=[],s=0,o=t.length;s<o;s++)n=t[s],n.style&&(i=n.style.display,e?("none"===i&&(r[s]=Et.get(n,"display")||null,r[s]||(n.style.display="")),""===n.style.display&&zt(n)&&(r[s]=d(n))):"none"!==i&&(r[s]="none",Et.set(n,"display",i)));for(s=0;s<o;s++)null!=r[s]&&(t[s].style.display=r[s]);return t}function m(t,e){var i="undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e||"*"):"undefined"!=typeof t.querySelectorAll?t.querySelectorAll(e||"*"):[];return void 0===e||e&&ft.nodeName(t,e)?ft.merge([t],i):i}function g(t,e){for(var i=0,n=t.length;i<n;i++)Et.set(t[i],"globalEval",!e||Et.get(e[i],"globalEval"))}function v(t,e,i,n,r){for(var s,o,a,l,u,h,c=e.createDocumentFragment(),f=[],p=0,d=t.length;p<d;p++)if(s=t[p],s||0===s)if("object"===ft.type(s))ft.merge(f,s.nodeType?[s]:s);else if($t.test(s)){for(o=o||c.appendChild(e.createElement("div")),a=(Wt.exec(s)||["",""])[1].toLowerCase(),l=Yt[a]||Yt._default,o.innerHTML=l[1]+ft.htmlPrefilter(s)+l[2],h=l[0];h--;)o=o.lastChild;ft.merge(f,o.childNodes),o=c.firstChild,o.textContent=""}else f.push(e.createTextNode(s));for(c.textContent="",p=0;s=f[p++];)if(n&&ft.inArray(s,n)>-1)r&&r.push(s);else if(u=ft.contains(s.ownerDocument,s),o=m(c.appendChild(s),"script"),u&&g(o),i)for(h=0;s=o[h++];)Ut.test(s.type||"")&&i.push(s);return c}function y(){return!0}function T(){return!1}function x(){try{return J.activeElement}catch(t){}}function w(t,e,i,n,r,s){var o,a;if("object"==typeof e){"string"!=typeof i&&(n=n||i,i=void 0);for(a in e)w(t,a,i,n,e[a],s);return t}if(null==n&&null==r?(r=i,n=i=void 0):null==r&&("string"==typeof i?(r=n,n=void 0):(r=n,n=i,i=void 0)),r===!1)r=T;else if(!r)return t;return 1===s&&(o=r,r=function(t){return ft().off(t),o.apply(this,arguments)},r.guid=o.guid||(o.guid=ft.guid++)),t.each(function(){ft.event.add(this,e,r,n,i)})}function b(t,e){return ft.nodeName(t,"table")&&ft.nodeName(11!==e.nodeType?e:e.firstChild,"tr")?t.getElementsByTagName("tbody")[0]||t:t}function P(t){return t.type=(null!==t.getAttribute("type"))+"/"+t.type,t}function C(t){var e=ee.exec(t.type);return e?t.type=e[1]:t.removeAttribute("type"),t}function k(t,e){var i,n,r,s,o,a,l,u;if(1===e.nodeType){if(Et.hasData(t)&&(s=Et.access(t),o=Et.set(e,s),u=s.events)){delete o.handle,o.events={};for(r in u)for(i=0,n=u[r].length;i<n;i++)ft.event.add(e,r,u[r][i])}Nt.hasData(t)&&(a=Nt.access(t),l=ft.extend({},a),Nt.set(e,l))}}function S(t,e){var i=e.nodeName.toLowerCase();"input"===i&&Xt.test(t.type)?e.checked=t.checked:"input"!==i&&"textarea"!==i||(e.defaultValue=t.defaultValue)}function A(t,e,n,r){e=it.apply([],e);var s,o,a,l,u,h,c=0,f=t.length,p=f-1,d=e[0],_=ft.isFunction(d);if(_||f>1&&"string"==typeof d&&!ht.checkClone&&te.test(d))return t.each(function(i){var s=t.eq(i);_&&(e[0]=d.call(this,i,s.html())),A(s,e,n,r)});if(f&&(s=v(e,t[0].ownerDocument,!1,t,r),o=s.firstChild,1===s.childNodes.length&&(s=o),o||r)){for(a=ft.map(m(s,"script"),P),l=a.length;c<f;c++)u=s,c!==p&&(u=ft.clone(u,!0,!0),l&&ft.merge(a,m(u,"script"))),n.call(t[c],u,c);if(l)for(h=a[a.length-1].ownerDocument,ft.map(a,C),c=0;c<l;c++)u=a[c],Ut.test(u.type||"")&&!Et.access(u,"globalEval")&&ft.contains(h,u)&&(u.src?ft._evalUrl&&ft._evalUrl(u.src):i(u.textContent.replace(ie,""),h))}return t}function O(t,e,i){for(var n,r=e?ft.filter(e,t):t,s=0;null!=(n=r[s]);s++)i||1!==n.nodeType||ft.cleanData(m(n)),n.parentNode&&(i&&ft.contains(n.ownerDocument,n)&&g(m(n,"script")),n.parentNode.removeChild(n));return t}function D(t,e,i){var n,r,s,o,a=t.style;return i=i||se(t),i&&(o=i.getPropertyValue(e)||i[e],""!==o||ft.contains(t.ownerDocument,t)||(o=ft.style(t,e)),!ht.pixelMarginRight()&&re.test(o)&&ne.test(e)&&(n=a.width,r=a.minWidth,s=a.maxWidth,a.minWidth=a.maxWidth=a.width=o,o=i.width,a.width=n,a.minWidth=r,a.maxWidth=s)),void 0!==o?o+"":o}function R(t,e){return{get:function(){return t()?void delete this.get:(this.get=e).apply(this,arguments)}}}function j(t){if(t in he)return t;for(var e=t[0].toUpperCase()+t.slice(1),i=ue.length;i--;)if(t=ue[i]+e,t in he)return t}function E(t,e,i){var n=qt.exec(e);return n?Math.max(0,n[2]-(i||0))+(n[3]||"px"):e}function N(t,e,i,n,r){for(var s=i===(n?"border":"content")?4:"width"===e?1:0,o=0;s<4;s+=2)"margin"===i&&(o+=ft.css(t,i+It[s],!0,r)),n?("content"===i&&(o-=ft.css(t,"padding"+It[s],!0,r)),"margin"!==i&&(o-=ft.css(t,"border"+It[s]+"Width",!0,r))):(o+=ft.css(t,"padding"+It[s],!0,r),"padding"!==i&&(o+=ft.css(t,"border"+It[s]+"Width",!0,r)));return o}function L(t,e,i){var n,r=!0,s=se(t),o="border-box"===ft.css(t,"boxSizing",!1,s);if(t.getClientRects().length&&(n=t.getBoundingClientRect()[e]),n<=0||null==n){if(n=D(t,e,s),(n<0||null==n)&&(n=t.style[e]),re.test(n))return n;r=o&&(ht.boxSizingReliable()||n===t.style[e]),n=parseFloat(n)||0}return n+N(t,e,i||(o?"border":"content"),r,s)+"px"}function M(t,e,i,n,r){return new M.prototype.init(t,e,i,n,r)}function F(){fe&&(t.requestAnimationFrame(F),ft.fx.tick())}function q(){return t.setTimeout(function(){ce=void 0}),ce=ft.now()}function I(t,e){var i,n=0,r={height:t};for(e=e?1:0;n<4;n+=2-e)i=It[n],r["margin"+i]=r["padding"+i]=t;return e&&(r.opacity=r.width=t),r}function z(t,e,i){for(var n,r=(X.tweeners[e]||[]).concat(X.tweeners["*"]),s=0,o=r.length;s<o;s++)if(n=r[s].call(i,e,t))return n}function B(t,e,i){var n,r,s,o,a,l,u,h,c="width"in e||"height"in e,f=this,p={},d=t.style,m=t.nodeType&&zt(t),g=Et.get(t,"fxshow");i.queue||(o=ft._queueHooks(t,"fx"),null==o.unqueued&&(o.unqueued=0,a=o.empty.fire,o.empty.fire=function(){o.unqueued||a()}),o.unqueued++,f.always(function(){f.always(function(){o.unqueued--,ft.queue(t,"fx").length||o.empty.fire()})}));for(n in e)if(r=e[n],pe.test(r)){if(delete e[n],s=s||"toggle"===r,r===(m?"hide":"show")){if("show"!==r||!g||void 0===g[n])continue;m=!0}p[n]=g&&g[n]||ft.style(t,n)}if(l=!ft.isEmptyObject(e),l||!ft.isEmptyObject(p)){c&&1===t.nodeType&&(i.overflow=[d.overflow,d.overflowX,d.overflowY],u=g&&g.display,null==u&&(u=Et.get(t,"display")),h=ft.css(t,"display"),"none"===h&&(u?h=u:(_([t],!0),u=t.style.display||u,h=ft.css(t,"display"),_([t]))),("inline"===h||"inline-block"===h&&null!=u)&&"none"===ft.css(t,"float")&&(l||(f.done(function(){d.display=u}),null==u&&(h=d.display,u="none"===h?"":h)),d.display="inline-block")),i.overflow&&(d.overflow="hidden",f.always(function(){d.overflow=i.overflow[0],d.overflowX=i.overflow[1],d.overflowY=i.overflow[2]})),l=!1;for(n in p)l||(g?"hidden"in g&&(m=g.hidden):g=Et.access(t,"fxshow",{display:u}),s&&(g.hidden=!m),m&&_([t],!0),f.done(function(){m||_([t]),Et.remove(t,"fxshow");for(n in p)ft.style(t,n,p[n])})),l=z(m?g[n]:0,n,f),n in g||(g[n]=l.start,m&&(l.end=l.start,l.start=0))}}function H(t,e){var i,n,r,s,o;for(i in t)if(n=ft.camelCase(i),r=e[n],s=t[i],ft.isArray(s)&&(r=s[1],s=t[i]=s[0]),i!==n&&(t[n]=s,delete t[i]),o=ft.cssHooks[n],o&&"expand"in o){s=o.expand(s),delete t[n];for(i in s)i in t||(t[i]=s[i],e[i]=r)}else e[n]=r}function X(t,e,i){var n,r,s=0,o=X.prefilters.length,a=ft.Deferred().always(function(){delete l.elem}),l=function(){if(r)return!1;for(var e=ce||q(),i=Math.max(0,u.startTime+u.duration-e),n=i/u.duration||0,s=1-n,o=0,l=u.tweens.length;o<l;o++)u.tweens[o].run(s);return a.notifyWith(t,[u,s,i]),s<1&&l?i:(a.resolveWith(t,[u]),!1)},u=a.promise({elem:t,props:ft.extend({},e),opts:ft.extend(!0,{specialEasing:{},easing:ft.easing._default},i),originalProperties:e,originalOptions:i,startTime:ce||q(),duration:i.duration,tweens:[],createTween:function(e,i){var n=ft.Tween(t,u.opts,e,i,u.opts.specialEasing[e]||u.opts.easing);return u.tweens.push(n),n},stop:function(e){var i=0,n=e?u.tweens.length:0;if(r)return this;for(r=!0;i<n;i++)u.tweens[i].run(1);return e?(a.notifyWith(t,[u,1,0]),a.resolveWith(t,[u,e])):a.rejectWith(t,[u,e]),this}}),h=u.props;for(H(h,u.opts.specialEasing);s<o;s++)if(n=X.prefilters[s].call(u,t,h,u.opts))return ft.isFunction(n.stop)&&(ft._queueHooks(u.elem,u.opts.queue).stop=ft.proxy(n.stop,n)),n;return ft.map(h,z,u),ft.isFunction(u.opts.start)&&u.opts.start.call(t,u),ft.fx.timer(ft.extend(l,{elem:t,anim:u,queue:u.opts.queue})),u.progress(u.opts.progress).done(u.opts.done,u.opts.complete).fail(u.opts.fail).always(u.opts.always)}function W(t){return t.getAttribute&&t.getAttribute("class")||""}function U(t,e,i,n){var r;if(ft.isArray(e))ft.each(e,function(e,r){i||ke.test(t)?n(t,r):U(t+"["+("object"==typeof r&&null!=r?e:"")+"]",r,i,n)});else if(i||"object"!==ft.type(e))n(t,e);else for(r in e)U(t+"["+r+"]",e[r],i,n)}function Y(t){return function(e,i){"string"!=typeof e&&(i=e,e="*");var n,r=0,s=e.toLowerCase().match(At)||[];if(ft.isFunction(i))for(;n=s[r++];)"+"===n[0]?(n=n.slice(1)||"*",(t[n]=t[n]||[]).unshift(i)):(t[n]=t[n]||[]).push(i)}}function $(t,e,i,n){function r(a){var l;return s[a]=!0,ft.each(t[a]||[],function(t,a){var u=a(e,i,n);return"string"!=typeof u||o||s[u]?o?!(l=u):void 0:(e.dataTypes.unshift(u),r(u),!1)}),l}var s={},o=t===qe;return r(e.dataTypes[0])||!s["*"]&&r("*")}function V(t,e){var i,n,r=ft.ajaxSettings.flatOptions||{};for(i in e)void 0!==e[i]&&((r[i]?t:n||(n={}))[i]=e[i]);return n&&ft.extend(!0,t,n),t}function Q(t,e,i){for(var n,r,s,o,a=t.contents,l=t.dataTypes;"*"===l[0];)l.shift(),void 0===n&&(n=t.mimeType||e.getResponseHeader("Content-Type"));if(n)for(r in a)if(a[r]&&a[r].test(n)){l.unshift(r);break}if(l[0]in i)s=l[0];else{for(r in i){if(!l[0]||t.converters[r+" "+l[0]]){s=r;break}o||(o=r)}s=s||o}if(s)return s!==l[0]&&l.unshift(s),i[s]}function G(t,e,i,n){var r,s,o,a,l,u={},h=t.dataTypes.slice();if(h[1])for(o in t.converters)u[o.toLowerCase()]=t.converters[o];for(s=h.shift();s;)if(t.responseFields[s]&&(i[t.responseFields[s]]=e),!l&&n&&t.dataFilter&&(e=t.dataFilter(e,t.dataType)),l=s,s=h.shift())if("*"===s)s=l;else if("*"!==l&&l!==s){if(o=u[l+" "+s]||u["* "+s],!o)for(r in u)if(a=r.split(" "),a[1]===s&&(o=u[l+" "+a[0]]||u["* "+a[0]])){o===!0?o=u[r]:u[r]!==!0&&(s=a[0],h.unshift(a[1]));break}if(o!==!0)if(o&&t.throws)e=o(e);else try{e=o(e)}catch(t){return{state:"parsererror",error:o?t:"No conversion from "+l+" to "+s}}}return{state:"success",data:e}}function K(t){return ft.isWindow(t)?t:9===t.nodeType&&t.defaultView}var Z=[],J=t.document,tt=Object.getPrototypeOf,et=Z.slice,it=Z.concat,nt=Z.push,rt=Z.indexOf,st={},ot=st.toString,at=st.hasOwnProperty,lt=at.toString,ut=lt.call(Object),ht={},ct="3.1.0",ft=function(t,e){return new ft.fn.init(t,e)},pt=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,dt=/^-ms-/,_t=/-([a-z])/g,mt=function(t,e){return e.toUpperCase()};ft.fn=ft.prototype={jquery:ct,constructor:ft,length:0,toArray:function(){return et.call(this)},get:function(t){return null!=t?t<0?this[t+this.length]:this[t]:et.call(this)},pushStack:function(t){var e=ft.merge(this.constructor(),t);return e.prevObject=this,e},each:function(t){return ft.each(this,t)},map:function(t){return this.pushStack(ft.map(this,function(e,i){return t.call(e,i,e)}))},slice:function(){return this.pushStack(et.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(t){var e=this.length,i=+t+(t<0?e:0);return this.pushStack(i>=0&&i<e?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:nt,sort:Z.sort,splice:Z.splice},ft.extend=ft.fn.extend=function(){var t,e,i,n,r,s,o=arguments[0]||{},a=1,l=arguments.length,u=!1;for("boolean"==typeof o&&(u=o,o=arguments[a]||{},a++),"object"==typeof o||ft.isFunction(o)||(o={}),a===l&&(o=this,a--);a<l;a++)if(null!=(t=arguments[a]))for(e in t)i=o[e],n=t[e],o!==n&&(u&&n&&(ft.isPlainObject(n)||(r=ft.isArray(n)))?(r?(r=!1,s=i&&ft.isArray(i)?i:[]):s=i&&ft.isPlainObject(i)?i:{},o[e]=ft.extend(u,s,n)):void 0!==n&&(o[e]=n));return o},ft.extend({expando:"jQuery"+(ct+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isFunction:function(t){return"function"===ft.type(t)},isArray:Array.isArray,isWindow:function(t){return null!=t&&t===t.window},isNumeric:function(t){var e=ft.type(t);return("number"===e||"string"===e)&&!isNaN(t-parseFloat(t))},isPlainObject:function(t){var e,i;return!(!t||"[object Object]"!==ot.call(t)||(e=tt(t))&&(i=at.call(e,"constructor")&&e.constructor,"function"!=typeof i||lt.call(i)!==ut))},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},type:function(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?st[ot.call(t)]||"object":typeof t},globalEval:function(t){
i(t)},camelCase:function(t){return t.replace(dt,"ms-").replace(_t,mt)},nodeName:function(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()},each:function(t,e){var i,r=0;if(n(t))for(i=t.length;r<i&&e.call(t[r],r,t[r])!==!1;r++);else for(r in t)if(e.call(t[r],r,t[r])===!1)break;return t},trim:function(t){return null==t?"":(t+"").replace(pt,"")},makeArray:function(t,e){var i=e||[];return null!=t&&(n(Object(t))?ft.merge(i,"string"==typeof t?[t]:t):nt.call(i,t)),i},inArray:function(t,e,i){return null==e?-1:rt.call(e,t,i)},merge:function(t,e){for(var i=+e.length,n=0,r=t.length;n<i;n++)t[r++]=e[n];return t.length=r,t},grep:function(t,e,i){for(var n,r=[],s=0,o=t.length,a=!i;s<o;s++)n=!e(t[s],s),n!==a&&r.push(t[s]);return r},map:function(t,e,i){var r,s,o=0,a=[];if(n(t))for(r=t.length;o<r;o++)s=e(t[o],o,i),null!=s&&a.push(s);else for(o in t)s=e(t[o],o,i),null!=s&&a.push(s);return it.apply([],a)},guid:1,proxy:function(t,e){var i,n,r;if("string"==typeof e&&(i=t[e],e=t,t=i),ft.isFunction(t))return n=et.call(arguments,2),r=function(){return t.apply(e||this,n.concat(et.call(arguments)))},r.guid=t.guid=t.guid||ft.guid++,r},now:Date.now,support:ht}),"function"==typeof Symbol&&(ft.fn[Symbol.iterator]=Z[Symbol.iterator]),ft.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(t,e){st["[object "+e+"]"]=e.toLowerCase()});var gt=function(t){function e(t,e,i,n){var r,s,o,a,l,u,h,f=e&&e.ownerDocument,d=e?e.nodeType:9;if(i=i||[],"string"!=typeof t||!t||1!==d&&9!==d&&11!==d)return i;if(!n&&((e?e.ownerDocument||e:B)!==E&&j(e),e=e||E,L)){if(11!==d&&(l=gt.exec(t)))if(r=l[1]){if(9===d){if(!(o=e.getElementById(r)))return i;if(o.id===r)return i.push(o),i}else if(f&&(o=f.getElementById(r))&&I(e,o)&&o.id===r)return i.push(o),i}else{if(l[2])return Z.apply(i,e.getElementsByTagName(t)),i;if((r=l[3])&&w.getElementsByClassName&&e.getElementsByClassName)return Z.apply(i,e.getElementsByClassName(r)),i}if(w.qsa&&!Y[t+" "]&&(!M||!M.test(t))){if(1!==d)f=e,h=t;else if("object"!==e.nodeName.toLowerCase()){for((a=e.getAttribute("id"))?a=a.replace(xt,wt):e.setAttribute("id",a=z),u=k(t),s=u.length;s--;)u[s]="#"+a+" "+p(u[s]);h=u.join(","),f=vt.test(t)&&c(e.parentNode)||e}if(h)try{return Z.apply(i,f.querySelectorAll(h)),i}catch(t){}finally{a===z&&e.removeAttribute("id")}}}return A(t.replace(at,"$1"),e,i,n)}function i(){function t(i,n){return e.push(i+" ")>b.cacheLength&&delete t[e.shift()],t[i+" "]=n}var e=[];return t}function n(t){return t[z]=!0,t}function r(t){var e=E.createElement("fieldset");try{return!!t(e)}catch(t){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function s(t,e){for(var i=t.split("|"),n=i.length;n--;)b.attrHandle[i[n]]=e}function o(t,e){var i=e&&t,n=i&&1===t.nodeType&&1===e.nodeType&&t.sourceIndex-e.sourceIndex;if(n)return n;if(i)for(;i=i.nextSibling;)if(i===e)return-1;return t?1:-1}function a(t){return function(e){var i=e.nodeName.toLowerCase();return"input"===i&&e.type===t}}function l(t){return function(e){var i=e.nodeName.toLowerCase();return("input"===i||"button"===i)&&e.type===t}}function u(t){return function(e){return"label"in e&&e.disabled===t||"form"in e&&e.disabled===t||"form"in e&&e.disabled===!1&&(e.isDisabled===t||e.isDisabled!==!t&&("label"in e||!Pt(e))!==t)}}function h(t){return n(function(e){return e=+e,n(function(i,n){for(var r,s=t([],i.length,e),o=s.length;o--;)i[r=s[o]]&&(i[r]=!(n[r]=i[r]))})})}function c(t){return t&&"undefined"!=typeof t.getElementsByTagName&&t}function f(){}function p(t){for(var e=0,i=t.length,n="";e<i;e++)n+=t[e].value;return n}function d(t,e,i){var n=e.dir,r=e.next,s=r||n,o=i&&"parentNode"===s,a=X++;return e.first?function(e,i,r){for(;e=e[n];)if(1===e.nodeType||o)return t(e,i,r)}:function(e,i,l){var u,h,c,f=[H,a];if(l){for(;e=e[n];)if((1===e.nodeType||o)&&t(e,i,l))return!0}else for(;e=e[n];)if(1===e.nodeType||o)if(c=e[z]||(e[z]={}),h=c[e.uniqueID]||(c[e.uniqueID]={}),r&&r===e.nodeName.toLowerCase())e=e[n]||e;else{if((u=h[s])&&u[0]===H&&u[1]===a)return f[2]=u[2];if(h[s]=f,f[2]=t(e,i,l))return!0}}}function _(t){return t.length>1?function(e,i,n){for(var r=t.length;r--;)if(!t[r](e,i,n))return!1;return!0}:t[0]}function m(t,i,n){for(var r=0,s=i.length;r<s;r++)e(t,i[r],n);return n}function g(t,e,i,n,r){for(var s,o=[],a=0,l=t.length,u=null!=e;a<l;a++)(s=t[a])&&(i&&!i(s,n,r)||(o.push(s),u&&e.push(a)));return o}function v(t,e,i,r,s,o){return r&&!r[z]&&(r=v(r)),s&&!s[z]&&(s=v(s,o)),n(function(n,o,a,l){var u,h,c,f=[],p=[],d=o.length,_=n||m(e||"*",a.nodeType?[a]:a,[]),v=!t||!n&&e?_:g(_,f,t,a,l),y=i?s||(n?t:d||r)?[]:o:v;if(i&&i(v,y,a,l),r)for(u=g(y,p),r(u,[],a,l),h=u.length;h--;)(c=u[h])&&(y[p[h]]=!(v[p[h]]=c));if(n){if(s||t){if(s){for(u=[],h=y.length;h--;)(c=y[h])&&u.push(v[h]=c);s(null,y=[],u,l)}for(h=y.length;h--;)(c=y[h])&&(u=s?tt(n,c):f[h])>-1&&(n[u]=!(o[u]=c))}}else y=g(y===o?y.splice(d,y.length):y),s?s(null,o,y,l):Z.apply(o,y)})}function y(t){for(var e,i,n,r=t.length,s=b.relative[t[0].type],o=s||b.relative[" "],a=s?1:0,l=d(function(t){return t===e},o,!0),u=d(function(t){return tt(e,t)>-1},o,!0),h=[function(t,i,n){var r=!s&&(n||i!==O)||((e=i).nodeType?l(t,i,n):u(t,i,n));return e=null,r}];a<r;a++)if(i=b.relative[t[a].type])h=[d(_(h),i)];else{if(i=b.filter[t[a].type].apply(null,t[a].matches),i[z]){for(n=++a;n<r&&!b.relative[t[n].type];n++);return v(a>1&&_(h),a>1&&p(t.slice(0,a-1).concat({value:" "===t[a-2].type?"*":""})).replace(at,"$1"),i,a<n&&y(t.slice(a,n)),n<r&&y(t=t.slice(n)),n<r&&p(t))}h.push(i)}return _(h)}function T(t,i){var r=i.length>0,s=t.length>0,o=function(n,o,a,l,u){var h,c,f,p=0,d="0",_=n&&[],m=[],v=O,y=n||s&&b.find.TAG("*",u),T=H+=null==v?1:Math.random()||.1,x=y.length;for(u&&(O=o===E||o||u);d!==x&&null!=(h=y[d]);d++){if(s&&h){for(c=0,o||h.ownerDocument===E||(j(h),a=!L);f=t[c++];)if(f(h,o||E,a)){l.push(h);break}u&&(H=T)}r&&((h=!f&&h)&&p--,n&&_.push(h))}if(p+=d,r&&d!==p){for(c=0;f=i[c++];)f(_,m,o,a);if(n){if(p>0)for(;d--;)_[d]||m[d]||(m[d]=G.call(l));m=g(m)}Z.apply(l,m),u&&!n&&m.length>0&&p+i.length>1&&e.uniqueSort(l)}return u&&(H=T,O=v),_};return r?n(o):o}var x,w,b,P,C,k,S,A,O,D,R,j,E,N,L,M,F,q,I,z="sizzle"+1*new Date,B=t.document,H=0,X=0,W=i(),U=i(),Y=i(),$=function(t,e){return t===e&&(R=!0),0},V={}.hasOwnProperty,Q=[],G=Q.pop,K=Q.push,Z=Q.push,J=Q.slice,tt=function(t,e){for(var i=0,n=t.length;i<n;i++)if(t[i]===e)return i;return-1},et="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",it="[\\x20\\t\\r\\n\\f]",nt="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",rt="\\["+it+"*("+nt+")(?:"+it+"*([*^$|!~]?=)"+it+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+nt+"))|)"+it+"*\\]",st=":("+nt+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+rt+")*)|.*)\\)|)",ot=new RegExp(it+"+","g"),at=new RegExp("^"+it+"+|((?:^|[^\\\\])(?:\\\\.)*)"+it+"+$","g"),lt=new RegExp("^"+it+"*,"+it+"*"),ut=new RegExp("^"+it+"*([>+~]|"+it+")"+it+"*"),ht=new RegExp("="+it+"*([^\\]'\"]*?)"+it+"*\\]","g"),ct=new RegExp(st),ft=new RegExp("^"+nt+"$"),pt={ID:new RegExp("^#("+nt+")"),CLASS:new RegExp("^\\.("+nt+")"),TAG:new RegExp("^("+nt+"|[*])"),ATTR:new RegExp("^"+rt),PSEUDO:new RegExp("^"+st),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+it+"*(even|odd|(([+-]|)(\\d*)n|)"+it+"*(?:([+-]|)"+it+"*(\\d+)|))"+it+"*\\)|)","i"),bool:new RegExp("^(?:"+et+")$","i"),needsContext:new RegExp("^"+it+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+it+"*((?:-\\d)?\\d*)"+it+"*\\)|)(?=[^-]|$)","i")},dt=/^(?:input|select|textarea|button)$/i,_t=/^h\d$/i,mt=/^[^{]+\{\s*\[native \w/,gt=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,vt=/[+~]/,yt=new RegExp("\\\\([\\da-f]{1,6}"+it+"?|("+it+")|.)","ig"),Tt=function(t,e,i){var n="0x"+e-65536;return n!==n||i?e:n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320)},xt=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g,wt=function(t,e){return e?"\0"===t?"�":t.slice(0,-1)+"\\"+t.charCodeAt(t.length-1).toString(16)+" ":"\\"+t},bt=function(){j()},Pt=d(function(t){return t.disabled===!0},{dir:"parentNode",next:"legend"});try{Z.apply(Q=J.call(B.childNodes),B.childNodes),Q[B.childNodes.length].nodeType}catch(t){Z={apply:Q.length?function(t,e){K.apply(t,J.call(e))}:function(t,e){for(var i=t.length,n=0;t[i++]=e[n++];);t.length=i-1}}}w=e.support={},C=e.isXML=function(t){var e=t&&(t.ownerDocument||t).documentElement;return!!e&&"HTML"!==e.nodeName},j=e.setDocument=function(t){var e,i,n=t?t.ownerDocument||t:B;return n!==E&&9===n.nodeType&&n.documentElement?(E=n,N=E.documentElement,L=!C(E),B!==E&&(i=E.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",bt,!1):i.attachEvent&&i.attachEvent("onunload",bt)),w.attributes=r(function(t){return t.className="i",!t.getAttribute("className")}),w.getElementsByTagName=r(function(t){return t.appendChild(E.createComment("")),!t.getElementsByTagName("*").length}),w.getElementsByClassName=mt.test(E.getElementsByClassName),w.getById=r(function(t){return N.appendChild(t).id=z,!E.getElementsByName||!E.getElementsByName(z).length}),w.getById?(b.find.ID=function(t,e){if("undefined"!=typeof e.getElementById&&L){var i=e.getElementById(t);return i?[i]:[]}},b.filter.ID=function(t){var e=t.replace(yt,Tt);return function(t){return t.getAttribute("id")===e}}):(delete b.find.ID,b.filter.ID=function(t){var e=t.replace(yt,Tt);return function(t){var i="undefined"!=typeof t.getAttributeNode&&t.getAttributeNode("id");return i&&i.value===e}}),b.find.TAG=w.getElementsByTagName?function(t,e){return"undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t):w.qsa?e.querySelectorAll(t):void 0}:function(t,e){var i,n=[],r=0,s=e.getElementsByTagName(t);if("*"===t){for(;i=s[r++];)1===i.nodeType&&n.push(i);return n}return s},b.find.CLASS=w.getElementsByClassName&&function(t,e){if("undefined"!=typeof e.getElementsByClassName&&L)return e.getElementsByClassName(t)},F=[],M=[],(w.qsa=mt.test(E.querySelectorAll))&&(r(function(t){N.appendChild(t).innerHTML="<a id='"+z+"'></a><select id='"+z+"-\r\\' msallowcapture=''><option selected=''></option></select>",t.querySelectorAll("[msallowcapture^='']").length&&M.push("[*^$]="+it+"*(?:''|\"\")"),t.querySelectorAll("[selected]").length||M.push("\\["+it+"*(?:value|"+et+")"),t.querySelectorAll("[id~="+z+"-]").length||M.push("~="),t.querySelectorAll(":checked").length||M.push(":checked"),t.querySelectorAll("a#"+z+"+*").length||M.push(".#.+[+~]")}),r(function(t){t.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var e=E.createElement("input");e.setAttribute("type","hidden"),t.appendChild(e).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&M.push("name"+it+"*[*^$|!~]?="),2!==t.querySelectorAll(":enabled").length&&M.push(":enabled",":disabled"),N.appendChild(t).disabled=!0,2!==t.querySelectorAll(":disabled").length&&M.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),M.push(",.*:")})),(w.matchesSelector=mt.test(q=N.matches||N.webkitMatchesSelector||N.mozMatchesSelector||N.oMatchesSelector||N.msMatchesSelector))&&r(function(t){w.disconnectedMatch=q.call(t,"*"),q.call(t,"[s!='']:x"),F.push("!=",st)}),M=M.length&&new RegExp(M.join("|")),F=F.length&&new RegExp(F.join("|")),e=mt.test(N.compareDocumentPosition),I=e||mt.test(N.contains)?function(t,e){var i=9===t.nodeType?t.documentElement:t,n=e&&e.parentNode;return t===n||!(!n||1!==n.nodeType||!(i.contains?i.contains(n):t.compareDocumentPosition&&16&t.compareDocumentPosition(n)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},$=e?function(t,e){if(t===e)return R=!0,0;var i=!t.compareDocumentPosition-!e.compareDocumentPosition;return i?i:(i=(t.ownerDocument||t)===(e.ownerDocument||e)?t.compareDocumentPosition(e):1,1&i||!w.sortDetached&&e.compareDocumentPosition(t)===i?t===E||t.ownerDocument===B&&I(B,t)?-1:e===E||e.ownerDocument===B&&I(B,e)?1:D?tt(D,t)-tt(D,e):0:4&i?-1:1)}:function(t,e){if(t===e)return R=!0,0;var i,n=0,r=t.parentNode,s=e.parentNode,a=[t],l=[e];if(!r||!s)return t===E?-1:e===E?1:r?-1:s?1:D?tt(D,t)-tt(D,e):0;if(r===s)return o(t,e);for(i=t;i=i.parentNode;)a.unshift(i);for(i=e;i=i.parentNode;)l.unshift(i);for(;a[n]===l[n];)n++;return n?o(a[n],l[n]):a[n]===B?-1:l[n]===B?1:0},E):E},e.matches=function(t,i){return e(t,null,null,i)},e.matchesSelector=function(t,i){if((t.ownerDocument||t)!==E&&j(t),i=i.replace(ht,"='$1']"),w.matchesSelector&&L&&!Y[i+" "]&&(!F||!F.test(i))&&(!M||!M.test(i)))try{var n=q.call(t,i);if(n||w.disconnectedMatch||t.document&&11!==t.document.nodeType)return n}catch(t){}return e(i,E,null,[t]).length>0},e.contains=function(t,e){return(t.ownerDocument||t)!==E&&j(t),I(t,e)},e.attr=function(t,e){(t.ownerDocument||t)!==E&&j(t);var i=b.attrHandle[e.toLowerCase()],n=i&&V.call(b.attrHandle,e.toLowerCase())?i(t,e,!L):void 0;return void 0!==n?n:w.attributes||!L?t.getAttribute(e):(n=t.getAttributeNode(e))&&n.specified?n.value:null},e.escape=function(t){return(t+"").replace(xt,wt)},e.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},e.uniqueSort=function(t){var e,i=[],n=0,r=0;if(R=!w.detectDuplicates,D=!w.sortStable&&t.slice(0),t.sort($),R){for(;e=t[r++];)e===t[r]&&(n=i.push(r));for(;n--;)t.splice(i[n],1)}return D=null,t},P=e.getText=function(t){var e,i="",n=0,r=t.nodeType;if(r){if(1===r||9===r||11===r){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)i+=P(t)}else if(3===r||4===r)return t.nodeValue}else for(;e=t[n++];)i+=P(e);return i},b=e.selectors={cacheLength:50,createPseudo:n,match:pt,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(yt,Tt),t[3]=(t[3]||t[4]||t[5]||"").replace(yt,Tt),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||e.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&e.error(t[0]),t},PSEUDO:function(t){var e,i=!t[6]&&t[2];return pt.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":i&&ct.test(i)&&(e=k(i,!0))&&(e=i.indexOf(")",i.length-e)-i.length)&&(t[0]=t[0].slice(0,e),t[2]=i.slice(0,e)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(yt,Tt).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=W[t+" "];return e||(e=new RegExp("(^|"+it+")"+t+"("+it+"|$)"))&&W(t,function(t){return e.test("string"==typeof t.className&&t.className||"undefined"!=typeof t.getAttribute&&t.getAttribute("class")||"")})},ATTR:function(t,i,n){return function(r){var s=e.attr(r,t);return null==s?"!="===i:!i||(s+="","="===i?s===n:"!="===i?s!==n:"^="===i?n&&0===s.indexOf(n):"*="===i?n&&s.indexOf(n)>-1:"$="===i?n&&s.slice(-n.length)===n:"~="===i?(" "+s.replace(ot," ")+" ").indexOf(n)>-1:"|="===i&&(s===n||s.slice(0,n.length+1)===n+"-"))}},CHILD:function(t,e,i,n,r){var s="nth"!==t.slice(0,3),o="last"!==t.slice(-4),a="of-type"===e;return 1===n&&0===r?function(t){return!!t.parentNode}:function(e,i,l){var u,h,c,f,p,d,_=s!==o?"nextSibling":"previousSibling",m=e.parentNode,g=a&&e.nodeName.toLowerCase(),v=!l&&!a,y=!1;if(m){if(s){for(;_;){for(f=e;f=f[_];)if(a?f.nodeName.toLowerCase()===g:1===f.nodeType)return!1;d=_="only"===t&&!d&&"nextSibling"}return!0}if(d=[o?m.firstChild:m.lastChild],o&&v){for(f=m,c=f[z]||(f[z]={}),h=c[f.uniqueID]||(c[f.uniqueID]={}),u=h[t]||[],p=u[0]===H&&u[1],y=p&&u[2],f=p&&m.childNodes[p];f=++p&&f&&f[_]||(y=p=0)||d.pop();)if(1===f.nodeType&&++y&&f===e){h[t]=[H,p,y];break}}else if(v&&(f=e,c=f[z]||(f[z]={}),h=c[f.uniqueID]||(c[f.uniqueID]={}),u=h[t]||[],p=u[0]===H&&u[1],y=p),y===!1)for(;(f=++p&&f&&f[_]||(y=p=0)||d.pop())&&((a?f.nodeName.toLowerCase()!==g:1!==f.nodeType)||!++y||(v&&(c=f[z]||(f[z]={}),h=c[f.uniqueID]||(c[f.uniqueID]={}),h[t]=[H,y]),f!==e)););return y-=r,y===n||y%n===0&&y/n>=0}}},PSEUDO:function(t,i){var r,s=b.pseudos[t]||b.setFilters[t.toLowerCase()]||e.error("unsupported pseudo: "+t);return s[z]?s(i):s.length>1?(r=[t,t,"",i],b.setFilters.hasOwnProperty(t.toLowerCase())?n(function(t,e){for(var n,r=s(t,i),o=r.length;o--;)n=tt(t,r[o]),t[n]=!(e[n]=r[o])}):function(t){return s(t,0,r)}):s}},pseudos:{not:n(function(t){var e=[],i=[],r=S(t.replace(at,"$1"));return r[z]?n(function(t,e,i,n){for(var s,o=r(t,null,n,[]),a=t.length;a--;)(s=o[a])&&(t[a]=!(e[a]=s))}):function(t,n,s){return e[0]=t,r(e,null,s,i),e[0]=null,!i.pop()}}),has:n(function(t){return function(i){return e(t,i).length>0}}),contains:n(function(t){return t=t.replace(yt,Tt),function(e){return(e.textContent||e.innerText||P(e)).indexOf(t)>-1}}),lang:n(function(t){return ft.test(t||"")||e.error("unsupported lang: "+t),t=t.replace(yt,Tt).toLowerCase(),function(e){var i;do if(i=L?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return i=i.toLowerCase(),i===t||0===i.indexOf(t+"-");while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var i=t.location&&t.location.hash;return i&&i.slice(1)===e.id},root:function(t){return t===N},focus:function(t){return t===E.activeElement&&(!E.hasFocus||E.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:u(!1),disabled:u(!0),checked:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&!!t.checked||"option"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,t.selected===!0},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!b.pseudos.empty(t)},header:function(t){return _t.test(t.nodeName)},input:function(t){return dt.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&"button"===t.type||"button"===e},text:function(t){var e;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(e=t.getAttribute("type"))||"text"===e.toLowerCase())},first:h(function(){return[0]}),last:h(function(t,e){return[e-1]}),eq:h(function(t,e,i){return[i<0?i+e:i]}),even:h(function(t,e){for(var i=0;i<e;i+=2)t.push(i);return t}),odd:h(function(t,e){for(var i=1;i<e;i+=2)t.push(i);return t}),lt:h(function(t,e,i){for(var n=i<0?i+e:i;--n>=0;)t.push(n);return t}),gt:h(function(t,e,i){for(var n=i<0?i+e:i;++n<e;)t.push(n);return t})}},b.pseudos.nth=b.pseudos.eq;for(x in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})b.pseudos[x]=a(x);for(x in{submit:!0,reset:!0})b.pseudos[x]=l(x);return f.prototype=b.filters=b.pseudos,b.setFilters=new f,k=e.tokenize=function(t,i){var n,r,s,o,a,l,u,h=U[t+" "];if(h)return i?0:h.slice(0);for(a=t,l=[],u=b.preFilter;a;){n&&!(r=lt.exec(a))||(r&&(a=a.slice(r[0].length)||a),l.push(s=[])),n=!1,(r=ut.exec(a))&&(n=r.shift(),s.push({value:n,type:r[0].replace(at," ")}),a=a.slice(n.length));for(o in b.filter)!(r=pt[o].exec(a))||u[o]&&!(r=u[o](r))||(n=r.shift(),s.push({value:n,type:o,matches:r}),a=a.slice(n.length));if(!n)break}return i?a.length:a?e.error(t):U(t,l).slice(0)},S=e.compile=function(t,e){var i,n=[],r=[],s=Y[t+" "];if(!s){for(e||(e=k(t)),i=e.length;i--;)s=y(e[i]),s[z]?n.push(s):r.push(s);s=Y(t,T(r,n)),s.selector=t}return s},A=e.select=function(t,e,i,n){var r,s,o,a,l,u="function"==typeof t&&t,h=!n&&k(t=u.selector||t);if(i=i||[],1===h.length){if(s=h[0]=h[0].slice(0),s.length>2&&"ID"===(o=s[0]).type&&w.getById&&9===e.nodeType&&L&&b.relative[s[1].type]){if(e=(b.find.ID(o.matches[0].replace(yt,Tt),e)||[])[0],!e)return i;u&&(e=e.parentNode),t=t.slice(s.shift().value.length)}for(r=pt.needsContext.test(t)?0:s.length;r--&&(o=s[r],!b.relative[a=o.type]);)if((l=b.find[a])&&(n=l(o.matches[0].replace(yt,Tt),vt.test(s[0].type)&&c(e.parentNode)||e))){if(s.splice(r,1),t=n.length&&p(s),!t)return Z.apply(i,n),i;break}}return(u||S(t,h))(n,e,!L,i,!e||vt.test(t)&&c(e.parentNode)||e),i},w.sortStable=z.split("").sort($).join("")===z,w.detectDuplicates=!!R,j(),w.sortDetached=r(function(t){return 1&t.compareDocumentPosition(E.createElement("fieldset"))}),r(function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")})||s("type|href|height|width",function(t,e,i){if(!i)return t.getAttribute(e,"type"===e.toLowerCase()?1:2)}),w.attributes&&r(function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")})||s("value",function(t,e,i){if(!i&&"input"===t.nodeName.toLowerCase())return t.defaultValue}),r(function(t){return null==t.getAttribute("disabled")})||s(et,function(t,e,i){var n;if(!i)return t[e]===!0?e.toLowerCase():(n=t.getAttributeNode(e))&&n.specified?n.value:null}),e}(t);ft.find=gt,ft.expr=gt.selectors,ft.expr[":"]=ft.expr.pseudos,ft.uniqueSort=ft.unique=gt.uniqueSort,ft.text=gt.getText,ft.isXMLDoc=gt.isXML,ft.contains=gt.contains,ft.escapeSelector=gt.escape;var vt=function(t,e,i){for(var n=[],r=void 0!==i;(t=t[e])&&9!==t.nodeType;)if(1===t.nodeType){if(r&&ft(t).is(i))break;n.push(t)}return n},yt=function(t,e){for(var i=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&i.push(t);return i},Tt=ft.expr.match.needsContext,xt=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i,wt=/^.[^:#\[\.,]*$/;ft.filter=function(t,e,i){var n=e[0];return i&&(t=":not("+t+")"),1===e.length&&1===n.nodeType?ft.find.matchesSelector(n,t)?[n]:[]:ft.find.matches(t,ft.grep(e,function(t){return 1===t.nodeType}))},ft.fn.extend({find:function(t){var e,i,n=this.length,r=this;if("string"!=typeof t)return this.pushStack(ft(t).filter(function(){for(e=0;e<n;e++)if(ft.contains(r[e],this))return!0}));for(i=this.pushStack([]),e=0;e<n;e++)ft.find(t,r[e],i);return n>1?ft.uniqueSort(i):i},filter:function(t){return this.pushStack(r(this,t||[],!1))},not:function(t){return this.pushStack(r(this,t||[],!0))},is:function(t){return!!r(this,"string"==typeof t&&Tt.test(t)?ft(t):t||[],!1).length}});var bt,Pt=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,Ct=ft.fn.init=function(t,e,i){var n,r;if(!t)return this;if(i=i||bt,"string"==typeof t){if(n="<"===t[0]&&">"===t[t.length-1]&&t.length>=3?[null,t,null]:Pt.exec(t),!n||!n[1]&&e)return!e||e.jquery?(e||i).find(t):this.constructor(e).find(t);if(n[1]){if(e=e instanceof ft?e[0]:e,ft.merge(this,ft.parseHTML(n[1],e&&e.nodeType?e.ownerDocument||e:J,!0)),xt.test(n[1])&&ft.isPlainObject(e))for(n in e)ft.isFunction(this[n])?this[n](e[n]):this.attr(n,e[n]);return this}return r=J.getElementById(n[2]),r&&(this[0]=r,this.length=1),this}return t.nodeType?(this[0]=t,this.length=1,this):ft.isFunction(t)?void 0!==i.ready?i.ready(t):t(ft):ft.makeArray(t,this)};Ct.prototype=ft.fn,bt=ft(J);var kt=/^(?:parents|prev(?:Until|All))/,St={children:!0,contents:!0,next:!0,prev:!0};ft.fn.extend({has:function(t){var e=ft(t,this),i=e.length;return this.filter(function(){for(var t=0;t<i;t++)if(ft.contains(this,e[t]))return!0})},closest:function(t,e){var i,n=0,r=this.length,s=[],o="string"!=typeof t&&ft(t);if(!Tt.test(t))for(;n<r;n++)for(i=this[n];i&&i!==e;i=i.parentNode)if(i.nodeType<11&&(o?o.index(i)>-1:1===i.nodeType&&ft.find.matchesSelector(i,t))){s.push(i);break}return this.pushStack(s.length>1?ft.uniqueSort(s):s)},index:function(t){return t?"string"==typeof t?rt.call(ft(t),this[0]):rt.call(this,t.jquery?t[0]:t):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){return this.pushStack(ft.uniqueSort(ft.merge(this.get(),ft(t,e))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),ft.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return vt(t,"parentNode")},parentsUntil:function(t,e,i){return vt(t,"parentNode",i)},next:function(t){return s(t,"nextSibling")},prev:function(t){return s(t,"previousSibling")},nextAll:function(t){return vt(t,"nextSibling")},prevAll:function(t){return vt(t,"previousSibling")},nextUntil:function(t,e,i){return vt(t,"nextSibling",i)},prevUntil:function(t,e,i){return vt(t,"previousSibling",i)},siblings:function(t){return yt((t.parentNode||{}).firstChild,t)},children:function(t){return yt(t.firstChild)},contents:function(t){return t.contentDocument||ft.merge([],t.childNodes)}},function(t,e){ft.fn[t]=function(i,n){var r=ft.map(this,e,i);return"Until"!==t.slice(-5)&&(n=i),n&&"string"==typeof n&&(r=ft.filter(n,r)),this.length>1&&(St[t]||ft.uniqueSort(r),kt.test(t)&&r.reverse()),this.pushStack(r)}});var At=/\S+/g;ft.Callbacks=function(t){t="string"==typeof t?o(t):ft.extend({},t);var e,i,n,r,s=[],a=[],l=-1,u=function(){for(r=t.once,n=e=!0;a.length;l=-1)for(i=a.shift();++l<s.length;)s[l].apply(i[0],i[1])===!1&&t.stopOnFalse&&(l=s.length,i=!1);t.memory||(i=!1),e=!1,r&&(s=i?[]:"")},h={add:function(){return s&&(i&&!e&&(l=s.length-1,a.push(i)),function e(i){ft.each(i,function(i,n){ft.isFunction(n)?t.unique&&h.has(n)||s.push(n):n&&n.length&&"string"!==ft.type(n)&&e(n)})}(arguments),i&&!e&&u()),this},remove:function(){return ft.each(arguments,function(t,e){for(var i;(i=ft.inArray(e,s,i))>-1;)s.splice(i,1),i<=l&&l--}),this},has:function(t){return t?ft.inArray(t,s)>-1:s.length>0},empty:function(){return s&&(s=[]),this},disable:function(){return r=a=[],s=i="",this},disabled:function(){return!s},lock:function(){return r=a=[],i||e||(s=i=""),this},locked:function(){return!!r},fireWith:function(t,i){return r||(i=i||[],i=[t,i.slice?i.slice():i],a.push(i),e||u()),this},fire:function(){return h.fireWith(this,arguments),this},fired:function(){return!!n}};return h},ft.extend({Deferred:function(e){var i=[["notify","progress",ft.Callbacks("memory"),ft.Callbacks("memory"),2],["resolve","done",ft.Callbacks("once memory"),ft.Callbacks("once memory"),0,"resolved"],["reject","fail",ft.Callbacks("once memory"),ft.Callbacks("once memory"),1,"rejected"]],n="pending",r={state:function(){return n},always:function(){return s.done(arguments).fail(arguments),this},catch:function(t){return r.then(null,t)},pipe:function(){var t=arguments;return ft.Deferred(function(e){ft.each(i,function(i,n){var r=ft.isFunction(t[n[4]])&&t[n[4]];s[n[1]](function(){var t=r&&r.apply(this,arguments);t&&ft.isFunction(t.promise)?t.promise().progress(e.notify).done(e.resolve).fail(e.reject):e[n[0]+"With"](this,r?[t]:arguments)})}),t=null}).promise()},then:function(e,n,r){function s(e,i,n,r){return function(){var u=this,h=arguments,c=function(){var t,c;if(!(e<o)){if(t=n.apply(u,h),t===i.promise())throw new TypeError("Thenable self-resolution");c=t&&("object"==typeof t||"function"==typeof t)&&t.then,ft.isFunction(c)?r?c.call(t,s(o,i,a,r),s(o,i,l,r)):(o++,c.call(t,s(o,i,a,r),s(o,i,l,r),s(o,i,a,i.notifyWith))):(n!==a&&(u=void 0,h=[t]),(r||i.resolveWith)(u,h))}},f=r?c:function(){try{c()}catch(t){ft.Deferred.exceptionHook&&ft.Deferred.exceptionHook(t,f.stackTrace),e+1>=o&&(n!==l&&(u=void 0,h=[t]),i.rejectWith(u,h))}};e?f():(ft.Deferred.getStackHook&&(f.stackTrace=ft.Deferred.getStackHook()),t.setTimeout(f))}}var o=0;return ft.Deferred(function(t){i[0][3].add(s(0,t,ft.isFunction(r)?r:a,t.notifyWith)),i[1][3].add(s(0,t,ft.isFunction(e)?e:a)),i[2][3].add(s(0,t,ft.isFunction(n)?n:l))}).promise()},promise:function(t){return null!=t?ft.extend(t,r):r}},s={};return ft.each(i,function(t,e){var o=e[2],a=e[5];r[e[1]]=o.add,a&&o.add(function(){n=a},i[3-t][2].disable,i[0][2].lock),o.add(e[3].fire),s[e[0]]=function(){return s[e[0]+"With"](this===s?void 0:this,arguments),this},s[e[0]+"With"]=o.fireWith}),r.promise(s),e&&e.call(s,s),s},when:function(t){var e=arguments.length,i=e,n=Array(i),r=et.call(arguments),s=ft.Deferred(),o=function(t){return function(i){n[t]=this,r[t]=arguments.length>1?et.call(arguments):i,--e||s.resolveWith(n,r)}};if(e<=1&&(u(t,s.done(o(i)).resolve,s.reject),"pending"===s.state()||ft.isFunction(r[i]&&r[i].then)))return s.then();for(;i--;)u(r[i],o(i),s.reject);return s.promise()}});var Ot=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;ft.Deferred.exceptionHook=function(e,i){t.console&&t.console.warn&&e&&Ot.test(e.name)&&t.console.warn("jQuery.Deferred exception: "+e.message,e.stack,i)},ft.readyException=function(e){t.setTimeout(function(){throw e})};var Dt=ft.Deferred();ft.fn.ready=function(t){return Dt.then(t).catch(function(t){ft.readyException(t)}),this},ft.extend({isReady:!1,readyWait:1,holdReady:function(t){t?ft.readyWait++:ft.ready(!0)},ready:function(t){(t===!0?--ft.readyWait:ft.isReady)||(ft.isReady=!0,t!==!0&&--ft.readyWait>0||Dt.resolveWith(J,[ft]))}}),ft.ready.then=Dt.then,"complete"===J.readyState||"loading"!==J.readyState&&!J.documentElement.doScroll?t.setTimeout(ft.ready):(J.addEventListener("DOMContentLoaded",h),t.addEventListener("load",h));var Rt=function(t,e,i,n,r,s,o){var a=0,l=t.length,u=null==i;if("object"===ft.type(i)){r=!0;for(a in i)Rt(t,e,a,i[a],!0,s,o)}else if(void 0!==n&&(r=!0,ft.isFunction(n)||(o=!0),u&&(o?(e.call(t,n),e=null):(u=e,e=function(t,e,i){return u.call(ft(t),i)})),e))for(;a<l;a++)e(t[a],i,o?n:n.call(t[a],a,e(t[a],i)));return r?t:u?e.call(t):l?e(t[0],i):s},jt=function(t){return 1===t.nodeType||9===t.nodeType||!+t.nodeType};c.uid=1,c.prototype={cache:function(t){var e=t[this.expando];return e||(e={},jt(t)&&(t.nodeType?t[this.expando]=e:Object.defineProperty(t,this.expando,{value:e,configurable:!0}))),e},set:function(t,e,i){var n,r=this.cache(t);if("string"==typeof e)r[ft.camelCase(e)]=i;else for(n in e)r[ft.camelCase(n)]=e[n];return r},get:function(t,e){return void 0===e?this.cache(t):t[this.expando]&&t[this.expando][ft.camelCase(e)]},access:function(t,e,i){return void 0===e||e&&"string"==typeof e&&void 0===i?this.get(t,e):(this.set(t,e,i),void 0!==i?i:e)},remove:function(t,e){var i,n=t[this.expando];if(void 0!==n){if(void 0!==e){ft.isArray(e)?e=e.map(ft.camelCase):(e=ft.camelCase(e),e=e in n?[e]:e.match(At)||[]),i=e.length;for(;i--;)delete n[e[i]]}(void 0===e||ft.isEmptyObject(n))&&(t.nodeType?t[this.expando]=void 0:delete t[this.expando])}},hasData:function(t){var e=t[this.expando];return void 0!==e&&!ft.isEmptyObject(e)}};var Et=new c,Nt=new c,Lt=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Mt=/[A-Z]/g;ft.extend({hasData:function(t){return Nt.hasData(t)||Et.hasData(t)},data:function(t,e,i){return Nt.access(t,e,i)},removeData:function(t,e){Nt.remove(t,e)},_data:function(t,e,i){return Et.access(t,e,i)},_removeData:function(t,e){Et.remove(t,e)}}),ft.fn.extend({data:function(t,e){var i,n,r,s=this[0],o=s&&s.attributes;if(void 0===t){if(this.length&&(r=Nt.get(s),1===s.nodeType&&!Et.get(s,"hasDataAttrs"))){for(i=o.length;i--;)o[i]&&(n=o[i].name,0===n.indexOf("data-")&&(n=ft.camelCase(n.slice(5)),f(s,n,r[n])));Et.set(s,"hasDataAttrs",!0)}return r}return"object"==typeof t?this.each(function(){Nt.set(this,t)}):Rt(this,function(e){var i;if(s&&void 0===e){if(i=Nt.get(s,t),void 0!==i)return i;if(i=f(s,t),void 0!==i)return i}else this.each(function(){Nt.set(this,t,e)})},null,e,arguments.length>1,null,!0)},removeData:function(t){return this.each(function(){Nt.remove(this,t)})}}),ft.extend({queue:function(t,e,i){var n;if(t)return e=(e||"fx")+"queue",n=Et.get(t,e),i&&(!n||ft.isArray(i)?n=Et.access(t,e,ft.makeArray(i)):n.push(i)),n||[]},dequeue:function(t,e){e=e||"fx";var i=ft.queue(t,e),n=i.length,r=i.shift(),s=ft._queueHooks(t,e),o=function(){ft.dequeue(t,e)};"inprogress"===r&&(r=i.shift(),n--),r&&("fx"===e&&i.unshift("inprogress"),delete s.stop,r.call(t,o,s)),!n&&s&&s.empty.fire()},_queueHooks:function(t,e){var i=e+"queueHooks";return Et.get(t,i)||Et.access(t,i,{empty:ft.Callbacks("once memory").add(function(){Et.remove(t,[e+"queue",i])})})}}),ft.fn.extend({queue:function(t,e){var i=2;return"string"!=typeof t&&(e=t,t="fx",i--),arguments.length<i?ft.queue(this[0],t):void 0===e?this:this.each(function(){var i=ft.queue(this,t,e);ft._queueHooks(this,t),"fx"===t&&"inprogress"!==i[0]&&ft.dequeue(this,t)})},dequeue:function(t){return this.each(function(){ft.dequeue(this,t)})},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,e){var i,n=1,r=ft.Deferred(),s=this,o=this.length,a=function(){--n||r.resolveWith(s,[s])};for("string"!=typeof t&&(e=t,t=void 0),t=t||"fx";o--;)i=Et.get(s[o],t+"queueHooks"),i&&i.empty&&(n++,i.empty.add(a));return a(),r.promise(e)}});var Ft=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,qt=new RegExp("^(?:([+-])=|)("+Ft+")([a-z%]*)$","i"),It=["Top","Right","Bottom","Left"],zt=function(t,e){
return t=e||t,"none"===t.style.display||""===t.style.display&&ft.contains(t.ownerDocument,t)&&"none"===ft.css(t,"display")},Bt=function(t,e,i,n){var r,s,o={};for(s in e)o[s]=t.style[s],t.style[s]=e[s];r=i.apply(t,n||[]);for(s in e)t.style[s]=o[s];return r},Ht={};ft.fn.extend({show:function(){return _(this,!0)},hide:function(){return _(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each(function(){zt(this)?ft(this).show():ft(this).hide()})}});var Xt=/^(?:checkbox|radio)$/i,Wt=/<([a-z][^\/\0>\x20\t\r\n\f]+)/i,Ut=/^$|\/(?:java|ecma)script/i,Yt={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};Yt.optgroup=Yt.option,Yt.tbody=Yt.tfoot=Yt.colgroup=Yt.caption=Yt.thead,Yt.th=Yt.td;var $t=/<|&#?\w+;/;!function(){var t=J.createDocumentFragment(),e=t.appendChild(J.createElement("div")),i=J.createElement("input");i.setAttribute("type","radio"),i.setAttribute("checked","checked"),i.setAttribute("name","t"),e.appendChild(i),ht.checkClone=e.cloneNode(!0).cloneNode(!0).lastChild.checked,e.innerHTML="<textarea>x</textarea>",ht.noCloneChecked=!!e.cloneNode(!0).lastChild.defaultValue}();var Vt=J.documentElement,Qt=/^key/,Gt=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Kt=/^([^.]*)(?:\.(.+)|)/;ft.event={global:{},add:function(t,e,i,n,r){var s,o,a,l,u,h,c,f,p,d,_,m=Et.get(t);if(m)for(i.handler&&(s=i,i=s.handler,r=s.selector),r&&ft.find.matchesSelector(Vt,r),i.guid||(i.guid=ft.guid++),(l=m.events)||(l=m.events={}),(o=m.handle)||(o=m.handle=function(e){return"undefined"!=typeof ft&&ft.event.triggered!==e.type?ft.event.dispatch.apply(t,arguments):void 0}),e=(e||"").match(At)||[""],u=e.length;u--;)a=Kt.exec(e[u])||[],p=_=a[1],d=(a[2]||"").split(".").sort(),p&&(c=ft.event.special[p]||{},p=(r?c.delegateType:c.bindType)||p,c=ft.event.special[p]||{},h=ft.extend({type:p,origType:_,data:n,handler:i,guid:i.guid,selector:r,needsContext:r&&ft.expr.match.needsContext.test(r),namespace:d.join(".")},s),(f=l[p])||(f=l[p]=[],f.delegateCount=0,c.setup&&c.setup.call(t,n,d,o)!==!1||t.addEventListener&&t.addEventListener(p,o)),c.add&&(c.add.call(t,h),h.handler.guid||(h.handler.guid=i.guid)),r?f.splice(f.delegateCount++,0,h):f.push(h),ft.event.global[p]=!0)},remove:function(t,e,i,n,r){var s,o,a,l,u,h,c,f,p,d,_,m=Et.hasData(t)&&Et.get(t);if(m&&(l=m.events)){for(e=(e||"").match(At)||[""],u=e.length;u--;)if(a=Kt.exec(e[u])||[],p=_=a[1],d=(a[2]||"").split(".").sort(),p){for(c=ft.event.special[p]||{},p=(n?c.delegateType:c.bindType)||p,f=l[p]||[],a=a[2]&&new RegExp("(^|\\.)"+d.join("\\.(?:.*\\.|)")+"(\\.|$)"),o=s=f.length;s--;)h=f[s],!r&&_!==h.origType||i&&i.guid!==h.guid||a&&!a.test(h.namespace)||n&&n!==h.selector&&("**"!==n||!h.selector)||(f.splice(s,1),h.selector&&f.delegateCount--,c.remove&&c.remove.call(t,h));o&&!f.length&&(c.teardown&&c.teardown.call(t,d,m.handle)!==!1||ft.removeEvent(t,p,m.handle),delete l[p])}else for(p in l)ft.event.remove(t,p+e[u],i,n,!0);ft.isEmptyObject(l)&&Et.remove(t,"handle events")}},dispatch:function(t){var e,i,n,r,s,o,a=ft.event.fix(t),l=new Array(arguments.length),u=(Et.get(this,"events")||{})[a.type]||[],h=ft.event.special[a.type]||{};for(l[0]=a,e=1;e<arguments.length;e++)l[e]=arguments[e];if(a.delegateTarget=this,!h.preDispatch||h.preDispatch.call(this,a)!==!1){for(o=ft.event.handlers.call(this,a,u),e=0;(r=o[e++])&&!a.isPropagationStopped();)for(a.currentTarget=r.elem,i=0;(s=r.handlers[i++])&&!a.isImmediatePropagationStopped();)a.rnamespace&&!a.rnamespace.test(s.namespace)||(a.handleObj=s,a.data=s.data,n=((ft.event.special[s.origType]||{}).handle||s.handler).apply(r.elem,l),void 0!==n&&(a.result=n)===!1&&(a.preventDefault(),a.stopPropagation()));return h.postDispatch&&h.postDispatch.call(this,a),a.result}},handlers:function(t,e){var i,n,r,s,o=[],a=e.delegateCount,l=t.target;if(a&&l.nodeType&&("click"!==t.type||isNaN(t.button)||t.button<1))for(;l!==this;l=l.parentNode||this)if(1===l.nodeType&&(l.disabled!==!0||"click"!==t.type)){for(n=[],i=0;i<a;i++)s=e[i],r=s.selector+" ",void 0===n[r]&&(n[r]=s.needsContext?ft(r,this).index(l)>-1:ft.find(r,this,null,[l]).length),n[r]&&n.push(s);n.length&&o.push({elem:l,handlers:n})}return a<e.length&&o.push({elem:this,handlers:e.slice(a)}),o},addProp:function(t,e){Object.defineProperty(ft.Event.prototype,t,{enumerable:!0,configurable:!0,get:ft.isFunction(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(t){return t[ft.expando]?t:new ft.Event(t)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==x()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===x()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&ft.nodeName(this,"input"))return this.click(),!1},_default:function(t){return ft.nodeName(t.target,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}}},ft.removeEvent=function(t,e,i){t.removeEventListener&&t.removeEventListener(e,i)},ft.Event=function(t,e){return this instanceof ft.Event?(t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&t.returnValue===!1?y:T,this.target=t.target&&3===t.target.nodeType?t.target.parentNode:t.target,this.currentTarget=t.currentTarget,this.relatedTarget=t.relatedTarget):this.type=t,e&&ft.extend(this,e),this.timeStamp=t&&t.timeStamp||ft.now(),void(this[ft.expando]=!0)):new ft.Event(t,e)},ft.Event.prototype={constructor:ft.Event,isDefaultPrevented:T,isPropagationStopped:T,isImmediatePropagationStopped:T,isSimulated:!1,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=y,t&&!this.isSimulated&&t.preventDefault()},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=y,t&&!this.isSimulated&&t.stopPropagation()},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=y,t&&!this.isSimulated&&t.stopImmediatePropagation(),this.stopPropagation()}},ft.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(t){var e=t.button;return null==t.which&&Qt.test(t.type)?null!=t.charCode?t.charCode:t.keyCode:!t.which&&void 0!==e&&Gt.test(t.type)?1&e?1:2&e?3:4&e?2:0:t.which}},ft.event.addProp),ft.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(t,e){ft.event.special[t]={delegateType:e,bindType:e,handle:function(t){var i,n=this,r=t.relatedTarget,s=t.handleObj;return r&&(r===n||ft.contains(n,r))||(t.type=s.origType,i=s.handler.apply(this,arguments),t.type=e),i}}}),ft.fn.extend({on:function(t,e,i,n){return w(this,t,e,i,n)},one:function(t,e,i,n){return w(this,t,e,i,n,1)},off:function(t,e,i){var n,r;if(t&&t.preventDefault&&t.handleObj)return n=t.handleObj,ft(t.delegateTarget).off(n.namespace?n.origType+"."+n.namespace:n.origType,n.selector,n.handler),this;if("object"==typeof t){for(r in t)this.off(r,e,t[r]);return this}return e!==!1&&"function"!=typeof e||(i=e,e=void 0),i===!1&&(i=T),this.each(function(){ft.event.remove(this,t,i,e)})}});var Zt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,Jt=/<script|<style|<link/i,te=/checked\s*(?:[^=]|=\s*.checked.)/i,ee=/^true\/(.*)/,ie=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;ft.extend({htmlPrefilter:function(t){return t.replace(Zt,"<$1></$2>")},clone:function(t,e,i){var n,r,s,o,a=t.cloneNode(!0),l=ft.contains(t.ownerDocument,t);if(!(ht.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||ft.isXMLDoc(t)))for(o=m(a),s=m(t),n=0,r=s.length;n<r;n++)S(s[n],o[n]);if(e)if(i)for(s=s||m(t),o=o||m(a),n=0,r=s.length;n<r;n++)k(s[n],o[n]);else k(t,a);return o=m(a,"script"),o.length>0&&g(o,!l&&m(t,"script")),a},cleanData:function(t){for(var e,i,n,r=ft.event.special,s=0;void 0!==(i=t[s]);s++)if(jt(i)){if(e=i[Et.expando]){if(e.events)for(n in e.events)r[n]?ft.event.remove(i,n):ft.removeEvent(i,n,e.handle);i[Et.expando]=void 0}i[Nt.expando]&&(i[Nt.expando]=void 0)}}}),ft.fn.extend({detach:function(t){return O(this,t,!0)},remove:function(t){return O(this,t)},text:function(t){return Rt(this,function(t){return void 0===t?ft.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=t)})},null,t,arguments.length)},append:function(){return A(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=b(this,t);e.appendChild(t)}})},prepend:function(){return A(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=b(this,t);e.insertBefore(t,e.firstChild)}})},before:function(){return A(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this)})},after:function(){return A(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)})},empty:function(){for(var t,e=0;null!=(t=this[e]);e++)1===t.nodeType&&(ft.cleanData(m(t,!1)),t.textContent="");return this},clone:function(t,e){return t=null!=t&&t,e=null==e?t:e,this.map(function(){return ft.clone(this,t,e)})},html:function(t){return Rt(this,function(t){var e=this[0]||{},i=0,n=this.length;if(void 0===t&&1===e.nodeType)return e.innerHTML;if("string"==typeof t&&!Jt.test(t)&&!Yt[(Wt.exec(t)||["",""])[1].toLowerCase()]){t=ft.htmlPrefilter(t);try{for(;i<n;i++)e=this[i]||{},1===e.nodeType&&(ft.cleanData(m(e,!1)),e.innerHTML=t);e=0}catch(t){}}e&&this.empty().append(t)},null,t,arguments.length)},replaceWith:function(){var t=[];return A(this,arguments,function(e){var i=this.parentNode;ft.inArray(this,t)<0&&(ft.cleanData(m(this)),i&&i.replaceChild(e,this))},t)}}),ft.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(t,e){ft.fn[t]=function(t){for(var i,n=[],r=ft(t),s=r.length-1,o=0;o<=s;o++)i=o===s?this:this.clone(!0),ft(r[o])[e](i),nt.apply(n,i.get());return this.pushStack(n)}});var ne=/^margin/,re=new RegExp("^("+Ft+")(?!px)[a-z%]+$","i"),se=function(e){var i=e.ownerDocument.defaultView;return i&&i.opener||(i=t),i.getComputedStyle(e)};!function(){function e(){if(a){a.style.cssText="box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",a.innerHTML="",Vt.appendChild(o);var e=t.getComputedStyle(a);i="1%"!==e.top,s="2px"===e.marginLeft,n="4px"===e.width,a.style.marginRight="50%",r="4px"===e.marginRight,Vt.removeChild(o),a=null}}var i,n,r,s,o=J.createElement("div"),a=J.createElement("div");a.style&&(a.style.backgroundClip="content-box",a.cloneNode(!0).style.backgroundClip="",ht.clearCloneStyle="content-box"===a.style.backgroundClip,o.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",o.appendChild(a),ft.extend(ht,{pixelPosition:function(){return e(),i},boxSizingReliable:function(){return e(),n},pixelMarginRight:function(){return e(),r},reliableMarginLeft:function(){return e(),s}}))}();var oe=/^(none|table(?!-c[ea]).+)/,ae={position:"absolute",visibility:"hidden",display:"block"},le={letterSpacing:"0",fontWeight:"400"},ue=["Webkit","Moz","ms"],he=J.createElement("div").style;ft.extend({cssHooks:{opacity:{get:function(t,e){if(e){var i=D(t,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{float:"cssFloat"},style:function(t,e,i,n){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var r,s,o,a=ft.camelCase(e),l=t.style;return e=ft.cssProps[a]||(ft.cssProps[a]=j(a)||a),o=ft.cssHooks[e]||ft.cssHooks[a],void 0===i?o&&"get"in o&&void 0!==(r=o.get(t,!1,n))?r:l[e]:(s=typeof i,"string"===s&&(r=qt.exec(i))&&r[1]&&(i=p(t,e,r),s="number"),void(null!=i&&i===i&&("number"===s&&(i+=r&&r[3]||(ft.cssNumber[a]?"":"px")),ht.clearCloneStyle||""!==i||0!==e.indexOf("background")||(l[e]="inherit"),o&&"set"in o&&void 0===(i=o.set(t,i,n))||(l[e]=i))))}},css:function(t,e,i,n){var r,s,o,a=ft.camelCase(e);return e=ft.cssProps[a]||(ft.cssProps[a]=j(a)||a),o=ft.cssHooks[e]||ft.cssHooks[a],o&&"get"in o&&(r=o.get(t,!0,i)),void 0===r&&(r=D(t,e,n)),"normal"===r&&e in le&&(r=le[e]),""===i||i?(s=parseFloat(r),i===!0||isFinite(s)?s||0:r):r}}),ft.each(["height","width"],function(t,e){ft.cssHooks[e]={get:function(t,i,n){if(i)return!oe.test(ft.css(t,"display"))||t.getClientRects().length&&t.getBoundingClientRect().width?L(t,e,n):Bt(t,ae,function(){return L(t,e,n)})},set:function(t,i,n){var r,s=n&&se(t),o=n&&N(t,e,n,"border-box"===ft.css(t,"boxSizing",!1,s),s);return o&&(r=qt.exec(i))&&"px"!==(r[3]||"px")&&(t.style[e]=i,i=ft.css(t,e)),E(t,i,o)}}}),ft.cssHooks.marginLeft=R(ht.reliableMarginLeft,function(t,e){if(e)return(parseFloat(D(t,"marginLeft"))||t.getBoundingClientRect().left-Bt(t,{marginLeft:0},function(){return t.getBoundingClientRect().left}))+"px"}),ft.each({margin:"",padding:"",border:"Width"},function(t,e){ft.cssHooks[t+e]={expand:function(i){for(var n=0,r={},s="string"==typeof i?i.split(" "):[i];n<4;n++)r[t+It[n]+e]=s[n]||s[n-2]||s[0];return r}},ne.test(t)||(ft.cssHooks[t+e].set=E)}),ft.fn.extend({css:function(t,e){return Rt(this,function(t,e,i){var n,r,s={},o=0;if(ft.isArray(e)){for(n=se(t),r=e.length;o<r;o++)s[e[o]]=ft.css(t,e[o],!1,n);return s}return void 0!==i?ft.style(t,e,i):ft.css(t,e)},t,e,arguments.length>1)}}),ft.Tween=M,M.prototype={constructor:M,init:function(t,e,i,n,r,s){this.elem=t,this.prop=i,this.easing=r||ft.easing._default,this.options=e,this.start=this.now=this.cur(),this.end=n,this.unit=s||(ft.cssNumber[i]?"":"px")},cur:function(){var t=M.propHooks[this.prop];return t&&t.get?t.get(this):M.propHooks._default.get(this)},run:function(t){var e,i=M.propHooks[this.prop];return this.options.duration?this.pos=e=ft.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):this.pos=e=t,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):M.propHooks._default.set(this),this}},M.prototype.init.prototype=M.prototype,M.propHooks={_default:{get:function(t){var e;return 1!==t.elem.nodeType||null!=t.elem[t.prop]&&null==t.elem.style[t.prop]?t.elem[t.prop]:(e=ft.css(t.elem,t.prop,""),e&&"auto"!==e?e:0)},set:function(t){ft.fx.step[t.prop]?ft.fx.step[t.prop](t):1!==t.elem.nodeType||null==t.elem.style[ft.cssProps[t.prop]]&&!ft.cssHooks[t.prop]?t.elem[t.prop]=t.now:ft.style(t.elem,t.prop,t.now+t.unit)}}},M.propHooks.scrollTop=M.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},ft.easing={linear:function(t){return t},swing:function(t){return.5-Math.cos(t*Math.PI)/2},_default:"swing"},ft.fx=M.prototype.init,ft.fx.step={};var ce,fe,pe=/^(?:toggle|show|hide)$/,de=/queueHooks$/;ft.Animation=ft.extend(X,{tweeners:{"*":[function(t,e){var i=this.createTween(t,e);return p(i.elem,t,qt.exec(e),i),i}]},tweener:function(t,e){ft.isFunction(t)?(e=t,t=["*"]):t=t.match(At);for(var i,n=0,r=t.length;n<r;n++)i=t[n],X.tweeners[i]=X.tweeners[i]||[],X.tweeners[i].unshift(e)},prefilters:[B],prefilter:function(t,e){e?X.prefilters.unshift(t):X.prefilters.push(t)}}),ft.speed=function(t,e,i){var n=t&&"object"==typeof t?ft.extend({},t):{complete:i||!i&&e||ft.isFunction(t)&&t,duration:t,easing:i&&e||e&&!ft.isFunction(e)&&e};return ft.fx.off||J.hidden?n.duration=0:n.duration="number"==typeof n.duration?n.duration:n.duration in ft.fx.speeds?ft.fx.speeds[n.duration]:ft.fx.speeds._default,null!=n.queue&&n.queue!==!0||(n.queue="fx"),n.old=n.complete,n.complete=function(){ft.isFunction(n.old)&&n.old.call(this),n.queue&&ft.dequeue(this,n.queue)},n},ft.fn.extend({fadeTo:function(t,e,i,n){return this.filter(zt).css("opacity",0).show().end().animate({opacity:e},t,i,n)},animate:function(t,e,i,n){var r=ft.isEmptyObject(t),s=ft.speed(e,i,n),o=function(){var e=X(this,ft.extend({},t),s);(r||Et.get(this,"finish"))&&e.stop(!0)};return o.finish=o,r||s.queue===!1?this.each(o):this.queue(s.queue,o)},stop:function(t,e,i){var n=function(t){var e=t.stop;delete t.stop,e(i)};return"string"!=typeof t&&(i=e,e=t,t=void 0),e&&t!==!1&&this.queue(t||"fx",[]),this.each(function(){var e=!0,r=null!=t&&t+"queueHooks",s=ft.timers,o=Et.get(this);if(r)o[r]&&o[r].stop&&n(o[r]);else for(r in o)o[r]&&o[r].stop&&de.test(r)&&n(o[r]);for(r=s.length;r--;)s[r].elem!==this||null!=t&&s[r].queue!==t||(s[r].anim.stop(i),e=!1,s.splice(r,1));!e&&i||ft.dequeue(this,t)})},finish:function(t){return t!==!1&&(t=t||"fx"),this.each(function(){var e,i=Et.get(this),n=i[t+"queue"],r=i[t+"queueHooks"],s=ft.timers,o=n?n.length:0;for(i.finish=!0,ft.queue(this,t,[]),r&&r.stop&&r.stop.call(this,!0),e=s.length;e--;)s[e].elem===this&&s[e].queue===t&&(s[e].anim.stop(!0),s.splice(e,1));for(e=0;e<o;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete i.finish})}}),ft.each(["toggle","show","hide"],function(t,e){var i=ft.fn[e];ft.fn[e]=function(t,n,r){return null==t||"boolean"==typeof t?i.apply(this,arguments):this.animate(I(e,!0),t,n,r)}}),ft.each({slideDown:I("show"),slideUp:I("hide"),slideToggle:I("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(t,e){ft.fn[t]=function(t,i,n){return this.animate(e,t,i,n)}}),ft.timers=[],ft.fx.tick=function(){var t,e=0,i=ft.timers;for(ce=ft.now();e<i.length;e++)t=i[e],t()||i[e]!==t||i.splice(e--,1);i.length||ft.fx.stop(),ce=void 0},ft.fx.timer=function(t){ft.timers.push(t),t()?ft.fx.start():ft.timers.pop()},ft.fx.interval=13,ft.fx.start=function(){fe||(fe=t.requestAnimationFrame?t.requestAnimationFrame(F):t.setInterval(ft.fx.tick,ft.fx.interval))},ft.fx.stop=function(){t.cancelAnimationFrame?t.cancelAnimationFrame(fe):t.clearInterval(fe),fe=null},ft.fx.speeds={slow:600,fast:200,_default:400},ft.fn.delay=function(e,i){return e=ft.fx?ft.fx.speeds[e]||e:e,i=i||"fx",this.queue(i,function(i,n){var r=t.setTimeout(i,e);n.stop=function(){t.clearTimeout(r)}})},function(){var t=J.createElement("input"),e=J.createElement("select"),i=e.appendChild(J.createElement("option"));t.type="checkbox",ht.checkOn=""!==t.value,ht.optSelected=i.selected,t=J.createElement("input"),t.value="t",t.type="radio",ht.radioValue="t"===t.value}();var _e,me=ft.expr.attrHandle;ft.fn.extend({attr:function(t,e){return Rt(this,ft.attr,t,e,arguments.length>1)},removeAttr:function(t){return this.each(function(){ft.removeAttr(this,t)})}}),ft.extend({attr:function(t,e,i){var n,r,s=t.nodeType;if(3!==s&&8!==s&&2!==s)return"undefined"==typeof t.getAttribute?ft.prop(t,e,i):(1===s&&ft.isXMLDoc(t)||(r=ft.attrHooks[e.toLowerCase()]||(ft.expr.match.bool.test(e)?_e:void 0)),void 0!==i?null===i?void ft.removeAttr(t,e):r&&"set"in r&&void 0!==(n=r.set(t,i,e))?n:(t.setAttribute(e,i+""),i):r&&"get"in r&&null!==(n=r.get(t,e))?n:(n=ft.find.attr(t,e),null==n?void 0:n))},attrHooks:{type:{set:function(t,e){if(!ht.radioValue&&"radio"===e&&ft.nodeName(t,"input")){var i=t.value;return t.setAttribute("type",e),i&&(t.value=i),e}}}},removeAttr:function(t,e){var i,n=0,r=e&&e.match(At);if(r&&1===t.nodeType)for(;i=r[n++];)t.removeAttribute(i)}}),_e={set:function(t,e,i){return e===!1?ft.removeAttr(t,i):t.setAttribute(i,i),i}},ft.each(ft.expr.match.bool.source.match(/\w+/g),function(t,e){var i=me[e]||ft.find.attr;me[e]=function(t,e,n){var r,s,o=e.toLowerCase();return n||(s=me[o],me[o]=r,r=null!=i(t,e,n)?o:null,me[o]=s),r}});var ge=/^(?:input|select|textarea|button)$/i,ve=/^(?:a|area)$/i;ft.fn.extend({prop:function(t,e){return Rt(this,ft.prop,t,e,arguments.length>1)},removeProp:function(t){return this.each(function(){delete this[ft.propFix[t]||t]})}}),ft.extend({prop:function(t,e,i){var n,r,s=t.nodeType;if(3!==s&&8!==s&&2!==s)return 1===s&&ft.isXMLDoc(t)||(e=ft.propFix[e]||e,r=ft.propHooks[e]),void 0!==i?r&&"set"in r&&void 0!==(n=r.set(t,i,e))?n:t[e]=i:r&&"get"in r&&null!==(n=r.get(t,e))?n:t[e]},propHooks:{tabIndex:{get:function(t){var e=ft.find.attr(t,"tabindex");return e?parseInt(e,10):ge.test(t.nodeName)||ve.test(t.nodeName)&&t.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),ht.optSelected||(ft.propHooks.selected={get:function(t){var e=t.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(t){var e=t.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),ft.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){ft.propFix[this.toLowerCase()]=this});var ye=/[\t\r\n\f]/g;ft.fn.extend({addClass:function(t){var e,i,n,r,s,o,a,l=0;if(ft.isFunction(t))return this.each(function(e){ft(this).addClass(t.call(this,e,W(this)))});if("string"==typeof t&&t)for(e=t.match(At)||[];i=this[l++];)if(r=W(i),n=1===i.nodeType&&(" "+r+" ").replace(ye," ")){for(o=0;s=e[o++];)n.indexOf(" "+s+" ")<0&&(n+=s+" ");a=ft.trim(n),r!==a&&i.setAttribute("class",a)}return this},removeClass:function(t){var e,i,n,r,s,o,a,l=0;if(ft.isFunction(t))return this.each(function(e){ft(this).removeClass(t.call(this,e,W(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof t&&t)for(e=t.match(At)||[];i=this[l++];)if(r=W(i),n=1===i.nodeType&&(" "+r+" ").replace(ye," ")){for(o=0;s=e[o++];)for(;n.indexOf(" "+s+" ")>-1;)n=n.replace(" "+s+" "," ");a=ft.trim(n),r!==a&&i.setAttribute("class",a)}return this},toggleClass:function(t,e){var i=typeof t;return"boolean"==typeof e&&"string"===i?e?this.addClass(t):this.removeClass(t):ft.isFunction(t)?this.each(function(i){ft(this).toggleClass(t.call(this,i,W(this),e),e)}):this.each(function(){var e,n,r,s;if("string"===i)for(n=0,r=ft(this),s=t.match(At)||[];e=s[n++];)r.hasClass(e)?r.removeClass(e):r.addClass(e);else void 0!==t&&"boolean"!==i||(e=W(this),e&&Et.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||t===!1?"":Et.get(this,"__className__")||""))})},hasClass:function(t){var e,i,n=0;for(e=" "+t+" ";i=this[n++];)if(1===i.nodeType&&(" "+W(i)+" ").replace(ye," ").indexOf(e)>-1)return!0;return!1}});var Te=/\r/g,xe=/[\x20\t\r\n\f]+/g;ft.fn.extend({val:function(t){var e,i,n,r=this[0];return arguments.length?(n=ft.isFunction(t),this.each(function(i){var r;1===this.nodeType&&(r=n?t.call(this,i,ft(this).val()):t,null==r?r="":"number"==typeof r?r+="":ft.isArray(r)&&(r=ft.map(r,function(t){return null==t?"":t+""})),e=ft.valHooks[this.type]||ft.valHooks[this.nodeName.toLowerCase()],e&&"set"in e&&void 0!==e.set(this,r,"value")||(this.value=r))})):r?(e=ft.valHooks[r.type]||ft.valHooks[r.nodeName.toLowerCase()],e&&"get"in e&&void 0!==(i=e.get(r,"value"))?i:(i=r.value,"string"==typeof i?i.replace(Te,""):null==i?"":i)):void 0}}),ft.extend({valHooks:{option:{get:function(t){var e=ft.find.attr(t,"value");return null!=e?e:ft.trim(ft.text(t)).replace(xe," ")}},select:{get:function(t){for(var e,i,n=t.options,r=t.selectedIndex,s="select-one"===t.type,o=s?null:[],a=s?r+1:n.length,l=r<0?a:s?r:0;l<a;l++)if(i=n[l],(i.selected||l===r)&&!i.disabled&&(!i.parentNode.disabled||!ft.nodeName(i.parentNode,"optgroup"))){if(e=ft(i).val(),s)return e;o.push(e)}return o},set:function(t,e){for(var i,n,r=t.options,s=ft.makeArray(e),o=r.length;o--;)n=r[o],(n.selected=ft.inArray(ft.valHooks.option.get(n),s)>-1)&&(i=!0);return i||(t.selectedIndex=-1),s}}}}),ft.each(["radio","checkbox"],function(){ft.valHooks[this]={set:function(t,e){if(ft.isArray(e))return t.checked=ft.inArray(ft(t).val(),e)>-1}},ht.checkOn||(ft.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})});var we=/^(?:focusinfocus|focusoutblur)$/;ft.extend(ft.event,{trigger:function(e,i,n,r){var s,o,a,l,u,h,c,f=[n||J],p=at.call(e,"type")?e.type:e,d=at.call(e,"namespace")?e.namespace.split("."):[];if(o=a=n=n||J,3!==n.nodeType&&8!==n.nodeType&&!we.test(p+ft.event.triggered)&&(p.indexOf(".")>-1&&(d=p.split("."),p=d.shift(),d.sort()),u=p.indexOf(":")<0&&"on"+p,e=e[ft.expando]?e:new ft.Event(p,"object"==typeof e&&e),e.isTrigger=r?2:3,e.namespace=d.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+d.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=n),i=null==i?[e]:ft.makeArray(i,[e]),c=ft.event.special[p]||{},r||!c.trigger||c.trigger.apply(n,i)!==!1)){if(!r&&!c.noBubble&&!ft.isWindow(n)){for(l=c.delegateType||p,we.test(l+p)||(o=o.parentNode);o;o=o.parentNode)f.push(o),a=o;a===(n.ownerDocument||J)&&f.push(a.defaultView||a.parentWindow||t)}for(s=0;(o=f[s++])&&!e.isPropagationStopped();)e.type=s>1?l:c.bindType||p,h=(Et.get(o,"events")||{})[e.type]&&Et.get(o,"handle"),h&&h.apply(o,i),h=u&&o[u],h&&h.apply&&jt(o)&&(e.result=h.apply(o,i),e.result===!1&&e.preventDefault());return e.type=p,r||e.isDefaultPrevented()||c._default&&c._default.apply(f.pop(),i)!==!1||!jt(n)||u&&ft.isFunction(n[p])&&!ft.isWindow(n)&&(a=n[u],a&&(n[u]=null),ft.event.triggered=p,n[p](),ft.event.triggered=void 0,a&&(n[u]=a)),e.result}},simulate:function(t,e,i){var n=ft.extend(new ft.Event,i,{type:t,isSimulated:!0});ft.event.trigger(n,null,e)}}),ft.fn.extend({trigger:function(t,e){return this.each(function(){ft.event.trigger(t,e,this)})},triggerHandler:function(t,e){var i=this[0];if(i)return ft.event.trigger(t,e,i,!0)}}),ft.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(t,e){ft.fn[e]=function(t,i){return arguments.length>0?this.on(e,null,t,i):this.trigger(e)}}),ft.fn.extend({hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)}}),ht.focusin="onfocusin"in t,ht.focusin||ft.each({focus:"focusin",blur:"focusout"},function(t,e){var i=function(t){ft.event.simulate(e,t.target,ft.event.fix(t))};ft.event.special[e]={setup:function(){var n=this.ownerDocument||this,r=Et.access(n,e);r||n.addEventListener(t,i,!0),Et.access(n,e,(r||0)+1)},teardown:function(){var n=this.ownerDocument||this,r=Et.access(n,e)-1;r?Et.access(n,e,r):(n.removeEventListener(t,i,!0),Et.remove(n,e))}}});var be=t.location,Pe=ft.now(),Ce=/\?/;ft.parseXML=function(e){var i;if(!e||"string"!=typeof e)return null;try{i=(new t.DOMParser).parseFromString(e,"text/xml")}catch(t){i=void 0}return i&&!i.getElementsByTagName("parsererror").length||ft.error("Invalid XML: "+e),i};var ke=/\[\]$/,Se=/\r?\n/g,Ae=/^(?:submit|button|image|reset|file)$/i,Oe=/^(?:input|select|textarea|keygen)/i;ft.param=function(t,e){var i,n=[],r=function(t,e){var i=ft.isFunction(e)?e():e;n[n.length]=encodeURIComponent(t)+"="+encodeURIComponent(null==i?"":i)};if(ft.isArray(t)||t.jquery&&!ft.isPlainObject(t))ft.each(t,function(){r(this.name,this.value)});else for(i in t)U(i,t[i],e,r);return n.join("&")},ft.fn.extend({serialize:function(){return ft.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var t=ft.prop(this,"elements");return t?ft.makeArray(t):this}).filter(function(){var t=this.type;return this.name&&!ft(this).is(":disabled")&&Oe.test(this.nodeName)&&!Ae.test(t)&&(this.checked||!Xt.test(t))}).map(function(t,e){var i=ft(this).val();return null==i?null:ft.isArray(i)?ft.map(i,function(t){return{name:e.name,value:t.replace(Se,"\r\n")}}):{name:e.name,value:i.replace(Se,"\r\n")}}).get()}});var De=/%20/g,Re=/#.*$/,je=/([?&])_=[^&]*/,Ee=/^(.*?):[ \t]*([^\r\n]*)$/gm,Ne=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Le=/^(?:GET|HEAD)$/,Me=/^\/\//,Fe={},qe={},Ie="*/".concat("*"),ze=J.createElement("a");ze.href=be.href,ft.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:be.href,type:"GET",isLocal:Ne.test(be.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Ie,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":ft.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,e){return e?V(V(t,ft.ajaxSettings),e):V(ft.ajaxSettings,t)},ajaxPrefilter:Y(Fe),ajaxTransport:Y(qe),ajax:function(e,i){function n(e,i,n,a){var u,f,p,T,x,w=i;h||(h=!0,l&&t.clearTimeout(l),r=void 0,o=a||"",b.readyState=e>0?4:0,u=e>=200&&e<300||304===e,n&&(T=Q(d,b,n)),T=G(d,T,b,u),u?(d.ifModified&&(x=b.getResponseHeader("Last-Modified"),x&&(ft.lastModified[s]=x),x=b.getResponseHeader("etag"),x&&(ft.etag[s]=x)),204===e||"HEAD"===d.type?w="nocontent":304===e?w="notmodified":(w=T.state,f=T.data,p=T.error,u=!p)):(p=w,!e&&w||(w="error",e<0&&(e=0))),b.status=e,b.statusText=(i||w)+"",u?g.resolveWith(_,[f,w,b]):g.rejectWith(_,[b,w,p]),b.statusCode(y),y=void 0,c&&m.trigger(u?"ajaxSuccess":"ajaxError",[b,d,u?f:p]),v.fireWith(_,[b,w]),c&&(m.trigger("ajaxComplete",[b,d]),--ft.active||ft.event.trigger("ajaxStop")))}"object"==typeof e&&(i=e,e=void 0),i=i||{};var r,s,o,a,l,u,h,c,f,p,d=ft.ajaxSetup({},i),_=d.context||d,m=d.context&&(_.nodeType||_.jquery)?ft(_):ft.event,g=ft.Deferred(),v=ft.Callbacks("once memory"),y=d.statusCode||{},T={},x={},w="canceled",b={readyState:0,getResponseHeader:function(t){var e;if(h){if(!a)for(a={};e=Ee.exec(o);)a[e[1].toLowerCase()]=e[2];e=a[t.toLowerCase()]}return null==e?null:e},getAllResponseHeaders:function(){return h?o:null},setRequestHeader:function(t,e){return null==h&&(t=x[t.toLowerCase()]=x[t.toLowerCase()]||t,T[t]=e),this},overrideMimeType:function(t){return null==h&&(d.mimeType=t),this},statusCode:function(t){var e;if(t)if(h)b.always(t[b.status]);else for(e in t)y[e]=[y[e],t[e]];return this},abort:function(t){var e=t||w;return r&&r.abort(e),n(0,e),this}};if(g.promise(b),d.url=((e||d.url||be.href)+"").replace(Me,be.protocol+"//"),d.type=i.method||i.type||d.method||d.type,d.dataTypes=(d.dataType||"*").toLowerCase().match(At)||[""],null==d.crossDomain){u=J.createElement("a");try{u.href=d.url,u.href=u.href,d.crossDomain=ze.protocol+"//"+ze.host!=u.protocol+"//"+u.host}catch(t){d.crossDomain=!0}}if(d.data&&d.processData&&"string"!=typeof d.data&&(d.data=ft.param(d.data,d.traditional)),$(Fe,d,i,b),h)return b;c=ft.event&&d.global,c&&0===ft.active++&&ft.event.trigger("ajaxStart"),d.type=d.type.toUpperCase(),d.hasContent=!Le.test(d.type),s=d.url.replace(Re,""),d.hasContent?d.data&&d.processData&&0===(d.contentType||"").indexOf("application/x-www-form-urlencoded")&&(d.data=d.data.replace(De,"+")):(p=d.url.slice(s.length),d.data&&(s+=(Ce.test(s)?"&":"?")+d.data,delete d.data),d.cache===!1&&(s=s.replace(je,""),p=(Ce.test(s)?"&":"?")+"_="+Pe++ +p),d.url=s+p),d.ifModified&&(ft.lastModified[s]&&b.setRequestHeader("If-Modified-Since",ft.lastModified[s]),ft.etag[s]&&b.setRequestHeader("If-None-Match",ft.etag[s])),(d.data&&d.hasContent&&d.contentType!==!1||i.contentType)&&b.setRequestHeader("Content-Type",d.contentType),b.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+("*"!==d.dataTypes[0]?", "+Ie+"; q=0.01":""):d.accepts["*"]);for(f in d.headers)b.setRequestHeader(f,d.headers[f]);if(d.beforeSend&&(d.beforeSend.call(_,b,d)===!1||h))return b.abort();if(w="abort",v.add(d.complete),b.done(d.success),b.fail(d.error),r=$(qe,d,i,b)){if(b.readyState=1,c&&m.trigger("ajaxSend",[b,d]),h)return b;d.async&&d.timeout>0&&(l=t.setTimeout(function(){b.abort("timeout")},d.timeout));try{h=!1,r.send(T,n)}catch(t){if(h)throw t;n(-1,t)}}else n(-1,"No Transport");return b},getJSON:function(t,e,i){return ft.get(t,e,i,"json");
},getScript:function(t,e){return ft.get(t,void 0,e,"script")}}),ft.each(["get","post"],function(t,e){ft[e]=function(t,i,n,r){return ft.isFunction(i)&&(r=r||n,n=i,i=void 0),ft.ajax(ft.extend({url:t,type:e,dataType:r,data:i,success:n},ft.isPlainObject(t)&&t))}}),ft._evalUrl=function(t){return ft.ajax({url:t,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,throws:!0})},ft.fn.extend({wrapAll:function(t){var e;return this[0]&&(ft.isFunction(t)&&(t=t.call(this[0])),e=ft(t,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var t=this;t.firstElementChild;)t=t.firstElementChild;return t}).append(this)),this},wrapInner:function(t){return ft.isFunction(t)?this.each(function(e){ft(this).wrapInner(t.call(this,e))}):this.each(function(){var e=ft(this),i=e.contents();i.length?i.wrapAll(t):e.append(t)})},wrap:function(t){var e=ft.isFunction(t);return this.each(function(i){ft(this).wrapAll(e?t.call(this,i):t)})},unwrap:function(t){return this.parent(t).not("body").each(function(){ft(this).replaceWith(this.childNodes)}),this}}),ft.expr.pseudos.hidden=function(t){return!ft.expr.pseudos.visible(t)},ft.expr.pseudos.visible=function(t){return!!(t.offsetWidth||t.offsetHeight||t.getClientRects().length)},ft.ajaxSettings.xhr=function(){try{return new t.XMLHttpRequest}catch(t){}};var Be={0:200,1223:204},He=ft.ajaxSettings.xhr();ht.cors=!!He&&"withCredentials"in He,ht.ajax=He=!!He,ft.ajaxTransport(function(e){var i,n;if(ht.cors||He&&!e.crossDomain)return{send:function(r,s){var o,a=e.xhr();if(a.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(o in e.xhrFields)a[o]=e.xhrFields[o];e.mimeType&&a.overrideMimeType&&a.overrideMimeType(e.mimeType),e.crossDomain||r["X-Requested-With"]||(r["X-Requested-With"]="XMLHttpRequest");for(o in r)a.setRequestHeader(o,r[o]);i=function(t){return function(){i&&(i=n=a.onload=a.onerror=a.onabort=a.onreadystatechange=null,"abort"===t?a.abort():"error"===t?"number"!=typeof a.status?s(0,"error"):s(a.status,a.statusText):s(Be[a.status]||a.status,a.statusText,"text"!==(a.responseType||"text")||"string"!=typeof a.responseText?{binary:a.response}:{text:a.responseText},a.getAllResponseHeaders()))}},a.onload=i(),n=a.onerror=i("error"),void 0!==a.onabort?a.onabort=n:a.onreadystatechange=function(){4===a.readyState&&t.setTimeout(function(){i&&n()})},i=i("abort");try{a.send(e.hasContent&&e.data||null)}catch(t){if(i)throw t}},abort:function(){i&&i()}}}),ft.ajaxPrefilter(function(t){t.crossDomain&&(t.contents.script=!1)}),ft.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(t){return ft.globalEval(t),t}}}),ft.ajaxPrefilter("script",function(t){void 0===t.cache&&(t.cache=!1),t.crossDomain&&(t.type="GET")}),ft.ajaxTransport("script",function(t){if(t.crossDomain){var e,i;return{send:function(n,r){e=ft("<script>").prop({charset:t.scriptCharset,src:t.url}).on("load error",i=function(t){e.remove(),i=null,t&&r("error"===t.type?404:200,t.type)}),J.head.appendChild(e[0])},abort:function(){i&&i()}}}});var Xe=[],We=/(=)\?(?=&|$)|\?\?/;ft.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var t=Xe.pop()||ft.expando+"_"+Pe++;return this[t]=!0,t}}),ft.ajaxPrefilter("json jsonp",function(e,i,n){var r,s,o,a=e.jsonp!==!1&&(We.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&We.test(e.data)&&"data");if(a||"jsonp"===e.dataTypes[0])return r=e.jsonpCallback=ft.isFunction(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,a?e[a]=e[a].replace(We,"$1"+r):e.jsonp!==!1&&(e.url+=(Ce.test(e.url)?"&":"?")+e.jsonp+"="+r),e.converters["script json"]=function(){return o||ft.error(r+" was not called"),o[0]},e.dataTypes[0]="json",s=t[r],t[r]=function(){o=arguments},n.always(function(){void 0===s?ft(t).removeProp(r):t[r]=s,e[r]&&(e.jsonpCallback=i.jsonpCallback,Xe.push(r)),o&&ft.isFunction(s)&&s(o[0]),o=s=void 0}),"script"}),ht.createHTMLDocument=function(){var t=J.implementation.createHTMLDocument("").body;return t.innerHTML="<form></form><form></form>",2===t.childNodes.length}(),ft.parseHTML=function(t,e,i){if("string"!=typeof t)return[];"boolean"==typeof e&&(i=e,e=!1);var n,r,s;return e||(ht.createHTMLDocument?(e=J.implementation.createHTMLDocument(""),n=e.createElement("base"),n.href=J.location.href,e.head.appendChild(n)):e=J),r=xt.exec(t),s=!i&&[],r?[e.createElement(r[1])]:(r=v([t],e,s),s&&s.length&&ft(s).remove(),ft.merge([],r.childNodes))},ft.fn.load=function(t,e,i){var n,r,s,o=this,a=t.indexOf(" ");return a>-1&&(n=ft.trim(t.slice(a)),t=t.slice(0,a)),ft.isFunction(e)?(i=e,e=void 0):e&&"object"==typeof e&&(r="POST"),o.length>0&&ft.ajax({url:t,type:r||"GET",dataType:"html",data:e}).done(function(t){s=arguments,o.html(n?ft("<div>").append(ft.parseHTML(t)).find(n):t)}).always(i&&function(t,e){o.each(function(){i.apply(this,s||[t.responseText,e,t])})}),this},ft.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(t,e){ft.fn[e]=function(t){return this.on(e,t)}}),ft.expr.pseudos.animated=function(t){return ft.grep(ft.timers,function(e){return t===e.elem}).length},ft.offset={setOffset:function(t,e,i){var n,r,s,o,a,l,u,h=ft.css(t,"position"),c=ft(t),f={};"static"===h&&(t.style.position="relative"),a=c.offset(),s=ft.css(t,"top"),l=ft.css(t,"left"),u=("absolute"===h||"fixed"===h)&&(s+l).indexOf("auto")>-1,u?(n=c.position(),o=n.top,r=n.left):(o=parseFloat(s)||0,r=parseFloat(l)||0),ft.isFunction(e)&&(e=e.call(t,i,ft.extend({},a))),null!=e.top&&(f.top=e.top-a.top+o),null!=e.left&&(f.left=e.left-a.left+r),"using"in e?e.using.call(t,f):c.css(f)}},ft.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){ft.offset.setOffset(this,t,e)});var e,i,n,r,s=this[0];return s?s.getClientRects().length?(n=s.getBoundingClientRect(),n.width||n.height?(r=s.ownerDocument,i=K(r),e=r.documentElement,{top:n.top+i.pageYOffset-e.clientTop,left:n.left+i.pageXOffset-e.clientLeft}):n):{top:0,left:0}:void 0},position:function(){if(this[0]){var t,e,i=this[0],n={top:0,left:0};return"fixed"===ft.css(i,"position")?e=i.getBoundingClientRect():(t=this.offsetParent(),e=this.offset(),ft.nodeName(t[0],"html")||(n=t.offset()),n={top:n.top+ft.css(t[0],"borderTopWidth",!0),left:n.left+ft.css(t[0],"borderLeftWidth",!0)}),{top:e.top-n.top-ft.css(i,"marginTop",!0),left:e.left-n.left-ft.css(i,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var t=this.offsetParent;t&&"static"===ft.css(t,"position");)t=t.offsetParent;return t||Vt})}}),ft.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,e){var i="pageYOffset"===e;ft.fn[t]=function(n){return Rt(this,function(t,n,r){var s=K(t);return void 0===r?s?s[e]:t[n]:void(s?s.scrollTo(i?s.pageXOffset:r,i?r:s.pageYOffset):t[n]=r)},t,n,arguments.length)}}),ft.each(["top","left"],function(t,e){ft.cssHooks[e]=R(ht.pixelPosition,function(t,i){if(i)return i=D(t,e),re.test(i)?ft(t).position()[e]+"px":i})}),ft.each({Height:"height",Width:"width"},function(t,e){ft.each({padding:"inner"+t,content:e,"":"outer"+t},function(i,n){ft.fn[n]=function(r,s){var o=arguments.length&&(i||"boolean"!=typeof r),a=i||(r===!0||s===!0?"margin":"border");return Rt(this,function(e,i,r){var s;return ft.isWindow(e)?0===n.indexOf("outer")?e["inner"+t]:e.document.documentElement["client"+t]:9===e.nodeType?(s=e.documentElement,Math.max(e.body["scroll"+t],s["scroll"+t],e.body["offset"+t],s["offset"+t],s["client"+t])):void 0===r?ft.css(e,i,a):ft.style(e,i,r,a)},e,o?r:void 0,o)}})}),ft.fn.extend({bind:function(t,e,i){return this.on(t,null,e,i)},unbind:function(t,e){return this.off(t,null,e)},delegate:function(t,e,i,n){return this.on(e,t,i,n)},undelegate:function(t,e,i){return 1===arguments.length?this.off(t,"**"):this.off(e,t||"**",i)}}),ft.parseJSON=JSON.parse,"function"==typeof define&&define.amd&&define("jquery",[],function(){return ft});var Ue=t.jQuery,Ye=t.$;return ft.noConflict=function(e){return t.$===ft&&(t.$=Ye),e&&t.jQuery===ft&&(t.jQuery=Ue),ft},e||(t.jQuery=t.$=ft),ft})},{}],15:[function(t,e,i){"use strict";var n=t("./libs/barba.min.js"),r=t("./libs/jquery/dist/jquery.min.js");r(function(){var e=t("./pageTransition.js"),i=t("./animHeader.js"),s=t("./animTop.js"),o=t("./animSkillsScroll.js"),a=t("./portfolioItemsAnimation.js"),l=t("./animSkillsHover.js"),u=t("./animYearABout.js"),h=t("./animTextABout.js"),c=(r(window).width(),r(window).height()),f=r(document).scrollTop(),p=r("body"),d=r("html"),_=r("#header"),m=r("#skillsHome"),g=m.length?m.offset().top-100:0;if(d.removeClass("no-js").addClass("js"),"CSS"in window&&"supports"in window.CSS){var v=window.CSS.supports("mix-blend-mode","soft-light");v=v?"mix-blend-mode":"no-mix-blend-mode",r("html").addClass(v)}i(f,p,_,m);var y=o(f,p,_,m);m.data("top",g);var T,x,w=s(f,p,_,m),b=r(".dashes >span"),P=new TimelineMax({paused:!0}),C=new TimelineMax({paused:!0}),k=r(".wrapper-waves"),S=r(".waves"),A=new TimelineMax({paused:!0}),O=new TimelineMax({paused:!0}),D=r(".wrapper-zigzags"),R=r(".zigzags"),j=new TimelineMax({paused:!0}),E=new TimelineMax({paused:!0}),N=r(".slashes >span"),L=new TimelineMax({paused:!0}),M=new TimelineMax({paused:!0}),F=r(".dots >span"),q=new TimelineMax({paused:!0}),I=new TimelineMax({paused:!0}),z=0;b.length&&(P.staggerTo(b,.35,{opacity:1,y:0,ease:Back.easeOut.config(5)},.06),P.play(),z=-36,x=b.closest(".symbol").find(".hoverAnimation"),C.to(x,.2,{scaleX:1.5,ease:Quad.easeIn}),C.to(x,.3,{scaleX:1,x:z,ease:Quad.easeOut})),k.length&&(A.to(k,2,{width:"130%"}),A.to(S,.8,{scaleY:1,ease:Back.easeOut.config(5)},0),A.play(),z=-17,x=k.closest(".symbol").find(".hoverAnimation"),O.to(x,.2,{scaleX:1.5,ease:Quad.easeIn}),O.to(x,.3,{scaleX:1,x:z,ease:Quad.easeOut})),D.length&&(j.to(D,2,{width:"130%"}),j.to(R,.8,{scaleY:1,ease:Back.easeOut.config(5)},0),j.play(),z=-19,x=D.closest(".symbol").find(".hoverAnimation"),E.to(x,.2,{scaleX:1.5,ease:Quad.easeIn}),E.to(x,.3,{scaleX:1,x:z,ease:Quad.easeOut})),N.length&&(L.staggerTo(N,.35,{opacity:1,scaleY:1,ease:Back.easeOut.config(5)},.06),L.play(),z=-33,x=N.closest(".symbol").find(".hoverAnimation"),M.to(x,.2,{scaleX:1.5,ease:Quad.easeIn}),M.to(x,.3,{scaleX:1,x:z,ease:Quad.easeOut})),F.length&&(q.staggerTo(F,.35,{opacity:1,y:0,ease:Back.easeOut.config(5)},.06),q.play(),z=-35,x=F.closest(".symbol").find(".hoverAnimation"),I.to(x,.2,{scaleX:1.5,ease:Quad.easeIn}),I.to(x,.3,{scaleX:1,x:z,ease:Quad.easeOut})),r(".skill").on("mouseenter",function(){T=r(this).data("skill"),"strategy"==T?C.progress(0).tweenTo(C.duration()):"identity"==T?O.progress(0).tweenTo(O.duration()):"design"==T?E.progress(0).tweenTo(E.duration()):"animation"==T?M.progress(0).tweenTo(M.duration()):"dev"==T&&I.progress(0).tweenTo(I.duration())}).on("mouseleave",function(){x=r(this).find(".hoverAnimation"),TweenMax.to(x,.3,{scaleX:1,x:0})});var B=n.BaseView.extend({namespace:"home",onEnter:function(){m=r("#skillsHome"),g=m.offset().top-100,m.data("top",g)},onEnterCompleted:function(){var t=r("#portfolio").find(".portfolio-item");w||(w=s(f,p,_,m)),y||(y=o(f,p,_,m)),a(f,c,t),l(p)},onLeave:function(){},onLeaveCompleted:function(){}});B.init();var H=n.BaseView.extend({namespace:"about",onEnter:function(){},onEnterCompleted:function(){u(f),h()},onLeave:function(){},onLeaveCompleted:function(){}});H.init();n.Pjax.start(),n.Dispatcher.on("linkClicked",function(t){n.Pjax.getTransition=function(){return e(t)}}),r(window).on("resize",function(){m.length&&!m.hasClass("fixed")&&(g=m.offset().top-100,m.data("top",g))}).on("load",function(){})})},{"./animHeader.js":1,"./animSkillsHover.js":2,"./animSkillsScroll.js":3,"./animTextABout.js":4,"./animTop.js":5,"./animYearABout.js":6,"./libs/barba.min.js":10,"./libs/jquery/dist/jquery.min.js":14,"./pageTransition.js":16,"./portfolioItemsAnimation.js":17}],16:[function(t,e,i){var n=t("./libs/barba.min.js"),r=t("./libs/jquery/dist/jquery.min.js"),s=t("./libs/gsap/src/uncompressed/TweenMax.js"),o=t("./libs/gsap/src/uncompressed/TimelineMax.js");e.exports=function(t){return n.BaseTransition.extend({start:function(){Promise.all([this.newContainerLoading,this.fadeOut()]).then(this.fadeIn.bind(this))},fadeOut:function(){var e;return new Promise(function(i,n){e=new o({onComplete:function(){i(!0)}}),r(t).find("h2").prepend('<span class="bg-transition"></span>');var a=r(t).find("h2").offset().left,l=r(window).width()-a-r(t).find("h2").outerWidth();e.to(r(".portfolio-item .bg-img"),0,{opacity:0,ease:Power4.easeOut}),e.set(r(t).find(".bg"),{className:"+=transi"}),e.set(r(t).find(".bg-transition"),{left:-a+"px",right:-l+"px",scaleX:0,scaleY:1});var u=new s.to(r(t).find(".bg-transition"),.4,{scaleX:1,scaleY:1.05,ease:Power4.easeOut}),h=new s.to(r(t).find(".logo"),.2,{y:40,opacity:0,ease:Linear.easeNone}),c=new s.to([r(t).find("time"),r(t).find(".title")],.4,{x:60,opacity:0,ease:Circ.easeOut}),f=new s.to(r(t).find(".border-left"),.4,{scaleY:0,ease:Circ.easeOut}),p=new s.to(r(t).find(".border-middle"),.4,{scaleX:0,ease:Circ.easeOut});e.add([u,h,c,f,p])})},fadeIn:function(){var t,e=this,i=r(this.newContainer);tpsTransitionFadeIn=.3,t=new o({onComplete:function(){e.done()}}),t.set(r("body"),{className:"-="+r(this.oldContainer).data("class")}),t.set(r("body"),{className:"+="+i.data("class")}),t.set(i,{visibility:"visible",opacity:0,onComplete:function(){r(document).scrollTop(0)}}),t.set(i,{opacity:1});var n=new s.to(r(".bgPortfolio"),.5,{scaleY:1,ease:Power4.easeOut}),a=new s.to(r(".bgPagePortfolio"),.5,{scaleY:1,ease:Power4.easeOut}),l=new s.to(r(".portfolio-text h1"),.5,{y:0,opacity:1,ease:Circ.easeOut}),u=new s.to([r(".portfolio-cover")],.5,{x:0,opacity:1,ease:Power4.easeOut,delay:.3});t.add([n,a,l,u]),t.set(r("#header"),{className:"+= bgVisible"});var h=new s.to([r(".portfolio-text p")],.3,{y:0,opacity:1,ease:Power4.easeOut});t.add([h]),t.staggerTo([r(".portfolio-role p"),r(".portfolio-role a")],.5,{y:0,opacity:1,ease:Circ.easeOut},.1),r(this.oldContainer).hide()}})}},{"./libs/barba.min.js":10,"./libs/gsap/src/uncompressed/TimelineMax.js":11,"./libs/gsap/src/uncompressed/TweenMax.js":13,"./libs/jquery/dist/jquery.min.js":14}],17:[function(t,e,i){var n=t("./libs/jquery/dist/jquery.min.js"),r=t("./libs/gsap/src/uncompressed/TweenMax.js"),s=t("./sinusoid.js"),o=t("./getPosWithoutTranslate.js");e.exports=function(t,e,i){var a,l,u,h,c,f=200,p=.6,d=t;!function _(){t=n(document).scrollTop(),t!==d&&(e=n(window).height(),windowWidth=n(window).width(),i.each(function(i){if(l=o(n(this)),u=n(this).find("h2"),thisDesc=n(this).find(".wrapper-desc"),l>=t+e-f)a=(l-t-e+f)*p|0,r.to(thisDesc,1,{opacity:0});else if(l<=t+f)a=(l-t-f)*p|0,r.to(thisDesc,1,{opacity:0});else{a=0;r.to(thisDesc,1,{opacity:1})}h=n(this).position().top+t,c=windowWidth>780?s(150,0,h,50):0,r.to(u,.1,{y:a,x:c})})),d=t,requestAnimFrame(_)}();new TimelineMax;n(".portfolio-item").on("mouseenter",function(){r.set(n(this).find(".wrapper-bloc"),{css:{rotation:"0.01deg",z:.01,force3D:!0}}),r.to([n(this).find(".bg"),n(this).find(".wrapper-bg-img")],.5,{css:{scale:1.05,rotation:"0.01deg",z:.01,force3D:!0},ease:Quad.easeInOut}),r.to(n(this).find(".bg-img"),.5,{css:{opacity:.3,scale:1,rotation:"0.01deg",z:.01,force3D:!0},ease:Quad.easeInOut})}).on("mouseleave",function(){r.set(n(this).find(".wrapper-bloc"),{css:{clearProps:"rotation",force3D:!0}}),r.to([n(this).find(".bg"),n(this).find(".wrapper-bg-img")],.5,{css:{scale:1,rotation:"0.01deg",z:.01,force3D:!0},ease:Quad.easeInOut}),r.to(n(this).find(".bg-img"),.5,{css:{opacity:.15,scale:1.05,rotation:"0.01deg",z:.01,force3D:!0},ease:Quad.easeInOut})})}},{"./getPosWithoutTranslate.js":8,"./libs/gsap/src/uncompressed/TweenMax.js":13,"./libs/jquery/dist/jquery.min.js":14,"./sinusoid.js":19}],18:[function(t,e,i){e.exports=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(t){window.setTimeout(t,1e3/60)}}()},{}],19:[function(t,e,i){t("./libs/jquery/dist/jquery.min.js");e.exports=function(t,e,i,n){var r=e+n*Math.sin(i/t);return r}},{"./libs/jquery/dist/jquery.min.js":14}],20:[function(t,e,i){e.exports=function(t){var e=t.split(",").map(function(t){return t});return e}},{}]},{},[15]);
//# sourceMappingURL=data:application/json;base64,
=======
!function t(e,i,n){function r(o,a){if(!i[o]){if(!e[o]){var l="function"==typeof require&&require;if(!a&&l)return l(o,!0);if(s)return s(o,!0);var u=new Error("Cannot find module '"+o+"'");throw u.code="MODULE_NOT_FOUND",u}var h=i[o]={exports:{}};e[o][0].call(h.exports,function(t){var i=e[o][1][t];return r(i?i:t)},h,h.exports,t,e,i,n)}return i[o].exports}for(var s="function"==typeof require&&require,o=0;o<n.length;o++)r(n[o]);return r}({1:[function(t,e,i){var n=t("./libs/jquery/dist/jquery.min.js"),r=t("./isMobile.min.js");window.requestAnimFrame=t("./requestAnimFrame.js");var s=t("./detectScrollDir.js");e.exports=function(t,e,i,o){function a(){t=n(document).scrollTop(),t!==l&&(u=s(t,l),o=n("#skillsHome"),i.hasClass("scrolled")&&t>o.data("top")+200&&o.is(":visible")||!e.hasClass("home")?u>0?i.removeClass("off"):u<0&&i.addClass("off"):i.removeClass("off")),l=t,requestAnimFrame(a)}var l=t,u=0;r.any||a()}},{"./detectScrollDir.js":7,"./isMobile.min.js":9,"./libs/jquery/dist/jquery.min.js":15,"./requestAnimFrame.js":19}],2:[function(t,e,i){var n=t("./libs/jquery/dist/jquery.min.js"),r=t("./isMobile.min.js");window.requestAnimFrame=t("./requestAnimFrame.js");var s=t("./detectScrollDir.js");e.exports=function(t,e,i,o){function a(){t=n(document).scrollTop(),t!==l&&(u=s(t,l),o=n("#skillsHome"),i.hasClass("scrolled")&&t>o.data("top")&&o.is(":visible")?(o.addClass("fixed").removeClass("top"),u<0&&i.hasClass("off")&&o.addClass("top").addClass("down")):o.removeClass("fixed").removeClass("top").removeClass("down")),l=t,requestAnimFrame(a)}var l=t,u=0,h=!!e.hasClass("home");return h&&!r.any&&(a(),o.on("mouseenter",function(){n(this).hasClass("top")&&(i.removeClass("off"),n(this).removeClass("top").addClass("down"))}).on("mouseleave",function(){!n(this).hasClass("top")&&i.hasClass("scrolled")&&(i.addClass("off"),n(this).addClass("top").removeClass("down"))}),i.on("mouseenter",function(){n(this).removeClass("off"),o.removeClass("top").addClass("down")})),h}},{"./detectScrollDir.js":7,"./isMobile.min.js":9,"./libs/jquery/dist/jquery.min.js":15,"./requestAnimFrame.js":19}],3:[function(t,e,i){var n=t("./libs/jquery/dist/jquery.min.js"),r=t("./stringToArray.js");e.exports=function(t){var e,i,s=n(".portfolio-item"),o=n(".skill");t.on("mouseenter",".skill",function(){e=n(this).data("skill"),s.each(function(){i=r(n(this).data("skill")),i.indexOf(e)<0&&n(this).addClass("off")})}).on("mouseleave",".skill",function(){s.removeClass("off")}),t.on("mouseenter",".portfolio-item",function(){i=r(n(this).data("skill")),o.each(function(){e=n(this).data("skill"),i.indexOf(e)<0&&n(this).addClass("off")})}).on("mouseleave",".portfolio-item",function(){o.removeClass("off")})}},{"./libs/jquery/dist/jquery.min.js":15,"./stringToArray.js":21}],4:[function(t,e,i){var n=t("./libs/jquery/dist/jquery.min.js"),r=t("./stringToArray.js");e.exports=function(){var t,e=n("#writting"),i=r(e.data("text")),s=0,o=0;!function n(){t=i[o].slice(0,s++),e.html(t),t===i[o]?(o===i.length-1?o=0:o++,s=0,setTimeout(n,2e3)):setTimeout(n,70)}()}},{"./libs/jquery/dist/jquery.min.js":15,"./stringToArray.js":21}],5:[function(t,e,i){var n=t("./libs/jquery/dist/jquery.min.js");t("./libs/gsap/src/uncompressed/TweenMax.js"),t("./isMobile.min.js");window.requestAnimFrame=t("./requestAnimFrame.js"),e.exports=function(t,e,i,r){function s(){o=n("#video"),t=n(document).scrollTop(),e.hasClass("home")&&(t>50?(o.addClass("off"),i.addClass("scrolled"),o.find("video").get(0).pause()):(o.removeClass("off"),o.find("video").get(0).play(),i.removeClass("scrolled"))),requestAnimFrame(s)}var o,a=!!e.hasClass("home");return a&&s(),a}},{"./isMobile.min.js":9,"./libs/gsap/src/uncompressed/TweenMax.js":13,"./libs/jquery/dist/jquery.min.js":15,"./requestAnimFrame.js":19}],6:[function(t,e,i){var n=t("./libs/jquery/dist/jquery.min.js"),r=t("./libs/gsap/src/uncompressed/TweenMax.js");t("./libs/gsap/src/uncompressed/plugins/DrawSvgPlugin.js");e.exports=function(t){function e(t,e,i){setTimeout(function(){t.html(e+i)},200*i)}var i,s,o,a,l,u,h,c,f,p=n("#year"),d=n("[data-year]"),_="",m="",g=n("#yearSvg");d.each(function(t){0===t?(s=n(this).offset().top-55|0,m="top:"+s+"px"):1===t&&(m+=";opacity:0"),l=t>0?d.eq(t-1).data("year"):n(this).data("year"),_+='<div class="year" data-top="'+(n(this).offset().top-55|0)+'" style="'+m+'" data-year="'+n(this).data("year")+'">'+l+"</div>"}),p.append(_),i=p.find(".year"),g.css("top",s+"px"),r.to(g.find("path"),1,{drawSvg:0}),n(document).on("scroll",function(){t=n(this).scrollTop(),i.each(function(){if(o=n(this),a=o.data("top"),u=isNaN(parseInt(o.html()))?o.html():parseInt(o.html()),f=o.data("year"),o.hasClass("fixed"))t+s-1<a&&o.css("top",s+"px").removeClass("fixed").html(f).data("year",u);else if(o.offset().top-1>=a)if(o.css("top",a+"px").addClass("fixed"),"now"===f)o.html(f).data("year",u);else for(h=f-u,c=1,o.data("year",u),c;c<=h;c++)e(o,u,c)})}),n(window).on("resize",function(){i.each(function(t){o=n(this),0===t&&(s=d.eq(t).offset().top-55|0),o.data("top",d.eq(t).offset().top-55|0).css({top:s,opacity:0}).removeClass("fixed")}),g.css("top",s+"px")})}},{"./libs/gsap/src/uncompressed/TweenMax.js":13,"./libs/gsap/src/uncompressed/plugins/DrawSvgPlugin.js":14,"./libs/jquery/dist/jquery.min.js":15}],7:[function(t,e,i){e.exports=function(t,e,i){return i=t>e?-1:t<e?1:0}},{}],8:[function(t,e,i){t("./libs/jquery/dist/jquery.min.js");e.exports=function(t){var e=t.offset().top;return t.css("transform").indexOf("(")>0&&(e+=-parseInt(t.css("transform").split(/[()]/)[1].split(",")[5])),Math.round(e)}},{"./libs/jquery/dist/jquery.min.js":15}],9:[function(t,e,i){!function(t){var i=/iPhone/i,n=/iPod/i,r=/iPad/i,s=/(?=.*\bAndroid\b)(?=.*\bMobile\b)/i,o=/Android/i,a=/(?=.*\bAndroid\b)(?=.*\bSD4930UR\b)/i,l=/(?=.*\bAndroid\b)(?=.*\b(?:KFOT|KFTT|KFJWI|KFJWA|KFSOWI|KFTHWI|KFTHWA|KFAPWI|KFAPWA|KFARWI|KFASWI|KFSAWI|KFSAWA)\b)/i,u=/IEMobile/i,h=/(?=.*\bWindows\b)(?=.*\bARM\b)/i,c=/BlackBerry/i,f=/BB10/i,p=/Opera Mini/i,d=/(CriOS|Chrome)(?=.*\bMobile\b)/i,_=/(?=.*\bFirefox\b)(?=.*\bMobile\b)/i,m=new RegExp("(?:Nexus 7|BNTV250|Kindle Fire|Silk|GT-P1000)","i"),g=function(t,e){return t.test(e)},v=function(t){var e=t||navigator.userAgent,v=e.split("[FBAN");return"undefined"!=typeof v[1]&&(e=v[0]),v=e.split("Twitter"),"undefined"!=typeof v[1]&&(e=v[0]),this.apple={phone:g(i,e),ipod:g(n,e),tablet:!g(i,e)&&g(r,e),device:g(i,e)||g(n,e)||g(r,e)},this.amazon={phone:g(a,e),tablet:!g(a,e)&&g(l,e),device:g(a,e)||g(l,e)},this.android={phone:g(a,e)||g(s,e),tablet:!g(a,e)&&!g(s,e)&&(g(l,e)||g(o,e)),device:g(a,e)||g(l,e)||g(s,e)||g(o,e)},this.windows={phone:g(u,e),tablet:g(h,e),device:g(u,e)||g(h,e)},this.other={blackberry:g(c,e),blackberry10:g(f,e),opera:g(p,e),firefox:g(_,e),chrome:g(d,e),device:g(c,e)||g(f,e)||g(p,e)||g(_,e)||g(d,e)},this.seven_inch=g(m,e),this.any=this.apple.device||this.android.device||this.windows.device||this.other.device||this.seven_inch,this.phone=this.apple.phone||this.android.phone||this.windows.phone,this.tablet=this.apple.tablet||this.android.tablet||this.windows.tablet,"undefined"==typeof window?this:void 0},y=function(){var t=new v;return t.Class=v,t};"undefined"!=typeof e&&e.exports&&"undefined"==typeof window?e.exports=v:"undefined"!=typeof e&&e.exports&&"undefined"!=typeof window?e.exports=y():"function"==typeof define&&define.amd?define("isMobile",[],t.isMobile=y()):t.isMobile=y()}(this)},{}],10:[function(t,e,i){!function(t,n){"object"==typeof i&&"object"==typeof e?e.exports=n():"function"==typeof define&&define.amd?define("Barba",[],n):"object"==typeof i?i.Barba=n():t.Barba=n()}(this,function(){return function(t){function e(n){if(i[n])return i[n].exports;var r=i[n]={exports:{},id:n,loaded:!1};return t[n].call(r.exports,r,r.exports,e),r.loaded=!0,r.exports}var i={};return e.m=t,e.c=i,e.p="http://localhost:8080/dist",e(0)}([function(t,e,i){"function"!=typeof Promise&&(window.Promise=i(1));var n={version:"0.0.10",BaseTransition:i(4),BaseView:i(6),BaseCache:i(8),Dispatcher:i(7),HistoryManager:i(9),Pjax:i(10),Prefetch:i(13),Utils:i(5)};t.exports=n},function(t,e,i){(function(e){!function(i){function n(){}function r(t,e){return function(){t.apply(e,arguments)}}function s(t){if("object"!=typeof this)throw new TypeError("Promises must be constructed via new");if("function"!=typeof t)throw new TypeError("not a function");this._state=0,this._handled=!1,this._value=void 0,this._deferreds=[],c(t,this)}function o(t,e){for(;3===t._state;)t=t._value;return 0===t._state?void t._deferreds.push(e):(t._handled=!0,void p(function(){var i=1===t._state?e.onFulfilled:e.onRejected;if(null===i)return void(1===t._state?a:l)(e.promise,t._value);var n;try{n=i(t._value)}catch(t){return void l(e.promise,t)}a(e.promise,n)}))}function a(t,e){try{if(e===t)throw new TypeError("A promise cannot be resolved with itself.");if(e&&("object"==typeof e||"function"==typeof e)){var i=e.then;if(e instanceof s)return t._state=3,t._value=e,void u(t);if("function"==typeof i)return void c(r(i,e),t)}t._state=1,t._value=e,u(t)}catch(e){l(t,e)}}function l(t,e){t._state=2,t._value=e,u(t)}function u(t){2===t._state&&0===t._deferreds.length&&p(function(){t._handled||d(t._value)});for(var e=0,i=t._deferreds.length;i>e;e++)o(t,t._deferreds[e]);t._deferreds=null}function h(t,e,i){this.onFulfilled="function"==typeof t?t:null,this.onRejected="function"==typeof e?e:null,this.promise=i}function c(t,e){var i=!1;try{t(function(t){i||(i=!0,a(e,t))},function(t){i||(i=!0,l(e,t))})}catch(t){if(i)return;i=!0,l(e,t)}}var f=setTimeout,p="function"==typeof e&&e||function(t){f(t,0)},d=function(t){"undefined"!=typeof console&&console&&console.warn("Possible Unhandled Promise Rejection:",t)};s.prototype.catch=function(t){return this.then(null,t)},s.prototype.then=function(t,e){var i=new this.constructor(n);return o(this,new h(t,e,i)),i},s.all=function(t){var e=Array.prototype.slice.call(t);return new s(function(t,i){function n(s,o){try{if(o&&("object"==typeof o||"function"==typeof o)){var a=o.then;if("function"==typeof a)return void a.call(o,function(t){n(s,t)},i)}e[s]=o,0===--r&&t(e)}catch(t){i(t)}}if(0===e.length)return t([]);for(var r=e.length,s=0;s<e.length;s++)n(s,e[s])})},s.resolve=function(t){return t&&"object"==typeof t&&t.constructor===s?t:new s(function(e){e(t)})},s.reject=function(t){return new s(function(e,i){i(t)})},s.race=function(t){return new s(function(e,i){for(var n=0,r=t.length;r>n;n++)t[n].then(e,i)})},s._setImmediateFn=function(t){p=t},s._setUnhandledRejectionFn=function(t){d=t},"undefined"!=typeof t&&t.exports?t.exports=s:i.Promise||(i.Promise=s)}(this)}).call(e,i(2).setImmediate)},function(t,e,i){(function(t,n){function r(t,e){this._id=t,this._clearFn=e}var s=i(3).nextTick,o=Function.prototype.apply,a=Array.prototype.slice,l={},u=0;e.setTimeout=function(){return new r(o.call(setTimeout,window,arguments),clearTimeout)},e.setInterval=function(){return new r(o.call(setInterval,window,arguments),clearInterval)},e.clearTimeout=e.clearInterval=function(t){t.close()},r.prototype.unref=r.prototype.ref=function(){},r.prototype.close=function(){this._clearFn.call(window,this._id)},e.enroll=function(t,e){clearTimeout(t._idleTimeoutId),t._idleTimeout=e},e.unenroll=function(t){clearTimeout(t._idleTimeoutId),t._idleTimeout=-1},e._unrefActive=e.active=function(t){clearTimeout(t._idleTimeoutId);var e=t._idleTimeout;e>=0&&(t._idleTimeoutId=setTimeout(function(){t._onTimeout&&t._onTimeout()},e))},e.setImmediate="function"==typeof t?t:function(t){var i=u++,n=!(arguments.length<2)&&a.call(arguments,1);return l[i]=!0,s(function(){l[i]&&(n?t.apply(null,n):t.call(null),e.clearImmediate(i))}),i},e.clearImmediate="function"==typeof n?n:function(t){delete l[t]}}).call(e,i(2).setImmediate,i(2).clearImmediate)},function(t,e){function i(){u&&o&&(u=!1,o.length?l=o.concat(l):h=-1,l.length&&n())}function n(){if(!u){var t=setTimeout(i);u=!0;for(var e=l.length;e;){for(o=l,l=[];++h<e;)o&&o[h].run();h=-1,e=l.length}o=null,u=!1,clearTimeout(t)}}function r(t,e){this.fun=t,this.array=e}function s(){}var o,a=t.exports={},l=[],u=!1,h=-1;a.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var i=1;i<arguments.length;i++)e[i-1]=arguments[i];l.push(new r(t,e)),1!==l.length||u||setTimeout(n,0)},r.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=s,a.addListener=s,a.once=s,a.off=s,a.removeListener=s,a.removeAllListeners=s,a.emit=s,a.binding=function(t){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(t){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},function(t,e,i){var n=i(5),r={oldContainer:void 0,newContainer:void 0,newContainerLoading:void 0,extend:function(t){return n.extend(this,t)},init:function(t,e){var i=this;return this.oldContainer=t,this._newContainerPromise=e,this.deferred=n.deferred(),this.newContainerReady=n.deferred(),this.newContainerLoading=this.newContainerReady.promise,this.start(),this._newContainerPromise.then(function(t){i.newContainer=t,i.newContainerReady.resolve()}),this.deferred.promise},done:function(){this.oldContainer.parentNode.removeChild(this.oldContainer),this.newContainer.style.visibility="visible",this.deferred.resolve()},start:function(){}};t.exports=r},function(t,e){var i={getCurrentUrl:function(){return window.location.protocol+"//"+window.location.host+window.location.pathname+window.location.search},cleanLink:function(t){return t.replace(/#.*/,"")},xhrTimeout:5e3,xhr:function(t){var e=this.deferred(),i=new XMLHttpRequest;return i.onreadystatechange=function(){return 4===i.readyState?200===i.status?e.resolve(i.responseText):e.reject(new Error("xhr: HTTP code is not 200")):void 0},i.ontimeout=function(){return e.reject(new Error("xhr: Timeout exceeded"))},i.open("GET",t),i.timeout=this.xhrTimeout,i.setRequestHeader("x-barba","yes"),i.send(),e.promise},extend:function(t,e){var i=Object.create(t);for(var n in e)e.hasOwnProperty(n)&&(i[n]=e[n]);return i},deferred:function(){return new function(){this.resolve=null,this.reject=null,this.promise=new Promise(function(t,e){this.resolve=t,this.reject=e}.bind(this))}},getPort:function(t){var e="undefined"!=typeof t?t:window.location.port,i=window.location.protocol;return""!=e?parseInt(e):"http:"===i?80:"https:"===i?443:void 0}};t.exports=i},function(t,e,i){var n=i(7),r=i(5),s={namespace:null,extend:function(t){return r.extend(this,t)},init:function(){var t=this;n.on("initStateChange",function(e,i){i&&i.namespace===t.namespace&&t.onLeave()}),n.on("newPageReady",function(e,i,n){t.container=n,e.namespace===t.namespace&&t.onEnter()}),n.on("transitionCompleted",function(e,i){e.namespace===t.namespace&&t.onEnterCompleted(),i&&i.namespace===t.namespace&&t.onLeaveCompleted()})},onEnter:function(){},onEnterCompleted:function(){},onLeave:function(){},onLeaveCompleted:function(){}};t.exports=s},function(t,e){var i={events:{},on:function(t,e){this.events[t]=this.events[t]||[],this.events[t].push(e)},off:function(t,e){t in this.events!=0&&this.events[t].splice(this.events[t].indexOf(e),1)},trigger:function(t){if(t in this.events!=0)for(var e=0;e<this.events[t].length;e++)this.events[t][e].apply(this,Array.prototype.slice.call(arguments,1))}};t.exports=i},function(t,e,i){var n=i(5),r={data:{},extend:function(t){return n.extend(this,t)},set:function(t,e){this.data[t]=e},get:function(t){return this.data[t]},reset:function(){this.data={}}};t.exports=r},function(t,e){var i={history:[],add:function(t,e){e||(e=void 0),this.history.push({url:t,namespace:e})},currentStatus:function(){return this.history[this.history.length-1]},prevStatus:function(){var t=this.history;return t.length<2?null:t[t.length-2]}};t.exports=i},function(t,e,i){var n=i(5),r=i(7),s=i(11),o=i(8),a=i(9),l=i(12),u={Dom:l,History:a,Cache:o,cacheEnabled:!0,transitionProgress:!1,ignoreClassLink:"no-barba",start:function(){this.init()},init:function(){var t=this.Dom.getContainer(),e=this.Dom.getWrapper();e.setAttribute("aria-live","polite"),this.History.add(this.getCurrentUrl(),this.Dom.getNamespace(t)),r.trigger("initStateChange",this.History.currentStatus()),r.trigger("newPageReady",this.History.currentStatus(),{},t),r.trigger("transitionCompleted",this.History.currentStatus()),this.bindEvents()},bindEvents:function(){document.addEventListener("click",this.onLinkClick.bind(this)),window.addEventListener("popstate",this.onStateChange.bind(this))},getCurrentUrl:function(){return n.cleanLink(n.getCurrentUrl())},goTo:function(t){window.history.pushState(null,null,t),this.onStateChange()},forceGoTo:function(t){window.location=t},load:function(t){var e,i=n.deferred(),r=this;return e=this.Cache.get(t),e||(e=n.xhr(t),this.Cache.set(t,e)),e.then(function(t){var e=r.Dom.parseResponse(t);r.Dom.putContainer(e),r.cacheEnabled||r.Cache.reset(),i.resolve(e)},function(){r.forceGoTo(t),i.reject()}),i.promise},onLinkClick:function(t){for(var e=t.target;e&&!e.href;)e=e.parentNode;this.preventCheck(t,e)&&(t.stopPropagation(),t.preventDefault(),r.trigger("linkClicked",e),this.goTo(e.href))},preventCheck:function(t,e){return!!(window.history.pushState&&e&&e.href)&&(!(t.which>1||t.metaKey||t.ctrlKey||t.shiftKey||t.altKey)&&((!e.target||"_blank"!==e.target)&&(window.location.protocol===e.protocol&&window.location.hostname===e.hostname&&(n.getPort()===n.getPort(e.port)&&(!(e.href.indexOf("#")>-1)&&(n.cleanLink(e.href)!=n.cleanLink(location.href)&&!e.classList.contains(this.ignoreClassLink)))))))},getTransition:function(){return s},onStateChange:function(){var t=this.getCurrentUrl();if(this.transitionProgress&&this.forceGoTo(t),this.History.currentStatus().url===t)return!1;this.History.add(t);var e=this.load(t),i=Object.create(this.getTransition());this.transitionProgress=!0,r.trigger("initStateChange",this.History.currentStatus(),this.History.prevStatus());var n=i.init(this.Dom.getContainer(),e);e.then(this.onNewContainerLoaded.bind(this)),n.then(this.onTransitionEnd.bind(this))},onNewContainerLoaded:function(t){var e=this.History.currentStatus();e.namespace=this.Dom.getNamespace(t),r.trigger("newPageReady",this.History.currentStatus(),this.History.prevStatus(),t)},onTransitionEnd:function(){this.transitionProgress=!1,r.trigger("transitionCompleted",this.History.currentStatus(),this.History.prevStatus())}};t.exports=u},function(t,e,i){var n=i(4),r=n.extend({start:function(){this.newContainerLoading.then(this.finish.bind(this))},finish:function(){document.body.scrollTop=0,this.done()}});t.exports=r},function(t,e){var i={dataNamespace:"namespace",wrapperId:"barba-wrapper",containerClass:"barba-container",parseResponse:function(t){var e=document.createElement("div");e.innerHTML=t;var i=e.querySelector("title");return i&&(document.title=i.textContent),this.getContainer(e)},getWrapper:function(){var t=document.getElementById(this.wrapperId);if(!t)throw new Error("Barba.js: wrapper not found!");return t},getContainer:function(t){if(t||(t=document.body),!t)throw new Error("Barba.js: DOM not ready!");var e=this.parseContainer(t);if(e&&e.jquery&&(e=e[0]),!e)throw new Error("Barba.js: no container found");return e},getNamespace:function(t){return t&&t.dataset?t.dataset[this.dataNamespace]:t?t.getAttribute("data-"+this.dataNamespace):null},putContainer:function(t){t.style.visibility="hidden";var e=this.getWrapper();e.appendChild(t)},parseContainer:function(t){return t.querySelector("."+this.containerClass)}};t.exports=i},function(t,e,i){var n=i(5),r=i(10),s={ignoreClassLink:"no-barba-prefetch",init:function(){return!!window.history.pushState&&(document.body.addEventListener("mouseover",this.onLinkEnter.bind(this)),void document.body.addEventListener("touchstart",this.onLinkEnter.bind(this)))},onLinkEnter:function(t){for(var e=t.target;e&&!e.href;)e=e.parentNode;if(e&&!e.classList.contains(this.ignoreClassLink)){var i=e.href;if(r.preventCheck(t,e)&&!r.Cache.get(i)){var s=n.xhr(i);r.Cache.set(i,s)}}}};t.exports=s}])})},{}],11:[function(t,e,i){(function(i){var n="undefined"!=typeof e&&e.exports&&"undefined"!=typeof i?i:this||window;(n._gsQueue||(n._gsQueue=[])).push(function(){"use strict";n._gsDefine("TimelineMax",["TimelineLite","TweenLite","easing.Ease"],function(t,e,i){var r=function(e){t.call(this,e),this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._cycle=0,this._yoyo=this.vars.yoyo===!0,this._dirty=!0},s=1e-10,o=e._internals,a=o.lazyTweens,l=o.lazyRender,u=n._gsDefine.globals,h=new i(null,null,1,0),c=r.prototype=new t;return c.constructor=r,c.kill()._gc=!1,r.version="1.19.0",c.invalidate=function(){return this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._uncache(!0),t.prototype.invalidate.call(this)},c.addCallback=function(t,i,n,r){return this.add(e.delayedCall(0,t,n,r),i)},c.removeCallback=function(t,e){if(t)if(null==e)this._kill(null,t);else for(var i=this.getTweensOf(t,!1),n=i.length,r=this._parseTimeOrLabel(e);--n>-1;)i[n]._startTime===r&&i[n]._enabled(!1,!1);return this},c.removePause=function(e){return this.removeCallback(t._internals.pauseCallback,e)},c.tweenTo=function(t,i){i=i||{};var n,r,s,o={ease:h,useFrames:this.usesFrames(),immediateRender:!1},a=i.repeat&&u.TweenMax||e;for(r in i)o[r]=i[r];return o.time=this._parseTimeOrLabel(t),n=Math.abs(Number(o.time)-this._time)/this._timeScale||.001,s=new a(this,n,o),o.onStart=function(){s.target.paused(!0),s.vars.time!==s.target.time()&&n===s.duration()&&s.duration(Math.abs(s.vars.time-s.target.time())/s.target._timeScale),i.onStart&&s._callback("onStart")},s},c.tweenFromTo=function(t,e,i){i=i||{},t=this._parseTimeOrLabel(t),i.startAt={onComplete:this.seek,onCompleteParams:[t],callbackScope:this},i.immediateRender=i.immediateRender!==!1;var n=this.tweenTo(e,i);return n.duration(Math.abs(n.vars.time-t)/this._timeScale||.001)},c.render=function(t,e,i){this._gc&&this._enabled(!0,!1);var n,r,o,u,h,c,f,p,d=this._dirty?this.totalDuration():this._totalDuration,_=this._duration,m=this._time,g=this._totalTime,v=this._startTime,y=this._timeScale,T=this._rawPrevTime,x=this._paused,w=this._cycle;if(t>=d-1e-7)this._locked||(this._totalTime=d,this._cycle=this._repeat),this._reversed||this._hasPausedChild()||(r=!0,u="onComplete",h=!!this._timeline.autoRemoveChildren,0===this._duration&&(t<=0&&t>=-1e-7||T<0||T===s)&&T!==t&&this._first&&(h=!0,T>s&&(u="onReverseComplete"))),this._rawPrevTime=this._duration||!e||t||this._rawPrevTime===t?t:s,this._yoyo&&0!==(1&this._cycle)?this._time=t=0:(this._time=_,t=_+1e-4);else if(t<1e-7)if(this._locked||(this._totalTime=this._cycle=0),this._time=0,(0!==m||0===_&&T!==s&&(T>0||t<0&&T>=0)&&!this._locked)&&(u="onReverseComplete",r=this._reversed),t<0)this._active=!1,this._timeline.autoRemoveChildren&&this._reversed?(h=r=!0,u="onReverseComplete"):T>=0&&this._first&&(h=!0),this._rawPrevTime=t;else{if(this._rawPrevTime=_||!e||t||this._rawPrevTime===t?t:s,0===t&&r)for(n=this._first;n&&0===n._startTime;)n._duration||(r=!1),n=n._next;t=0,this._initted||(h=!0)}else if(0===_&&T<0&&(h=!0),this._time=this._rawPrevTime=t,this._locked||(this._totalTime=t,0!==this._repeat&&(c=_+this._repeatDelay,this._cycle=this._totalTime/c>>0,0!==this._cycle&&this._cycle===this._totalTime/c&&g<=t&&this._cycle--,this._time=this._totalTime-this._cycle*c,this._yoyo&&0!==(1&this._cycle)&&(this._time=_-this._time),this._time>_?(this._time=_,t=_+1e-4):this._time<0?this._time=t=0:t=this._time)),this._hasPause&&!this._forcingPlayhead&&!e){if(t=this._time,t>=m)for(n=this._first;n&&n._startTime<=t&&!f;)n._duration||"isPause"!==n.data||n.ratio||0===n._startTime&&0===this._rawPrevTime||(f=n),n=n._next;else for(n=this._last;n&&n._startTime>=t&&!f;)n._duration||"isPause"===n.data&&n._rawPrevTime>0&&(f=n),n=n._prev;f&&(this._time=t=f._startTime,this._totalTime=t+this._cycle*(this._totalDuration+this._repeatDelay))}if(this._cycle!==w&&!this._locked){var b=this._yoyo&&0!==(1&w),P=b===(this._yoyo&&0!==(1&this._cycle)),C=this._totalTime,k=this._cycle,S=this._rawPrevTime,A=this._time;if(this._totalTime=w*_,this._cycle<w?b=!b:this._totalTime+=_,this._time=m,this._rawPrevTime=0===_?T-1e-4:T,this._cycle=w,this._locked=!0,m=b?0:_,this.render(m,e,0===_),e||this._gc||this.vars.onRepeat&&this._callback("onRepeat"),m!==this._time)return;if(P&&(m=b?_+1e-4:-1e-4,this.render(m,!0,!1)),this._locked=!1,this._paused&&!x)return;this._time=A,this._totalTime=C,this._cycle=k,this._rawPrevTime=S}if(!(this._time!==m&&this._first||i||h||f))return void(g!==this._totalTime&&this._onUpdate&&(e||this._callback("onUpdate")));if(this._initted||(this._initted=!0),this._active||!this._paused&&this._totalTime!==g&&t>0&&(this._active=!0),0===g&&this.vars.onStart&&(0===this._totalTime&&this._totalDuration||e||this._callback("onStart")),p=this._time,p>=m)for(n=this._first;n&&(o=n._next,p===this._time&&(!this._paused||x));)(n._active||n._startTime<=this._time&&!n._paused&&!n._gc)&&(f===n&&this.pause(),n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)),n=o;else for(n=this._last;n&&(o=n._prev,p===this._time&&(!this._paused||x));){if(n._active||n._startTime<=m&&!n._paused&&!n._gc){if(f===n){for(f=n._prev;f&&f.endTime()>this._time;)f.render(f._reversed?f.totalDuration()-(t-f._startTime)*f._timeScale:(t-f._startTime)*f._timeScale,e,i),f=f._prev;f=null,this.pause()}n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)}n=o}this._onUpdate&&(e||(a.length&&l(),this._callback("onUpdate"))),u&&(this._locked||this._gc||v!==this._startTime&&y===this._timeScale||(0===this._time||d>=this.totalDuration())&&(r&&(a.length&&l(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[u]&&this._callback(u)))},c.getActive=function(t,e,i){null==t&&(t=!0),null==e&&(e=!0),null==i&&(i=!1);var n,r,s=[],o=this.getChildren(t,e,i),a=0,l=o.length;for(n=0;n<l;n++)r=o[n],r.isActive()&&(s[a++]=r);return s},c.getLabelAfter=function(t){t||0!==t&&(t=this._time);var e,i=this.getLabelsArray(),n=i.length;for(e=0;e<n;e++)if(i[e].time>t)return i[e].name;return null},c.getLabelBefore=function(t){null==t&&(t=this._time);for(var e=this.getLabelsArray(),i=e.length;--i>-1;)if(e[i].time<t)return e[i].name;return null},c.getLabelsArray=function(){var t,e=[],i=0;for(t in this._labels)e[i++]={time:this._labels[t],name:t};return e.sort(function(t,e){return t.time-e.time}),e},c.progress=function(t,e){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!==(1&this._cycle)?1-t:t)+this._cycle*(this._duration+this._repeatDelay),e):this._time/this.duration()},c.totalProgress=function(t,e){return arguments.length?this.totalTime(this.totalDuration()*t,e):this._totalTime/this.totalDuration()},c.totalDuration=function(e){return arguments.length?this._repeat!==-1&&e?this.timeScale(this.totalDuration()/e):this:(this._dirty&&(t.prototype.totalDuration.call(this),this._totalDuration=this._repeat===-1?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat),this._totalDuration)},c.time=function(t,e){return arguments.length?(this._dirty&&this.totalDuration(),t>this._duration&&(t=this._duration),this._yoyo&&0!==(1&this._cycle)?t=this._duration-t+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(t+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(t,e)):this._time},c.repeat=function(t){return arguments.length?(this._repeat=t,this._uncache(!0)):this._repeat},c.repeatDelay=function(t){return arguments.length?(this._repeatDelay=t,this._uncache(!0)):this._repeatDelay},c.yoyo=function(t){return arguments.length?(this._yoyo=t,this):this._yoyo},c.currentLabel=function(t){return arguments.length?this.seek(t,!0):this.getLabelBefore(this._time+1e-8)},r},!0),n._gsDefine("TimelineLite",["core.Animation","core.SimpleTimeline","TweenLite"],function(t,e,i){var r=function(t){e.call(this,t),this._labels={},this.autoRemoveChildren=this.vars.autoRemoveChildren===!0,this.smoothChildTiming=this.vars.smoothChildTiming===!0,this._sortChildren=!0,this._onUpdate=this.vars.onUpdate;var i,n,r=this.vars;for(n in r)i=r[n],u(i)&&i.join("").indexOf("{self}")!==-1&&(r[n]=this._swapSelfInParams(i));u(r.tweens)&&this.add(r.tweens,0,r.align,r.stagger)},s=1e-10,o=i._internals,a=r._internals={},l=o.isSelector,u=o.isArray,h=o.lazyTweens,c=o.lazyRender,f=n._gsDefine.globals,p=function(t){var e,i={};for(e in t)i[e]=t[e];return i},d=function(t,e,i){var n,r,s=t.cycle;for(n in s)r=s[n],t[n]="function"==typeof r?r.call(e[i],i):r[i%r.length];delete t.cycle},_=a.pauseCallback=function(){},m=function(t){var e,i=[],n=t.length;for(e=0;e!==n;i.push(t[e++]));return i},g=r.prototype=new e;return r.version="1.19.0",g.constructor=r,g.kill()._gc=g._forcingPlayhead=g._hasPause=!1,g.to=function(t,e,n,r){var s=n.repeat&&f.TweenMax||i;return e?this.add(new s(t,e,n),r):this.set(t,n,r)},g.from=function(t,e,n,r){return this.add((n.repeat&&f.TweenMax||i).from(t,e,n),r)},g.fromTo=function(t,e,n,r,s){var o=r.repeat&&f.TweenMax||i;return e?this.add(o.fromTo(t,e,n,r),s):this.set(t,r,s)},g.staggerTo=function(t,e,n,s,o,a,u,h){var c,f,_=new r({onComplete:a,onCompleteParams:u,callbackScope:h,smoothChildTiming:this.smoothChildTiming}),g=n.cycle;for("string"==typeof t&&(t=i.selector(t)||t),t=t||[],l(t)&&(t=m(t)),s=s||0,s<0&&(t=m(t),t.reverse(),s*=-1),f=0;f<t.length;f++)c=p(n),c.startAt&&(c.startAt=p(c.startAt),c.startAt.cycle&&d(c.startAt,t,f)),g&&(d(c,t,f),null!=c.duration&&(e=c.duration,delete c.duration)),_.to(t[f],e,c,f*s);return this.add(_,o)},g.staggerFrom=function(t,e,i,n,r,s,o,a){return i.immediateRender=0!=i.immediateRender,i.runBackwards=!0,this.staggerTo(t,e,i,n,r,s,o,a)},g.staggerFromTo=function(t,e,i,n,r,s,o,a,l){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,this.staggerTo(t,e,n,r,s,o,a,l)},g.call=function(t,e,n,r){return this.add(i.delayedCall(0,t,e,n),r)},g.set=function(t,e,n){return n=this._parseTimeOrLabel(n,0,!0),null==e.immediateRender&&(e.immediateRender=n===this._time&&!this._paused),this.add(new i(t,0,e),n)},r.exportRoot=function(t,e){t=t||{},null==t.smoothChildTiming&&(t.smoothChildTiming=!0);var n,s,o=new r(t),a=o._timeline;for(null==e&&(e=!0),a._remove(o,!0),o._startTime=0,o._rawPrevTime=o._time=o._totalTime=a._time,n=a._first;n;)s=n._next,e&&n instanceof i&&n.target===n.vars.onComplete||o.add(n,n._startTime-n._delay),n=s;return a.add(o,0),o},g.add=function(n,s,o,a){var l,h,c,f,p,d;if("number"!=typeof s&&(s=this._parseTimeOrLabel(s,0,!0,n)),!(n instanceof t)){if(n instanceof Array||n&&n.push&&u(n)){for(o=o||"normal",a=a||0,l=s,h=n.length,c=0;c<h;c++)u(f=n[c])&&(f=new r({tweens:f})),this.add(f,l),"string"!=typeof f&&"function"!=typeof f&&("sequence"===o?l=f._startTime+f.totalDuration()/f._timeScale:"start"===o&&(f._startTime-=f.delay())),l+=a;return this._uncache(!0)}if("string"==typeof n)return this.addLabel(n,s);if("function"!=typeof n)throw"Cannot add "+n+" into the timeline; it is not a tween, timeline, function, or string.";n=i.delayedCall(0,n)}if(e.prototype.add.call(this,n,s),(this._gc||this._time===this._duration)&&!this._paused&&this._duration<this.duration())for(p=this,d=p.rawTime()>n._startTime;p._timeline;)d&&p._timeline.smoothChildTiming?p.totalTime(p._totalTime,!0):p._gc&&p._enabled(!0,!1),p=p._timeline;return this},g.remove=function(e){if(e instanceof t){this._remove(e,!1);var i=e._timeline=e.vars.useFrames?t._rootFramesTimeline:t._rootTimeline;return e._startTime=(e._paused?e._pauseTime:i._time)-(e._reversed?e.totalDuration()-e._totalTime:e._totalTime)/e._timeScale,this}if(e instanceof Array||e&&e.push&&u(e)){for(var n=e.length;--n>-1;)this.remove(e[n]);return this}return"string"==typeof e?this.removeLabel(e):this.kill(null,e)},g._remove=function(t,i){e.prototype._remove.call(this,t,i);var n=this._last;return n?this._time>n._startTime+n._totalDuration/n._timeScale&&(this._time=this.duration(),this._totalTime=this._totalDuration):this._time=this._totalTime=this._duration=this._totalDuration=0,
this},g.append=function(t,e){return this.add(t,this._parseTimeOrLabel(null,e,!0,t))},g.insert=g.insertMultiple=function(t,e,i,n){return this.add(t,e||0,i,n)},g.appendMultiple=function(t,e,i,n){return this.add(t,this._parseTimeOrLabel(null,e,!0,t),i,n)},g.addLabel=function(t,e){return this._labels[t]=this._parseTimeOrLabel(e),this},g.addPause=function(t,e,n,r){var s=i.delayedCall(0,_,n,r||this);return s.vars.onComplete=s.vars.onReverseComplete=e,s.data="isPause",this._hasPause=!0,this.add(s,t)},g.removeLabel=function(t){return delete this._labels[t],this},g.getLabelTime=function(t){return null!=this._labels[t]?this._labels[t]:-1},g._parseTimeOrLabel=function(e,i,n,r){var s;if(r instanceof t&&r.timeline===this)this.remove(r);else if(r&&(r instanceof Array||r.push&&u(r)))for(s=r.length;--s>-1;)r[s]instanceof t&&r[s].timeline===this&&this.remove(r[s]);if("string"==typeof i)return this._parseTimeOrLabel(i,n&&"number"==typeof e&&null==this._labels[i]?e-this.duration():0,n);if(i=i||0,"string"!=typeof e||!isNaN(e)&&null==this._labels[e])null==e&&(e=this.duration());else{if(s=e.indexOf("="),s===-1)return null==this._labels[e]?n?this._labels[e]=this.duration()+i:i:this._labels[e]+i;i=parseInt(e.charAt(s-1)+"1",10)*Number(e.substr(s+1)),e=s>1?this._parseTimeOrLabel(e.substr(0,s-1),0,n):this.duration()}return Number(e)+i},g.seek=function(t,e){return this.totalTime("number"==typeof t?t:this._parseTimeOrLabel(t),e!==!1)},g.stop=function(){return this.paused(!0)},g.gotoAndPlay=function(t,e){return this.play(t,e)},g.gotoAndStop=function(t,e){return this.pause(t,e)},g.render=function(t,e,i){this._gc&&this._enabled(!0,!1);var n,r,o,a,l,u,f,p=this._dirty?this.totalDuration():this._totalDuration,d=this._time,_=this._startTime,m=this._timeScale,g=this._paused;if(t>=p-1e-7)this._totalTime=this._time=p,this._reversed||this._hasPausedChild()||(r=!0,a="onComplete",l=!!this._timeline.autoRemoveChildren,0===this._duration&&(t<=0&&t>=-1e-7||this._rawPrevTime<0||this._rawPrevTime===s)&&this._rawPrevTime!==t&&this._first&&(l=!0,this._rawPrevTime>s&&(a="onReverseComplete"))),this._rawPrevTime=this._duration||!e||t||this._rawPrevTime===t?t:s,t=p+1e-4;else if(t<1e-7)if(this._totalTime=this._time=0,(0!==d||0===this._duration&&this._rawPrevTime!==s&&(this._rawPrevTime>0||t<0&&this._rawPrevTime>=0))&&(a="onReverseComplete",r=this._reversed),t<0)this._active=!1,this._timeline.autoRemoveChildren&&this._reversed?(l=r=!0,a="onReverseComplete"):this._rawPrevTime>=0&&this._first&&(l=!0),this._rawPrevTime=t;else{if(this._rawPrevTime=this._duration||!e||t||this._rawPrevTime===t?t:s,0===t&&r)for(n=this._first;n&&0===n._startTime;)n._duration||(r=!1),n=n._next;t=0,this._initted||(l=!0)}else{if(this._hasPause&&!this._forcingPlayhead&&!e){if(t>=d)for(n=this._first;n&&n._startTime<=t&&!u;)n._duration||"isPause"!==n.data||n.ratio||0===n._startTime&&0===this._rawPrevTime||(u=n),n=n._next;else for(n=this._last;n&&n._startTime>=t&&!u;)n._duration||"isPause"===n.data&&n._rawPrevTime>0&&(u=n),n=n._prev;u&&(this._time=t=u._startTime,this._totalTime=t+this._cycle*(this._totalDuration+this._repeatDelay))}this._totalTime=this._time=this._rawPrevTime=t}if(this._time!==d&&this._first||i||l||u){if(this._initted||(this._initted=!0),this._active||!this._paused&&this._time!==d&&t>0&&(this._active=!0),0===d&&this.vars.onStart&&(0===this._time&&this._duration||e||this._callback("onStart")),f=this._time,f>=d)for(n=this._first;n&&(o=n._next,f===this._time&&(!this._paused||g));)(n._active||n._startTime<=f&&!n._paused&&!n._gc)&&(u===n&&this.pause(),n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)),n=o;else for(n=this._last;n&&(o=n._prev,f===this._time&&(!this._paused||g));){if(n._active||n._startTime<=d&&!n._paused&&!n._gc){if(u===n){for(u=n._prev;u&&u.endTime()>this._time;)u.render(u._reversed?u.totalDuration()-(t-u._startTime)*u._timeScale:(t-u._startTime)*u._timeScale,e,i),u=u._prev;u=null,this.pause()}n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)}n=o}this._onUpdate&&(e||(h.length&&c(),this._callback("onUpdate"))),a&&(this._gc||_!==this._startTime&&m===this._timeScale||(0===this._time||p>=this.totalDuration())&&(r&&(h.length&&c(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[a]&&this._callback(a)))}},g._hasPausedChild=function(){for(var t=this._first;t;){if(t._paused||t instanceof r&&t._hasPausedChild())return!0;t=t._next}return!1},g.getChildren=function(t,e,n,r){r=r||-9999999999;for(var s=[],o=this._first,a=0;o;)o._startTime<r||(o instanceof i?e!==!1&&(s[a++]=o):(n!==!1&&(s[a++]=o),t!==!1&&(s=s.concat(o.getChildren(!0,e,n)),a=s.length))),o=o._next;return s},g.getTweensOf=function(t,e){var n,r,s=this._gc,o=[],a=0;for(s&&this._enabled(!0,!0),n=i.getTweensOf(t),r=n.length;--r>-1;)(n[r].timeline===this||e&&this._contains(n[r]))&&(o[a++]=n[r]);return s&&this._enabled(!1,!0),o},g.recent=function(){return this._recent},g._contains=function(t){for(var e=t.timeline;e;){if(e===this)return!0;e=e.timeline}return!1},g.shiftChildren=function(t,e,i){i=i||0;for(var n,r=this._first,s=this._labels;r;)r._startTime>=i&&(r._startTime+=t),r=r._next;if(e)for(n in s)s[n]>=i&&(s[n]+=t);return this._uncache(!0)},g._kill=function(t,e){if(!t&&!e)return this._enabled(!1,!1);for(var i=e?this.getTweensOf(e):this.getChildren(!0,!0,!1),n=i.length,r=!1;--n>-1;)i[n]._kill(t,e)&&(r=!0);return r},g.clear=function(t){var e=this.getChildren(!1,!0,!0),i=e.length;for(this._time=this._totalTime=0;--i>-1;)e[i]._enabled(!1,!1);return t!==!1&&(this._labels={}),this._uncache(!0)},g.invalidate=function(){for(var e=this._first;e;)e.invalidate(),e=e._next;return t.prototype.invalidate.call(this)},g._enabled=function(t,i){if(t===this._gc)for(var n=this._first;n;)n._enabled(t,!0),n=n._next;return e.prototype._enabled.call(this,t,i)},g.totalTime=function(e,i,n){this._forcingPlayhead=!0;var r=t.prototype.totalTime.apply(this,arguments);return this._forcingPlayhead=!1,r},g.duration=function(t){return arguments.length?(0!==this.duration()&&0!==t&&this.timeScale(this._duration/t),this):(this._dirty&&this.totalDuration(),this._duration)},g.totalDuration=function(t){if(!arguments.length){if(this._dirty){for(var e,i,n=0,r=this._last,s=999999999999;r;)e=r._prev,r._dirty&&r.totalDuration(),r._startTime>s&&this._sortChildren&&!r._paused?this.add(r,r._startTime-r._delay):s=r._startTime,r._startTime<0&&!r._paused&&(n-=r._startTime,this._timeline.smoothChildTiming&&(this._startTime+=r._startTime/this._timeScale),this.shiftChildren(-r._startTime,!1,-9999999999),s=0),i=r._startTime+r._totalDuration/r._timeScale,i>n&&(n=i),r=e;this._duration=this._totalDuration=n,this._dirty=!1}return this._totalDuration}return t&&this.totalDuration()?this.timeScale(this._totalDuration/t):this},g.paused=function(e){if(!e)for(var i=this._first,n=this._time;i;)i._startTime===n&&"isPause"===i.data&&(i._rawPrevTime=0),i=i._next;return t.prototype.paused.apply(this,arguments)},g.usesFrames=function(){for(var e=this._timeline;e._timeline;)e=e._timeline;return e===t._rootFramesTimeline},g.rawTime=function(){return this._paused?this._totalTime:(this._timeline.rawTime()-this._startTime)*this._timeScale},r},!0)}),n._gsDefine&&n._gsQueue.pop()(),function(i){"use strict";var r=function(){return(n.GreenSockGlobals||n)[i]};"function"==typeof define&&define.amd?define(["TweenLite"],r):"undefined"!=typeof e&&e.exports&&(t("./TweenLite.js"),e.exports=r())}("TimelineMax")}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./TweenLite.js":12}],12:[function(t,e,i){(function(t){!function(t,i){"use strict";var n={},r=t.GreenSockGlobals=t.GreenSockGlobals||t;if(!r.TweenLite){var s,o,a,l,u,h=function(t){var e,i=t.split("."),n=r;for(e=0;e<i.length;e++)n[i[e]]=n=n[i[e]]||{};return n},c=h("com.greensock"),f=1e-10,p=function(t){var e,i=[],n=t.length;for(e=0;e!==n;i.push(t[e++]));return i},d=function(){},_=function(){var t=Object.prototype.toString,e=t.call([]);return function(i){return null!=i&&(i instanceof Array||"object"==typeof i&&!!i.push&&t.call(i)===e)}}(),m={},g=function(s,o,a,l){this.sc=m[s]?m[s].sc:[],m[s]=this,this.gsClass=null,this.func=a;var u=[];this.check=function(c){for(var f,p,d,_,v,y=o.length,T=y;--y>-1;)(f=m[o[y]]||new g(o[y],[])).gsClass?(u[y]=f.gsClass,T--):c&&f.sc.push(this);if(0===T&&a){if(p=("com.greensock."+s).split("."),d=p.pop(),_=h(p.join("."))[d]=this.gsClass=a.apply(a,u),l)if(r[d]=n[d]=_,v="undefined"!=typeof e&&e.exports,!v&&"function"==typeof define&&define.amd)define((t.GreenSockAMDPath?t.GreenSockAMDPath+"/":"")+s.split(".").pop(),[],function(){return _});else if(v)if(s===i){e.exports=n[i]=_;for(y in n)_[y]=n[y]}else n[i]&&(n[i][d]=_);for(y=0;y<this.sc.length;y++)this.sc[y].check()}},this.check(!0)},v=t._gsDefine=function(t,e,i,n){return new g(t,e,i,n)},y=c._class=function(t,e,i){return e=e||function(){},v(t,[],function(){return e},i),e};v.globals=r;var T=[0,0,1,1],x=y("easing.Ease",function(t,e,i,n){this._func=t,this._type=i||0,this._power=n||0,this._params=e?T.concat(e):T},!0),w=x.map={},b=x.register=function(t,e,i,n){for(var r,s,o,a,l=e.split(","),u=l.length,h=(i||"easeIn,easeOut,easeInOut").split(",");--u>-1;)for(s=l[u],r=n?y("easing."+s,null,!0):c.easing[s]||{},o=h.length;--o>-1;)a=h[o],w[s+"."+a]=w[a+s]=r[a]=t.getRatio?t:t[a]||new t};for(a=x.prototype,a._calcEnd=!1,a.getRatio=function(t){if(this._func)return this._params[0]=t,this._func.apply(null,this._params);var e=this._type,i=this._power,n=1===e?1-t:2===e?t:t<.5?2*t:2*(1-t);return 1===i?n*=n:2===i?n*=n*n:3===i?n*=n*n*n:4===i&&(n*=n*n*n*n),1===e?1-n:2===e?n:t<.5?n/2:1-n/2},s=["Linear","Quad","Cubic","Quart","Quint,Strong"],o=s.length;--o>-1;)a=s[o]+",Power"+o,b(new x(null,null,1,o),a,"easeOut",!0),b(new x(null,null,2,o),a,"easeIn"+(0===o?",easeNone":"")),b(new x(null,null,3,o),a,"easeInOut");w.linear=c.easing.Linear.easeIn,w.swing=c.easing.Quad.easeInOut;var P=y("events.EventDispatcher",function(t){this._listeners={},this._eventTarget=t||this});a=P.prototype,a.addEventListener=function(t,e,i,n,r){r=r||0;var s,o,a=this._listeners[t],h=0;for(this!==l||u||l.wake(),null==a&&(this._listeners[t]=a=[]),o=a.length;--o>-1;)s=a[o],s.c===e&&s.s===i?a.splice(o,1):0===h&&s.pr<r&&(h=o+1);a.splice(h,0,{c:e,s:i,up:n,pr:r})},a.removeEventListener=function(t,e){var i,n=this._listeners[t];if(n)for(i=n.length;--i>-1;)if(n[i].c===e)return void n.splice(i,1)},a.dispatchEvent=function(t){var e,i,n,r=this._listeners[t];if(r)for(e=r.length,e>1&&(r=r.slice(0)),i=this._eventTarget;--e>-1;)n=r[e],n&&(n.up?n.c.call(n.s||i,{type:t,target:i}):n.c.call(n.s||i))};var C=t.requestAnimationFrame,k=t.cancelAnimationFrame,S=Date.now||function(){return(new Date).getTime()},A=S();for(s=["ms","moz","webkit","o"],o=s.length;--o>-1&&!C;)C=t[s[o]+"RequestAnimationFrame"],k=t[s[o]+"CancelAnimationFrame"]||t[s[o]+"CancelRequestAnimationFrame"];y("Ticker",function(t,e){var i,n,r,s,o,a=this,h=S(),c=!(e===!1||!C)&&"auto",p=500,_=33,m="tick",g=function(t){var e,l,u=S()-A;u>p&&(h+=u-_),A+=u,a.time=(A-h)/1e3,e=a.time-o,(!i||e>0||t===!0)&&(a.frame++,o+=e+(e>=s?.004:s-e),l=!0),t!==!0&&(r=n(g)),l&&a.dispatchEvent(m)};P.call(a),a.time=a.frame=0,a.tick=function(){g(!0)},a.lagSmoothing=function(t,e){p=t||1/f,_=Math.min(e,p,0)},a.sleep=function(){null!=r&&(c&&k?k(r):clearTimeout(r),n=d,r=null,a===l&&(u=!1))},a.wake=function(t){null!==r?a.sleep():t?h+=-A+(A=S()):a.frame>10&&(A=S()-p+5),n=0===i?d:c&&C?C:function(t){return setTimeout(t,1e3*(o-a.time)+1|0)},a===l&&(u=!0),g(2)},a.fps=function(t){return arguments.length?(i=t,s=1/(i||60),o=this.time+s,void a.wake()):i},a.useRAF=function(t){return arguments.length?(a.sleep(),c=t,void a.fps(i)):c},a.fps(t),setTimeout(function(){"auto"===c&&a.frame<5&&"hidden"!==document.visibilityState&&a.useRAF(!1)},1500)}),a=c.Ticker.prototype=new c.events.EventDispatcher,a.constructor=c.Ticker;var D=y("core.Animation",function(t,e){if(this.vars=e=e||{},this._duration=this._totalDuration=t||0,this._delay=Number(e.delay)||0,this._timeScale=1,this._active=e.immediateRender===!0,this.data=e.data,this._reversed=e.reversed===!0,V){u||l.wake();var i=this.vars.useFrames?$:V;i.add(this,i._time),this.vars.paused&&this.paused(!0)}});l=D.ticker=new c.Ticker,a=D.prototype,a._dirty=a._gc=a._initted=a._paused=!1,a._totalTime=a._time=0,a._rawPrevTime=-1,a._next=a._last=a._onUpdate=a._timeline=a.timeline=null,a._paused=!1;var O=function(){u&&S()-A>2e3&&l.wake(),setTimeout(O,2e3)};O(),a.play=function(t,e){return null!=t&&this.seek(t,e),this.reversed(!1).paused(!1)},a.pause=function(t,e){return null!=t&&this.seek(t,e),this.paused(!0)},a.resume=function(t,e){return null!=t&&this.seek(t,e),this.paused(!1)},a.seek=function(t,e){return this.totalTime(Number(t),e!==!1)},a.restart=function(t,e){return this.reversed(!1).paused(!1).totalTime(t?-this._delay:0,e!==!1,!0)},a.reverse=function(t,e){return null!=t&&this.seek(t||this.totalDuration(),e),this.reversed(!0).paused(!1)},a.render=function(t,e,i){},a.invalidate=function(){return this._time=this._totalTime=0,this._initted=this._gc=!1,this._rawPrevTime=-1,!this._gc&&this.timeline||this._enabled(!0),this},a.isActive=function(){var t,e=this._timeline,i=this._startTime;return!e||!this._gc&&!this._paused&&e.isActive()&&(t=e.rawTime())>=i&&t<i+this.totalDuration()/this._timeScale},a._enabled=function(t,e){return u||l.wake(),this._gc=!t,this._active=this.isActive(),e!==!0&&(t&&!this.timeline?this._timeline.add(this,this._startTime-this._delay):!t&&this.timeline&&this._timeline._remove(this,!0)),!1},a._kill=function(t,e){return this._enabled(!1,!1)},a.kill=function(t,e){return this._kill(t,e),this},a._uncache=function(t){for(var e=t?this:this.timeline;e;)e._dirty=!0,e=e.timeline;return this},a._swapSelfInParams=function(t){for(var e=t.length,i=t.concat();--e>-1;)"{self}"===t[e]&&(i[e]=this);return i},a._callback=function(t){var e=this.vars,i=e[t],n=e[t+"Params"],r=e[t+"Scope"]||e.callbackScope||this,s=n?n.length:0;switch(s){case 0:i.call(r);break;case 1:i.call(r,n[0]);break;case 2:i.call(r,n[0],n[1]);break;default:i.apply(r,n)}},a.eventCallback=function(t,e,i,n){if("on"===(t||"").substr(0,2)){var r=this.vars;if(1===arguments.length)return r[t];null==e?delete r[t]:(r[t]=e,r[t+"Params"]=_(i)&&i.join("").indexOf("{self}")!==-1?this._swapSelfInParams(i):i,r[t+"Scope"]=n),"onUpdate"===t&&(this._onUpdate=e)}return this},a.delay=function(t){return arguments.length?(this._timeline.smoothChildTiming&&this.startTime(this._startTime+t-this._delay),this._delay=t,this):this._delay},a.duration=function(t){return arguments.length?(this._duration=this._totalDuration=t,this._uncache(!0),this._timeline.smoothChildTiming&&this._time>0&&this._time<this._duration&&0!==t&&this.totalTime(this._totalTime*(t/this._duration),!0),this):(this._dirty=!1,this._duration)},a.totalDuration=function(t){return this._dirty=!1,arguments.length?this.duration(t):this._totalDuration},a.time=function(t,e){return arguments.length?(this._dirty&&this.totalDuration(),this.totalTime(t>this._duration?this._duration:t,e)):this._time},a.totalTime=function(t,e,i){if(u||l.wake(),!arguments.length)return this._totalTime;if(this._timeline){if(t<0&&!i&&(t+=this.totalDuration()),this._timeline.smoothChildTiming){this._dirty&&this.totalDuration();var n=this._totalDuration,r=this._timeline;if(t>n&&!i&&(t=n),this._startTime=(this._paused?this._pauseTime:r._time)-(this._reversed?n-t:t)/this._timeScale,r._dirty||this._uncache(!1),r._timeline)for(;r._timeline;)r._timeline._time!==(r._startTime+r._totalTime)/r._timeScale&&r.totalTime(r._totalTime,!0),r=r._timeline}this._gc&&this._enabled(!0,!1),this._totalTime===t&&0!==this._duration||(M.length&&Q(),this.render(t,e,!1),M.length&&Q())}return this},a.progress=a.totalProgress=function(t,e){var i=this.duration();return arguments.length?this.totalTime(i*t,e):i?this._time/i:this.ratio},a.startTime=function(t){return arguments.length?(t!==this._startTime&&(this._startTime=t,this.timeline&&this.timeline._sortChildren&&this.timeline.add(this,t-this._delay)),this):this._startTime},a.endTime=function(t){return this._startTime+(0!=t?this.totalDuration():this.duration())/this._timeScale},a.timeScale=function(t){if(!arguments.length)return this._timeScale;if(t=t||f,this._timeline&&this._timeline.smoothChildTiming){var e=this._pauseTime,i=e||0===e?e:this._timeline.totalTime();this._startTime=i-(i-this._startTime)*this._timeScale/t}return this._timeScale=t,this._uncache(!1)},a.reversed=function(t){return arguments.length?(t!=this._reversed&&(this._reversed=t,this.totalTime(this._timeline&&!this._timeline.smoothChildTiming?this.totalDuration()-this._totalTime:this._totalTime,!0)),this):this._reversed},a.paused=function(t){if(!arguments.length)return this._paused;var e,i,n=this._timeline;return t!=this._paused&&n&&(u||t||l.wake(),e=n.rawTime(),i=e-this._pauseTime,!t&&n.smoothChildTiming&&(this._startTime+=i,this._uncache(!1)),this._pauseTime=t?e:null,this._paused=t,this._active=this.isActive(),!t&&0!==i&&this._initted&&this.duration()&&(e=n.smoothChildTiming?this._totalTime:(e-this._startTime)/this._timeScale,this.render(e,e===this._totalTime,!0))),this._gc&&!t&&this._enabled(!0,!1),this};var R=y("core.SimpleTimeline",function(t){D.call(this,0,t),this.autoRemoveChildren=this.smoothChildTiming=!0});a=R.prototype=new D,a.constructor=R,a.kill()._gc=!1,a._first=a._last=a._recent=null,a._sortChildren=!1,a.add=a.insert=function(t,e,i,n){var r,s;if(t._startTime=Number(e||0)+t._delay,t._paused&&this!==t._timeline&&(t._pauseTime=t._startTime+(this.rawTime()-t._startTime)/t._timeScale),t.timeline&&t.timeline._remove(t,!0),t.timeline=t._timeline=this,t._gc&&t._enabled(!0,!0),r=this._last,this._sortChildren)for(s=t._startTime;r&&r._startTime>s;)r=r._prev;return r?(t._next=r._next,r._next=t):(t._next=this._first,this._first=t),t._next?t._next._prev=t:this._last=t,t._prev=r,this._recent=t,this._timeline&&this._uncache(!0),this},a._remove=function(t,e){return t.timeline===this&&(e||t._enabled(!1,!0),t._prev?t._prev._next=t._next:this._first===t&&(this._first=t._next),t._next?t._next._prev=t._prev:this._last===t&&(this._last=t._prev),t._next=t._prev=t.timeline=null,t===this._recent&&(this._recent=this._last),this._timeline&&this._uncache(!0)),this},a.render=function(t,e,i){var n,r=this._first;for(this._totalTime=this._time=this._rawPrevTime=t;r;)n=r._next,(r._active||t>=r._startTime&&!r._paused)&&(r._reversed?r.render((r._dirty?r.totalDuration():r._totalDuration)-(t-r._startTime)*r._timeScale,e,i):r.render((t-r._startTime)*r._timeScale,e,i)),r=n},a.rawTime=function(){return u||l.wake(),this._totalTime};var j=y("TweenLite",function(e,i,n){if(D.call(this,i,n),this.render=j.prototype.render,null==e)throw"Cannot tween a null target.";this.target=e="string"!=typeof e?e:j.selector(e)||e;var r,s,o,a=e.jquery||e.length&&e!==t&&e[0]&&(e[0]===t||e[0].nodeType&&e[0].style&&!e.nodeType),l=this.vars.overwrite;if(this._overwrite=l=null==l?Y[j.defaultOverwrite]:"number"==typeof l?l>>0:Y[l],(a||e instanceof Array||e.push&&_(e))&&"number"!=typeof e[0])for(this._targets=o=p(e),this._propLookup=[],this._siblings=[],r=0;r<o.length;r++)s=o[r],s?"string"!=typeof s?s.length&&s!==t&&s[0]&&(s[0]===t||s[0].nodeType&&s[0].style&&!s.nodeType)?(o.splice(r--,1),this._targets=o=o.concat(p(s))):(this._siblings[r]=K(s,this,!1),1===l&&this._siblings[r].length>1&&J(s,this,null,1,this._siblings[r])):(s=o[r--]=j.selector(s),"string"==typeof s&&o.splice(r+1,1)):o.splice(r--,1);else this._propLookup={},this._siblings=K(e,this,!1),1===l&&this._siblings.length>1&&J(e,this,null,1,this._siblings);(this.vars.immediateRender||0===i&&0===this._delay&&this.vars.immediateRender!==!1)&&(this._time=-f,this.render(Math.min(0,-this._delay)))},!0),E=function(e){return e&&e.length&&e!==t&&e[0]&&(e[0]===t||e[0].nodeType&&e[0].style&&!e.nodeType)},L=function(t,e){var i,n={};for(i in t)U[i]||i in e&&"transform"!==i&&"x"!==i&&"y"!==i&&"width"!==i&&"height"!==i&&"className"!==i&&"border"!==i||!(!H[i]||H[i]&&H[i]._autoCSS)||(n[i]=t[i],delete t[i]);t.css=n};a=j.prototype=new D,a.constructor=j,a.kill()._gc=!1,a.ratio=0,a._firstPT=a._targets=a._overwrittenProps=a._startAt=null,a._notifyPluginsOfEnabled=a._lazy=!1,j.version="1.19.0",j.defaultEase=a._ease=new x(null,null,1,1),j.defaultOverwrite="auto",j.ticker=l,j.autoSleep=120,j.lagSmoothing=function(t,e){l.lagSmoothing(t,e)},j.selector=t.$||t.jQuery||function(e){var i=t.$||t.jQuery;return i?(j.selector=i,i(e)):"undefined"==typeof document?e:document.querySelectorAll?document.querySelectorAll(e):document.getElementById("#"===e.charAt(0)?e.substr(1):e)};var M=[],F={},N=/(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi,q=function(t){for(var e,i=this._firstPT,n=1e-6;i;)e=i.blob?t?this.join(""):this.start:i.c*t+i.s,i.m?e=i.m(e,this._target||i.t):e<n&&e>-n&&(e=0),i.f?i.fp?i.t[i.p](i.fp,e):i.t[i.p](e):i.t[i.p]=e,i=i._next},I=function(t,e,i,n){var r,s,o,a,l,u,h,c=[t,e],f=0,p="",d=0;for(c.start=t,i&&(i(c),t=c[0],e=c[1]),c.length=0,r=t.match(N)||[],s=e.match(N)||[],n&&(n._next=null,n.blob=1,c._firstPT=c._applyPT=n),l=s.length,a=0;a<l;a++)h=s[a],u=e.substr(f,e.indexOf(h,f)-f),p+=u||!a?u:",",f+=u.length,d?d=(d+1)%5:"rgba("===u.substr(-5)&&(d=1),h===r[a]||r.length<=a?p+=h:(p&&(c.push(p),p=""),o=parseFloat(r[a]),c.push(o),c._firstPT={_next:c._firstPT,t:c,p:c.length-1,s:o,c:("="===h.charAt(1)?parseInt(h.charAt(0)+"1",10)*parseFloat(h.substr(2)):parseFloat(h)-o)||0,f:0,m:d&&d<4?Math.round:0}),f+=h.length;return p+=e.substr(f),p&&c.push(p),c.setRatio=q,c},z=function(t,e,i,n,r,s,o,a,l){"function"==typeof n&&(n=n(l||0,t));var u,h,c="get"===i?t[e]:i,f=typeof t[e],p="string"==typeof n&&"="===n.charAt(1),d={t:t,p:e,s:c,f:"function"===f,pg:0,n:r||e,m:s?"function"==typeof s?s:Math.round:0,pr:0,c:p?parseInt(n.charAt(0)+"1",10)*parseFloat(n.substr(2)):parseFloat(n)-c||0};if("number"!==f&&("function"===f&&"get"===i&&(h=e.indexOf("set")||"function"!=typeof t["get"+e.substr(3)]?e:"get"+e.substr(3),d.s=c=o?t[h](o):t[h]()),"string"==typeof c&&(o||isNaN(c))?(d.fp=o,u=I(c,n,a||j.defaultStringFilter,d),d={t:u,p:"setRatio",s:0,c:1,f:2,pg:0,n:r||e,pr:0,m:0}):p||(d.s=parseFloat(c),d.c=parseFloat(n)-d.s||0)),d.c)return(d._next=this._firstPT)&&(d._next._prev=d),this._firstPT=d,d},B=j._internals={isArray:_,isSelector:E,lazyTweens:M,blobDif:I},H=j._plugins={},X=B.tweenLookup={},W=0,U=B.reservedProps={ease:1,delay:1,overwrite:1,onComplete:1,onCompleteParams:1,onCompleteScope:1,useFrames:1,runBackwards:1,startAt:1,onUpdate:1,onUpdateParams:1,onUpdateScope:1,onStart:1,onStartParams:1,onStartScope:1,onReverseComplete:1,onReverseCompleteParams:1,onReverseCompleteScope:1,onRepeat:1,onRepeatParams:1,onRepeatScope:1,easeParams:1,yoyo:1,immediateRender:1,repeat:1,repeatDelay:1,data:1,paused:1,reversed:1,autoCSS:1,lazy:1,onOverwrite:1,callbackScope:1,stringFilter:1,id:1},Y={none:0,all:1,auto:2,concurrent:3,allOnStart:4,preexisting:5,true:1,false:0},$=D._rootFramesTimeline=new R,V=D._rootTimeline=new R,G=30,Q=B.lazyRender=function(){var t,e=M.length;for(F={};--e>-1;)t=M[e],t&&t._lazy!==!1&&(t.render(t._lazy[0],t._lazy[1],!0),t._lazy=!1);M.length=0};V._startTime=l.time,$._startTime=l.frame,V._active=$._active=!0,setTimeout(Q,1),D._updateRoot=j.render=function(){var t,e,i;if(M.length&&Q(),V.render((l.time-V._startTime)*V._timeScale,!1,!1),$.render((l.frame-$._startTime)*$._timeScale,!1,!1),M.length&&Q(),l.frame>=G){G=l.frame+(parseInt(j.autoSleep,10)||120);for(i in X){for(e=X[i].tweens,t=e.length;--t>-1;)e[t]._gc&&e.splice(t,1);0===e.length&&delete X[i]}if(i=V._first,(!i||i._paused)&&j.autoSleep&&!$._first&&1===l._listeners.tick.length){for(;i&&i._paused;)i=i._next;i||l.sleep()}}},l.addEventListener("tick",D._updateRoot);var K=function(t,e,i){var n,r,s=t._gsTweenID;if(X[s||(t._gsTweenID=s="t"+W++)]||(X[s]={target:t,tweens:[]}),e&&(n=X[s].tweens,n[r=n.length]=e,i))for(;--r>-1;)n[r]===e&&n.splice(r,1);return X[s].tweens},Z=function(t,e,i,n){var r,s,o=t.vars.onOverwrite;return o&&(r=o(t,e,i,n)),o=j.onOverwrite,o&&(s=o(t,e,i,n)),r!==!1&&s!==!1},J=function(t,e,i,n,r){var s,o,a,l;if(1===n||n>=4){for(l=r.length,s=0;s<l;s++)if((a=r[s])!==e)a._gc||a._kill(null,t,e)&&(o=!0);else if(5===n)break;return o}var u,h=e._startTime+f,c=[],p=0,d=0===e._duration;for(s=r.length;--s>-1;)(a=r[s])===e||a._gc||a._paused||(a._timeline!==e._timeline?(u=u||tt(e,0,d),0===tt(a,u,d)&&(c[p++]=a)):a._startTime<=h&&a._startTime+a.totalDuration()/a._timeScale>h&&((d||!a._initted)&&h-a._startTime<=2e-10||(c[p++]=a)));for(s=p;--s>-1;)if(a=c[s],2===n&&a._kill(i,t,e)&&(o=!0),2!==n||!a._firstPT&&a._initted){if(2!==n&&!Z(a,e))continue;a._enabled(!1,!1)&&(o=!0)}return o},tt=function(t,e,i){for(var n=t._timeline,r=n._timeScale,s=t._startTime;n._timeline;){if(s+=n._startTime,r*=n._timeScale,n._paused)return-100;n=n._timeline}return s/=r,s>e?s-e:i&&s===e||!t._initted&&s-e<2*f?f:(s+=t.totalDuration()/t._timeScale/r)>e+f?0:s-e-f};a._init=function(){var t,e,i,n,r,s,o=this.vars,a=this._overwrittenProps,l=this._duration,u=!!o.immediateRender,h=o.ease;if(o.startAt){this._startAt&&(this._startAt.render(-1,!0),this._startAt.kill()),r={};for(n in o.startAt)r[n]=o.startAt[n];if(r.overwrite=!1,r.immediateRender=!0,r.lazy=u&&o.lazy!==!1,r.startAt=r.delay=null,this._startAt=j.to(this.target,0,r),u)if(this._time>0)this._startAt=null;else if(0!==l)return}else if(o.runBackwards&&0!==l)if(this._startAt)this._startAt.render(-1,!0),this._startAt.kill(),this._startAt=null;else{0!==this._time&&(u=!1),i={};for(n in o)U[n]&&"autoCSS"!==n||(i[n]=o[n]);if(i.overwrite=0,i.data="isFromStart",i.lazy=u&&o.lazy!==!1,i.immediateRender=u,this._startAt=j.to(this.target,0,i),u){if(0===this._time)return}else this._startAt._init(),this._startAt._enabled(!1),this.vars.immediateRender&&(this._startAt=null)}if(this._ease=h=h?h instanceof x?h:"function"==typeof h?new x(h,o.easeParams):w[h]||j.defaultEase:j.defaultEase,o.easeParams instanceof Array&&h.config&&(this._ease=h.config.apply(h,o.easeParams)),this._easeType=this._ease._type,this._easePower=this._ease._power,this._firstPT=null,this._targets)for(s=this._targets.length,t=0;t<s;t++)this._initProps(this._targets[t],this._propLookup[t]={},this._siblings[t],a?a[t]:null,t)&&(e=!0);else e=this._initProps(this.target,this._propLookup,this._siblings,a,0);if(e&&j._onPluginEvent("_onInitAllProps",this),a&&(this._firstPT||"function"!=typeof this.target&&this._enabled(!1,!1)),o.runBackwards)for(i=this._firstPT;i;)i.s+=i.c,i.c=-i.c,i=i._next;this._onUpdate=o.onUpdate,this._initted=!0},a._initProps=function(e,i,n,r,s){var o,a,l,u,h,c;if(null==e)return!1;F[e._gsTweenID]&&Q(),this.vars.css||e.style&&e!==t&&e.nodeType&&H.css&&this.vars.autoCSS!==!1&&L(this.vars,e);for(o in this.vars)if(c=this.vars[o],U[o])c&&(c instanceof Array||c.push&&_(c))&&c.join("").indexOf("{self}")!==-1&&(this.vars[o]=c=this._swapSelfInParams(c,this));else if(H[o]&&(u=new H[o])._onInitTween(e,this.vars[o],this,s)){for(this._firstPT=h={_next:this._firstPT,t:u,p:"setRatio",s:0,c:1,f:1,n:o,pg:1,pr:u._priority,m:0},a=u._overwriteProps.length;--a>-1;)i[u._overwriteProps[a]]=this._firstPT;(u._priority||u._onInitAllProps)&&(l=!0),(u._onDisable||u._onEnable)&&(this._notifyPluginsOfEnabled=!0),h._next&&(h._next._prev=h)}else i[o]=z.call(this,e,o,"get",c,o,0,null,this.vars.stringFilter,s);return r&&this._kill(r,e)?this._initProps(e,i,n,r,s):this._overwrite>1&&this._firstPT&&n.length>1&&J(e,this,i,this._overwrite,n)?(this._kill(i,e),this._initProps(e,i,n,r,s)):(this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration)&&(F[e._gsTweenID]=!0),l)},a.render=function(t,e,i){var n,r,s,o,a=this._time,l=this._duration,u=this._rawPrevTime;if(t>=l-1e-7)this._totalTime=this._time=l,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1,this._reversed||(n=!0,r="onComplete",i=i||this._timeline.autoRemoveChildren),0===l&&(this._initted||!this.vars.lazy||i)&&(this._startTime===this._timeline._duration&&(t=0),(u<0||t<=0&&t>=-1e-7||u===f&&"isPause"!==this.data)&&u!==t&&(i=!0,u>f&&(r="onReverseComplete")),this._rawPrevTime=o=!e||t||u===t?t:f);else if(t<1e-7)this._totalTime=this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==a||0===l&&u>0)&&(r="onReverseComplete",n=this._reversed),t<0&&(this._active=!1,0===l&&(this._initted||!this.vars.lazy||i)&&(u>=0&&(u!==f||"isPause"!==this.data)&&(i=!0),this._rawPrevTime=o=!e||t||u===t?t:f)),this._initted||(i=!0);else if(this._totalTime=this._time=t,this._easeType){var h=t/l,c=this._easeType,p=this._easePower;(1===c||3===c&&h>=.5)&&(h=1-h),3===c&&(h*=2),1===p?h*=h:2===p?h*=h*h:3===p?h*=h*h*h:4===p&&(h*=h*h*h*h),1===c?this.ratio=1-h:2===c?this.ratio=h:t/l<.5?this.ratio=h/2:this.ratio=1-h/2}else this.ratio=this._ease.getRatio(t/l);if(this._time!==a||i){if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!i&&this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration))return this._time=this._totalTime=a,this._rawPrevTime=u,M.push(this),void(this._lazy=[t,e]);this._time&&!n?this.ratio=this._ease.getRatio(this._time/l):n&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(this._lazy!==!1&&(this._lazy=!1),this._active||!this._paused&&this._time!==a&&t>=0&&(this._active=!0),0===a&&(this._startAt&&(t>=0?this._startAt.render(t,e,i):r||(r="_dummyGS")),this.vars.onStart&&(0===this._time&&0!==l||e||this._callback("onStart"))),s=this._firstPT;s;)s.f?s.t[s.p](s.c*this.ratio+s.s):s.t[s.p]=s.c*this.ratio+s.s,s=s._next;this._onUpdate&&(t<0&&this._startAt&&t!==-1e-4&&this._startAt.render(t,e,i),e||(this._time!==a||n||i)&&this._callback("onUpdate")),r&&(this._gc&&!i||(t<0&&this._startAt&&!this._onUpdate&&t!==-1e-4&&this._startAt.render(t,e,i),n&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[r]&&this._callback(r),0===l&&this._rawPrevTime===f&&o!==f&&(this._rawPrevTime=0)))}},a._kill=function(t,e,i){if("all"===t&&(t=null),null==t&&(null==e||e===this.target))return this._lazy=!1,this._enabled(!1,!1);e="string"!=typeof e?e||this._targets||this.target:j.selector(e)||e;var n,r,s,o,a,l,u,h,c,f=i&&this._time&&i._startTime===this._startTime&&this._timeline===i._timeline;if((_(e)||E(e))&&"number"!=typeof e[0])for(n=e.length;--n>-1;)this._kill(t,e[n],i)&&(l=!0);else{if(this._targets){for(n=this._targets.length;--n>-1;)if(e===this._targets[n]){a=this._propLookup[n]||{},this._overwrittenProps=this._overwrittenProps||[],r=this._overwrittenProps[n]=t?this._overwrittenProps[n]||{}:"all";break}}else{if(e!==this.target)return!1;a=this._propLookup,r=this._overwrittenProps=t?this._overwrittenProps||{}:"all"}if(a){if(u=t||a,h=t!==r&&"all"!==r&&t!==a&&("object"!=typeof t||!t._tempKill),i&&(j.onOverwrite||this.vars.onOverwrite)){for(s in u)a[s]&&(c||(c=[]),c.push(s));if((c||!t)&&!Z(this,i,e,c))return!1}for(s in u)(o=a[s])&&(f&&(o.f?o.t[o.p](o.s):o.t[o.p]=o.s,l=!0),o.pg&&o.t._kill(u)&&(l=!0),o.pg&&0!==o.t._overwriteProps.length||(o._prev?o._prev._next=o._next:o===this._firstPT&&(this._firstPT=o._next),o._next&&(o._next._prev=o._prev),o._next=o._prev=null),delete a[s]),h&&(r[s]=1);!this._firstPT&&this._initted&&this._enabled(!1,!1)}}return l},a.invalidate=function(){return this._notifyPluginsOfEnabled&&j._onPluginEvent("_onDisable",this),this._firstPT=this._overwrittenProps=this._startAt=this._onUpdate=null,this._notifyPluginsOfEnabled=this._active=this._lazy=!1,this._propLookup=this._targets?{}:[],D.prototype.invalidate.call(this),this.vars.immediateRender&&(this._time=-f,this.render(Math.min(0,-this._delay))),this},a._enabled=function(t,e){if(u||l.wake(),t&&this._gc){var i,n=this._targets;if(n)for(i=n.length;--i>-1;)this._siblings[i]=K(n[i],this,!0);else this._siblings=K(this.target,this,!0)}return D.prototype._enabled.call(this,t,e),!(!this._notifyPluginsOfEnabled||!this._firstPT)&&j._onPluginEvent(t?"_onEnable":"_onDisable",this)},j.to=function(t,e,i){return new j(t,e,i)},j.from=function(t,e,i){return i.runBackwards=!0,i.immediateRender=0!=i.immediateRender,
new j(t,e,i)},j.fromTo=function(t,e,i,n){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,new j(t,e,n)},j.delayedCall=function(t,e,i,n,r){return new j(e,0,{delay:t,onComplete:e,onCompleteParams:i,callbackScope:n,onReverseComplete:e,onReverseCompleteParams:i,immediateRender:!1,lazy:!1,useFrames:r,overwrite:0})},j.set=function(t,e){return new j(t,0,e)},j.getTweensOf=function(t,e){if(null==t)return[];t="string"!=typeof t?t:j.selector(t)||t;var i,n,r,s;if((_(t)||E(t))&&"number"!=typeof t[0]){for(i=t.length,n=[];--i>-1;)n=n.concat(j.getTweensOf(t[i],e));for(i=n.length;--i>-1;)for(s=n[i],r=i;--r>-1;)s===n[r]&&n.splice(i,1)}else for(n=K(t).concat(),i=n.length;--i>-1;)(n[i]._gc||e&&!n[i].isActive())&&n.splice(i,1);return n},j.killTweensOf=j.killDelayedCallsTo=function(t,e,i){"object"==typeof e&&(i=e,e=!1);for(var n=j.getTweensOf(t,e),r=n.length;--r>-1;)n[r]._kill(i,t)};var et=y("plugins.TweenPlugin",function(t,e){this._overwriteProps=(t||"").split(","),this._propName=this._overwriteProps[0],this._priority=e||0,this._super=et.prototype},!0);if(a=et.prototype,et.version="1.19.0",et.API=2,a._firstPT=null,a._addTween=z,a.setRatio=q,a._kill=function(t){var e,i=this._overwriteProps,n=this._firstPT;if(null!=t[this._propName])this._overwriteProps=[];else for(e=i.length;--e>-1;)null!=t[i[e]]&&i.splice(e,1);for(;n;)null!=t[n.n]&&(n._next&&(n._next._prev=n._prev),n._prev?(n._prev._next=n._next,n._prev=null):this._firstPT===n&&(this._firstPT=n._next)),n=n._next;return!1},a._mod=a._roundProps=function(t){for(var e,i=this._firstPT;i;)e=t[this._propName]||null!=i.n&&t[i.n.split(this._propName+"_").join("")],e&&"function"==typeof e&&(2===i.f?i.t._applyPT.m=e:i.m=e),i=i._next},j._onPluginEvent=function(t,e){var i,n,r,s,o,a=e._firstPT;if("_onInitAllProps"===t){for(;a;){for(o=a._next,n=r;n&&n.pr>a.pr;)n=n._next;(a._prev=n?n._prev:s)?a._prev._next=a:r=a,(a._next=n)?n._prev=a:s=a,a=o}a=e._firstPT=r}for(;a;)a.pg&&"function"==typeof a.t[t]&&a.t[t]()&&(i=!0),a=a._next;return i},et.activate=function(t){for(var e=t.length;--e>-1;)t[e].API===et.API&&(H[(new t[e])._propName]=t[e]);return!0},v.plugin=function(t){if(!(t&&t.propName&&t.init&&t.API))throw"illegal plugin definition.";var e,i=t.propName,n=t.priority||0,r=t.overwriteProps,s={init:"_onInitTween",set:"setRatio",kill:"_kill",round:"_mod",mod:"_mod",initAll:"_onInitAllProps"},o=y("plugins."+i.charAt(0).toUpperCase()+i.substr(1)+"Plugin",function(){et.call(this,i,n),this._overwriteProps=r||[]},t.global===!0),a=o.prototype=new et(i);a.constructor=o,o.API=t.API;for(e in s)"function"==typeof t[e]&&(a[s[e]]=t[e]);return o.version=t.version,et.activate([o]),o},s=t._gsQueue){for(o=0;o<s.length;o++)s[o]();for(a in m)m[a].func||t.console.log("GSAP encountered missing dependency: "+a)}u=!1}}("undefined"!=typeof e&&e.exports&&"undefined"!=typeof t?t:this||window,"TweenLite")}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],13:[function(t,e,i){(function(t){var i="undefined"!=typeof e&&e.exports&&"undefined"!=typeof t?t:this||window;(i._gsQueue||(i._gsQueue=[])).push(function(){"use strict";i._gsDefine("TweenMax",["core.Animation","core.SimpleTimeline","TweenLite"],function(t,e,i){var n=function(t){var e,i=[],n=t.length;for(e=0;e!==n;i.push(t[e++]));return i},r=function(t,e,i){var n,r,s=t.cycle;for(n in s)r=s[n],t[n]="function"==typeof r?r(i,e[i]):r[i%r.length];delete t.cycle},s=function(t,e,n){i.call(this,t,e,n),this._cycle=0,this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._dirty=!0,this.render=s.prototype.render},o=1e-10,a=i._internals,l=a.isSelector,u=a.isArray,h=s.prototype=i.to({},.1,{}),c=[];s.version="1.19.0",h.constructor=s,h.kill()._gc=!1,s.killTweensOf=s.killDelayedCallsTo=i.killTweensOf,s.getTweensOf=i.getTweensOf,s.lagSmoothing=i.lagSmoothing,s.ticker=i.ticker,s.render=i.render,h.invalidate=function(){return this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._uncache(!0),i.prototype.invalidate.call(this)},h.updateTo=function(t,e){var n,r=this.ratio,s=this.vars.immediateRender||t.immediateRender;e&&this._startTime<this._timeline._time&&(this._startTime=this._timeline._time,this._uncache(!1),this._gc?this._enabled(!0,!1):this._timeline.insert(this,this._startTime-this._delay));for(n in t)this.vars[n]=t[n];if(this._initted||s)if(e)this._initted=!1,s&&this.render(0,!0,!0);else if(this._gc&&this._enabled(!0,!1),this._notifyPluginsOfEnabled&&this._firstPT&&i._onPluginEvent("_onDisable",this),this._time/this._duration>.998){var o=this._totalTime;this.render(0,!0,!1),this._initted=!1,this.render(o,!0,!1)}else if(this._initted=!1,this._init(),this._time>0||s)for(var a,l=1/(1-r),u=this._firstPT;u;)a=u.s+u.c,u.c*=l,u.s=a-u.c,u=u._next;return this},h.render=function(t,e,i){this._initted||0===this._duration&&this.vars.repeat&&this.invalidate();var n,r,s,l,u,h,c,f,p=this._dirty?this.totalDuration():this._totalDuration,d=this._time,_=this._totalTime,m=this._cycle,g=this._duration,v=this._rawPrevTime;if(t>=p-1e-7?(this._totalTime=p,this._cycle=this._repeat,this._yoyo&&0!==(1&this._cycle)?(this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0):(this._time=g,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1),this._reversed||(n=!0,r="onComplete",i=i||this._timeline.autoRemoveChildren),0===g&&(this._initted||!this.vars.lazy||i)&&(this._startTime===this._timeline._duration&&(t=0),(v<0||t<=0&&t>=-1e-7||v===o&&"isPause"!==this.data)&&v!==t&&(i=!0,v>o&&(r="onReverseComplete")),this._rawPrevTime=f=!e||t||v===t?t:o)):t<1e-7?(this._totalTime=this._time=this._cycle=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==_||0===g&&v>0)&&(r="onReverseComplete",n=this._reversed),t<0&&(this._active=!1,0===g&&(this._initted||!this.vars.lazy||i)&&(v>=0&&(i=!0),this._rawPrevTime=f=!e||t||v===t?t:o)),this._initted||(i=!0)):(this._totalTime=this._time=t,0!==this._repeat&&(l=g+this._repeatDelay,this._cycle=this._totalTime/l>>0,0!==this._cycle&&this._cycle===this._totalTime/l&&_<=t&&this._cycle--,this._time=this._totalTime-this._cycle*l,this._yoyo&&0!==(1&this._cycle)&&(this._time=g-this._time),this._time>g?this._time=g:this._time<0&&(this._time=0)),this._easeType?(u=this._time/g,h=this._easeType,c=this._easePower,(1===h||3===h&&u>=.5)&&(u=1-u),3===h&&(u*=2),1===c?u*=u:2===c?u*=u*u:3===c?u*=u*u*u:4===c&&(u*=u*u*u*u),1===h?this.ratio=1-u:2===h?this.ratio=u:this._time/g<.5?this.ratio=u/2:this.ratio=1-u/2):this.ratio=this._ease.getRatio(this._time/g)),d===this._time&&!i&&m===this._cycle)return void(_!==this._totalTime&&this._onUpdate&&(e||this._callback("onUpdate")));if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!i&&this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration))return this._time=d,this._totalTime=_,this._rawPrevTime=v,this._cycle=m,a.lazyTweens.push(this),void(this._lazy=[t,e]);this._time&&!n?this.ratio=this._ease.getRatio(this._time/g):n&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(this._lazy!==!1&&(this._lazy=!1),this._active||!this._paused&&this._time!==d&&t>=0&&(this._active=!0),0===_&&(2===this._initted&&t>0&&this._init(),this._startAt&&(t>=0?this._startAt.render(t,e,i):r||(r="_dummyGS")),this.vars.onStart&&(0===this._totalTime&&0!==g||e||this._callback("onStart"))),s=this._firstPT;s;)s.f?s.t[s.p](s.c*this.ratio+s.s):s.t[s.p]=s.c*this.ratio+s.s,s=s._next;this._onUpdate&&(t<0&&this._startAt&&this._startTime&&this._startAt.render(t,e,i),e||(this._totalTime!==_||r)&&this._callback("onUpdate")),this._cycle!==m&&(e||this._gc||this.vars.onRepeat&&this._callback("onRepeat")),r&&(this._gc&&!i||(t<0&&this._startAt&&!this._onUpdate&&this._startTime&&this._startAt.render(t,e,i),n&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[r]&&this._callback(r),0===g&&this._rawPrevTime===o&&f!==o&&(this._rawPrevTime=0)))},s.to=function(t,e,i){return new s(t,e,i)},s.from=function(t,e,i){return i.runBackwards=!0,i.immediateRender=0!=i.immediateRender,new s(t,e,i)},s.fromTo=function(t,e,i,n){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,new s(t,e,n)},s.staggerTo=s.allTo=function(t,e,o,a,h,f,p){a=a||0;var d,_,m,g,v=0,y=[],T=function(){o.onComplete&&o.onComplete.apply(o.onCompleteScope||this,arguments),h.apply(p||o.callbackScope||this,f||c)},x=o.cycle,w=o.startAt&&o.startAt.cycle;for(u(t)||("string"==typeof t&&(t=i.selector(t)||t),l(t)&&(t=n(t))),t=t||[],a<0&&(t=n(t),t.reverse(),a*=-1),d=t.length-1,m=0;m<=d;m++){_={};for(g in o)_[g]=o[g];if(x&&(r(_,t,m),null!=_.duration&&(e=_.duration,delete _.duration)),w){w=_.startAt={};for(g in o.startAt)w[g]=o.startAt[g];r(_.startAt,t,m)}_.delay=v+(_.delay||0),m===d&&h&&(_.onComplete=T),y[m]=new s(t[m],e,_),v+=a}return y},s.staggerFrom=s.allFrom=function(t,e,i,n,r,o,a){return i.runBackwards=!0,i.immediateRender=0!=i.immediateRender,s.staggerTo(t,e,i,n,r,o,a)},s.staggerFromTo=s.allFromTo=function(t,e,i,n,r,o,a,l){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,s.staggerTo(t,e,n,r,o,a,l)},s.delayedCall=function(t,e,i,n,r){return new s(e,0,{delay:t,onComplete:e,onCompleteParams:i,callbackScope:n,onReverseComplete:e,onReverseCompleteParams:i,immediateRender:!1,useFrames:r,overwrite:0})},s.set=function(t,e){return new s(t,0,e)},s.isTweening=function(t){return i.getTweensOf(t,!0).length>0};var f=function(t,e){for(var n=[],r=0,s=t._first;s;)s instanceof i?n[r++]=s:(e&&(n[r++]=s),n=n.concat(f(s,e)),r=n.length),s=s._next;return n},p=s.getAllTweens=function(e){return f(t._rootTimeline,e).concat(f(t._rootFramesTimeline,e))};s.killAll=function(t,i,n,r){null==i&&(i=!0),null==n&&(n=!0);var s,o,a,l=p(0!=r),u=l.length,h=i&&n&&r;for(a=0;a<u;a++)o=l[a],(h||o instanceof e||(s=o.target===o.vars.onComplete)&&n||i&&!s)&&(t?o.totalTime(o._reversed?0:o.totalDuration()):o._enabled(!1,!1))},s.killChildTweensOf=function(t,e){if(null!=t){var r,o,h,c,f,p=a.tweenLookup;if("string"==typeof t&&(t=i.selector(t)||t),l(t)&&(t=n(t)),u(t))for(c=t.length;--c>-1;)s.killChildTweensOf(t[c],e);else{r=[];for(h in p)for(o=p[h].target.parentNode;o;)o===t&&(r=r.concat(p[h].tweens)),o=o.parentNode;for(f=r.length,c=0;c<f;c++)e&&r[c].totalTime(r[c].totalDuration()),r[c]._enabled(!1,!1)}}};var d=function(t,i,n,r){i=i!==!1,n=n!==!1,r=r!==!1;for(var s,o,a=p(r),l=i&&n&&r,u=a.length;--u>-1;)o=a[u],(l||o instanceof e||(s=o.target===o.vars.onComplete)&&n||i&&!s)&&o.paused(t)};return s.pauseAll=function(t,e,i){d(!0,t,e,i)},s.resumeAll=function(t,e,i){d(!1,t,e,i)},s.globalTimeScale=function(e){var n=t._rootTimeline,r=i.ticker.time;return arguments.length?(e=e||o,n._startTime=r-(r-n._startTime)*n._timeScale/e,n=t._rootFramesTimeline,r=i.ticker.frame,n._startTime=r-(r-n._startTime)*n._timeScale/e,n._timeScale=t._rootTimeline._timeScale=e,e):n._timeScale},h.progress=function(t,e){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!==(1&this._cycle)?1-t:t)+this._cycle*(this._duration+this._repeatDelay),e):this._time/this.duration()},h.totalProgress=function(t,e){return arguments.length?this.totalTime(this.totalDuration()*t,e):this._totalTime/this.totalDuration()},h.time=function(t,e){return arguments.length?(this._dirty&&this.totalDuration(),t>this._duration&&(t=this._duration),this._yoyo&&0!==(1&this._cycle)?t=this._duration-t+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(t+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(t,e)):this._time},h.duration=function(e){return arguments.length?t.prototype.duration.call(this,e):this._duration},h.totalDuration=function(t){return arguments.length?this._repeat===-1?this:this.duration((t-this._repeat*this._repeatDelay)/(this._repeat+1)):(this._dirty&&(this._totalDuration=this._repeat===-1?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat,this._dirty=!1),this._totalDuration)},h.repeat=function(t){return arguments.length?(this._repeat=t,this._uncache(!0)):this._repeat},h.repeatDelay=function(t){return arguments.length?(this._repeatDelay=t,this._uncache(!0)):this._repeatDelay},h.yoyo=function(t){return arguments.length?(this._yoyo=t,this):this._yoyo},s},!0),i._gsDefine("TimelineLite",["core.Animation","core.SimpleTimeline","TweenLite"],function(t,e,n){var r=function(t){e.call(this,t),this._labels={},this.autoRemoveChildren=this.vars.autoRemoveChildren===!0,this.smoothChildTiming=this.vars.smoothChildTiming===!0,this._sortChildren=!0,this._onUpdate=this.vars.onUpdate;var i,n,r=this.vars;for(n in r)i=r[n],u(i)&&i.join("").indexOf("{self}")!==-1&&(r[n]=this._swapSelfInParams(i));u(r.tweens)&&this.add(r.tweens,0,r.align,r.stagger)},s=1e-10,o=n._internals,a=r._internals={},l=o.isSelector,u=o.isArray,h=o.lazyTweens,c=o.lazyRender,f=i._gsDefine.globals,p=function(t){var e,i={};for(e in t)i[e]=t[e];return i},d=function(t,e,i){var n,r,s=t.cycle;for(n in s)r=s[n],t[n]="function"==typeof r?r.call(e[i],i):r[i%r.length];delete t.cycle},_=a.pauseCallback=function(){},m=function(t){var e,i=[],n=t.length;for(e=0;e!==n;i.push(t[e++]));return i},g=r.prototype=new e;return r.version="1.19.0",g.constructor=r,g.kill()._gc=g._forcingPlayhead=g._hasPause=!1,g.to=function(t,e,i,r){var s=i.repeat&&f.TweenMax||n;return e?this.add(new s(t,e,i),r):this.set(t,i,r)},g.from=function(t,e,i,r){return this.add((i.repeat&&f.TweenMax||n).from(t,e,i),r)},g.fromTo=function(t,e,i,r,s){var o=r.repeat&&f.TweenMax||n;return e?this.add(o.fromTo(t,e,i,r),s):this.set(t,r,s)},g.staggerTo=function(t,e,i,s,o,a,u,h){var c,f,_=new r({onComplete:a,onCompleteParams:u,callbackScope:h,smoothChildTiming:this.smoothChildTiming}),g=i.cycle;for("string"==typeof t&&(t=n.selector(t)||t),t=t||[],l(t)&&(t=m(t)),s=s||0,s<0&&(t=m(t),t.reverse(),s*=-1),f=0;f<t.length;f++)c=p(i),c.startAt&&(c.startAt=p(c.startAt),c.startAt.cycle&&d(c.startAt,t,f)),g&&(d(c,t,f),null!=c.duration&&(e=c.duration,delete c.duration)),_.to(t[f],e,c,f*s);return this.add(_,o)},g.staggerFrom=function(t,e,i,n,r,s,o,a){return i.immediateRender=0!=i.immediateRender,i.runBackwards=!0,this.staggerTo(t,e,i,n,r,s,o,a)},g.staggerFromTo=function(t,e,i,n,r,s,o,a,l){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,this.staggerTo(t,e,n,r,s,o,a,l)},g.call=function(t,e,i,r){return this.add(n.delayedCall(0,t,e,i),r)},g.set=function(t,e,i){return i=this._parseTimeOrLabel(i,0,!0),null==e.immediateRender&&(e.immediateRender=i===this._time&&!this._paused),this.add(new n(t,0,e),i)},r.exportRoot=function(t,e){t=t||{},null==t.smoothChildTiming&&(t.smoothChildTiming=!0);var i,s,o=new r(t),a=o._timeline;for(null==e&&(e=!0),a._remove(o,!0),o._startTime=0,o._rawPrevTime=o._time=o._totalTime=a._time,i=a._first;i;)s=i._next,e&&i instanceof n&&i.target===i.vars.onComplete||o.add(i,i._startTime-i._delay),i=s;return a.add(o,0),o},g.add=function(i,s,o,a){var l,h,c,f,p,d;if("number"!=typeof s&&(s=this._parseTimeOrLabel(s,0,!0,i)),!(i instanceof t)){if(i instanceof Array||i&&i.push&&u(i)){for(o=o||"normal",a=a||0,l=s,h=i.length,c=0;c<h;c++)u(f=i[c])&&(f=new r({tweens:f})),this.add(f,l),"string"!=typeof f&&"function"!=typeof f&&("sequence"===o?l=f._startTime+f.totalDuration()/f._timeScale:"start"===o&&(f._startTime-=f.delay())),l+=a;return this._uncache(!0)}if("string"==typeof i)return this.addLabel(i,s);if("function"!=typeof i)throw"Cannot add "+i+" into the timeline; it is not a tween, timeline, function, or string.";i=n.delayedCall(0,i)}if(e.prototype.add.call(this,i,s),(this._gc||this._time===this._duration)&&!this._paused&&this._duration<this.duration())for(p=this,d=p.rawTime()>i._startTime;p._timeline;)d&&p._timeline.smoothChildTiming?p.totalTime(p._totalTime,!0):p._gc&&p._enabled(!0,!1),p=p._timeline;return this},g.remove=function(e){if(e instanceof t){this._remove(e,!1);var i=e._timeline=e.vars.useFrames?t._rootFramesTimeline:t._rootTimeline;return e._startTime=(e._paused?e._pauseTime:i._time)-(e._reversed?e.totalDuration()-e._totalTime:e._totalTime)/e._timeScale,this}if(e instanceof Array||e&&e.push&&u(e)){for(var n=e.length;--n>-1;)this.remove(e[n]);return this}return"string"==typeof e?this.removeLabel(e):this.kill(null,e)},g._remove=function(t,i){e.prototype._remove.call(this,t,i);var n=this._last;return n?this._time>n._startTime+n._totalDuration/n._timeScale&&(this._time=this.duration(),this._totalTime=this._totalDuration):this._time=this._totalTime=this._duration=this._totalDuration=0,this},g.append=function(t,e){return this.add(t,this._parseTimeOrLabel(null,e,!0,t))},g.insert=g.insertMultiple=function(t,e,i,n){return this.add(t,e||0,i,n)},g.appendMultiple=function(t,e,i,n){return this.add(t,this._parseTimeOrLabel(null,e,!0,t),i,n)},g.addLabel=function(t,e){return this._labels[t]=this._parseTimeOrLabel(e),this},g.addPause=function(t,e,i,r){var s=n.delayedCall(0,_,i,r||this);return s.vars.onComplete=s.vars.onReverseComplete=e,s.data="isPause",this._hasPause=!0,this.add(s,t)},g.removeLabel=function(t){return delete this._labels[t],this},g.getLabelTime=function(t){return null!=this._labels[t]?this._labels[t]:-1},g._parseTimeOrLabel=function(e,i,n,r){var s;if(r instanceof t&&r.timeline===this)this.remove(r);else if(r&&(r instanceof Array||r.push&&u(r)))for(s=r.length;--s>-1;)r[s]instanceof t&&r[s].timeline===this&&this.remove(r[s]);if("string"==typeof i)return this._parseTimeOrLabel(i,n&&"number"==typeof e&&null==this._labels[i]?e-this.duration():0,n);if(i=i||0,"string"!=typeof e||!isNaN(e)&&null==this._labels[e])null==e&&(e=this.duration());else{if(s=e.indexOf("="),s===-1)return null==this._labels[e]?n?this._labels[e]=this.duration()+i:i:this._labels[e]+i;i=parseInt(e.charAt(s-1)+"1",10)*Number(e.substr(s+1)),e=s>1?this._parseTimeOrLabel(e.substr(0,s-1),0,n):this.duration()}return Number(e)+i},g.seek=function(t,e){return this.totalTime("number"==typeof t?t:this._parseTimeOrLabel(t),e!==!1)},g.stop=function(){return this.paused(!0)},g.gotoAndPlay=function(t,e){return this.play(t,e)},g.gotoAndStop=function(t,e){return this.pause(t,e)},g.render=function(t,e,i){this._gc&&this._enabled(!0,!1);var n,r,o,a,l,u,f,p=this._dirty?this.totalDuration():this._totalDuration,d=this._time,_=this._startTime,m=this._timeScale,g=this._paused;if(t>=p-1e-7)this._totalTime=this._time=p,this._reversed||this._hasPausedChild()||(r=!0,a="onComplete",l=!!this._timeline.autoRemoveChildren,0===this._duration&&(t<=0&&t>=-1e-7||this._rawPrevTime<0||this._rawPrevTime===s)&&this._rawPrevTime!==t&&this._first&&(l=!0,this._rawPrevTime>s&&(a="onReverseComplete"))),this._rawPrevTime=this._duration||!e||t||this._rawPrevTime===t?t:s,t=p+1e-4;else if(t<1e-7)if(this._totalTime=this._time=0,(0!==d||0===this._duration&&this._rawPrevTime!==s&&(this._rawPrevTime>0||t<0&&this._rawPrevTime>=0))&&(a="onReverseComplete",r=this._reversed),t<0)this._active=!1,this._timeline.autoRemoveChildren&&this._reversed?(l=r=!0,a="onReverseComplete"):this._rawPrevTime>=0&&this._first&&(l=!0),this._rawPrevTime=t;else{if(this._rawPrevTime=this._duration||!e||t||this._rawPrevTime===t?t:s,0===t&&r)for(n=this._first;n&&0===n._startTime;)n._duration||(r=!1),n=n._next;t=0,this._initted||(l=!0)}else{if(this._hasPause&&!this._forcingPlayhead&&!e){if(t>=d)for(n=this._first;n&&n._startTime<=t&&!u;)n._duration||"isPause"!==n.data||n.ratio||0===n._startTime&&0===this._rawPrevTime||(u=n),n=n._next;else for(n=this._last;n&&n._startTime>=t&&!u;)n._duration||"isPause"===n.data&&n._rawPrevTime>0&&(u=n),n=n._prev;u&&(this._time=t=u._startTime,this._totalTime=t+this._cycle*(this._totalDuration+this._repeatDelay))}this._totalTime=this._time=this._rawPrevTime=t}if(this._time!==d&&this._first||i||l||u){if(this._initted||(this._initted=!0),this._active||!this._paused&&this._time!==d&&t>0&&(this._active=!0),0===d&&this.vars.onStart&&(0===this._time&&this._duration||e||this._callback("onStart")),f=this._time,f>=d)for(n=this._first;n&&(o=n._next,f===this._time&&(!this._paused||g));)(n._active||n._startTime<=f&&!n._paused&&!n._gc)&&(u===n&&this.pause(),n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)),n=o;else for(n=this._last;n&&(o=n._prev,f===this._time&&(!this._paused||g));){if(n._active||n._startTime<=d&&!n._paused&&!n._gc){if(u===n){for(u=n._prev;u&&u.endTime()>this._time;)u.render(u._reversed?u.totalDuration()-(t-u._startTime)*u._timeScale:(t-u._startTime)*u._timeScale,e,i),u=u._prev;u=null,this.pause()}n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)}n=o}this._onUpdate&&(e||(h.length&&c(),this._callback("onUpdate"))),a&&(this._gc||_!==this._startTime&&m===this._timeScale||(0===this._time||p>=this.totalDuration())&&(r&&(h.length&&c(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[a]&&this._callback(a)))}},g._hasPausedChild=function(){for(var t=this._first;t;){if(t._paused||t instanceof r&&t._hasPausedChild())return!0;t=t._next}return!1},g.getChildren=function(t,e,i,r){r=r||-9999999999;for(var s=[],o=this._first,a=0;o;)o._startTime<r||(o instanceof n?e!==!1&&(s[a++]=o):(i!==!1&&(s[a++]=o),t!==!1&&(s=s.concat(o.getChildren(!0,e,i)),a=s.length))),o=o._next;return s},g.getTweensOf=function(t,e){var i,r,s=this._gc,o=[],a=0;for(s&&this._enabled(!0,!0),i=n.getTweensOf(t),r=i.length;--r>-1;)(i[r].timeline===this||e&&this._contains(i[r]))&&(o[a++]=i[r]);return s&&this._enabled(!1,!0),o},g.recent=function(){return this._recent},g._contains=function(t){for(var e=t.timeline;e;){if(e===this)return!0;e=e.timeline}return!1},g.shiftChildren=function(t,e,i){i=i||0;for(var n,r=this._first,s=this._labels;r;)r._startTime>=i&&(r._startTime+=t),r=r._next;if(e)for(n in s)s[n]>=i&&(s[n]+=t);return this._uncache(!0)},g._kill=function(t,e){if(!t&&!e)return this._enabled(!1,!1);for(var i=e?this.getTweensOf(e):this.getChildren(!0,!0,!1),n=i.length,r=!1;--n>-1;)i[n]._kill(t,e)&&(r=!0);return r},g.clear=function(t){var e=this.getChildren(!1,!0,!0),i=e.length;for(this._time=this._totalTime=0;--i>-1;)e[i]._enabled(!1,!1);return t!==!1&&(this._labels={}),this._uncache(!0)},g.invalidate=function(){for(var e=this._first;e;)e.invalidate(),e=e._next;return t.prototype.invalidate.call(this)},g._enabled=function(t,i){if(t===this._gc)for(var n=this._first;n;)n._enabled(t,!0),n=n._next;return e.prototype._enabled.call(this,t,i)},g.totalTime=function(e,i,n){this._forcingPlayhead=!0;var r=t.prototype.totalTime.apply(this,arguments);return this._forcingPlayhead=!1,r},g.duration=function(t){return arguments.length?(0!==this.duration()&&0!==t&&this.timeScale(this._duration/t),this):(this._dirty&&this.totalDuration(),this._duration)},g.totalDuration=function(t){if(!arguments.length){if(this._dirty){for(var e,i,n=0,r=this._last,s=999999999999;r;)e=r._prev,r._dirty&&r.totalDuration(),r._startTime>s&&this._sortChildren&&!r._paused?this.add(r,r._startTime-r._delay):s=r._startTime,r._startTime<0&&!r._paused&&(n-=r._startTime,this._timeline.smoothChildTiming&&(this._startTime+=r._startTime/this._timeScale),this.shiftChildren(-r._startTime,!1,-9999999999),s=0),i=r._startTime+r._totalDuration/r._timeScale,i>n&&(n=i),r=e;this._duration=this._totalDuration=n,this._dirty=!1}return this._totalDuration}return t&&this.totalDuration()?this.timeScale(this._totalDuration/t):this},g.paused=function(e){if(!e)for(var i=this._first,n=this._time;i;)i._startTime===n&&"isPause"===i.data&&(i._rawPrevTime=0),i=i._next;return t.prototype.paused.apply(this,arguments)},g.usesFrames=function(){for(var e=this._timeline;e._timeline;)e=e._timeline;return e===t._rootFramesTimeline},g.rawTime=function(){return this._paused?this._totalTime:(this._timeline.rawTime()-this._startTime)*this._timeScale},r},!0),i._gsDefine("TimelineMax",["TimelineLite","TweenLite","easing.Ease"],function(t,e,n){var r=function(e){t.call(this,e),this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._cycle=0,this._yoyo=this.vars.yoyo===!0,this._dirty=!0},s=1e-10,o=e._internals,a=o.lazyTweens,l=o.lazyRender,u=i._gsDefine.globals,h=new n(null,null,1,0),c=r.prototype=new t;return c.constructor=r,c.kill()._gc=!1,r.version="1.19.0",c.invalidate=function(){return this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._uncache(!0),t.prototype.invalidate.call(this)},c.addCallback=function(t,i,n,r){return this.add(e.delayedCall(0,t,n,r),i)},c.removeCallback=function(t,e){if(t)if(null==e)this._kill(null,t);else for(var i=this.getTweensOf(t,!1),n=i.length,r=this._parseTimeOrLabel(e);--n>-1;)i[n]._startTime===r&&i[n]._enabled(!1,!1);return this},c.removePause=function(e){return this.removeCallback(t._internals.pauseCallback,e)},c.tweenTo=function(t,i){i=i||{};var n,r,s,o={ease:h,useFrames:this.usesFrames(),immediateRender:!1},a=i.repeat&&u.TweenMax||e;for(r in i)o[r]=i[r];return o.time=this._parseTimeOrLabel(t),n=Math.abs(Number(o.time)-this._time)/this._timeScale||.001,s=new a(this,n,o),o.onStart=function(){s.target.paused(!0),s.vars.time!==s.target.time()&&n===s.duration()&&s.duration(Math.abs(s.vars.time-s.target.time())/s.target._timeScale),i.onStart&&s._callback("onStart")},s},c.tweenFromTo=function(t,e,i){i=i||{},t=this._parseTimeOrLabel(t),i.startAt={onComplete:this.seek,onCompleteParams:[t],callbackScope:this},i.immediateRender=i.immediateRender!==!1;var n=this.tweenTo(e,i);return n.duration(Math.abs(n.vars.time-t)/this._timeScale||.001)},c.render=function(t,e,i){this._gc&&this._enabled(!0,!1);var n,r,o,u,h,c,f,p,d=this._dirty?this.totalDuration():this._totalDuration,_=this._duration,m=this._time,g=this._totalTime,v=this._startTime,y=this._timeScale,T=this._rawPrevTime,x=this._paused,w=this._cycle;if(t>=d-1e-7)this._locked||(this._totalTime=d,this._cycle=this._repeat),this._reversed||this._hasPausedChild()||(r=!0,u="onComplete",h=!!this._timeline.autoRemoveChildren,0===this._duration&&(t<=0&&t>=-1e-7||T<0||T===s)&&T!==t&&this._first&&(h=!0,T>s&&(u="onReverseComplete"))),this._rawPrevTime=this._duration||!e||t||this._rawPrevTime===t?t:s,this._yoyo&&0!==(1&this._cycle)?this._time=t=0:(this._time=_,t=_+1e-4);else if(t<1e-7)if(this._locked||(this._totalTime=this._cycle=0),this._time=0,(0!==m||0===_&&T!==s&&(T>0||t<0&&T>=0)&&!this._locked)&&(u="onReverseComplete",r=this._reversed),t<0)this._active=!1,this._timeline.autoRemoveChildren&&this._reversed?(h=r=!0,u="onReverseComplete"):T>=0&&this._first&&(h=!0),this._rawPrevTime=t;else{if(this._rawPrevTime=_||!e||t||this._rawPrevTime===t?t:s,0===t&&r)for(n=this._first;n&&0===n._startTime;)n._duration||(r=!1),n=n._next;t=0,this._initted||(h=!0)}else if(0===_&&T<0&&(h=!0),this._time=this._rawPrevTime=t,this._locked||(this._totalTime=t,0!==this._repeat&&(c=_+this._repeatDelay,this._cycle=this._totalTime/c>>0,0!==this._cycle&&this._cycle===this._totalTime/c&&g<=t&&this._cycle--,this._time=this._totalTime-this._cycle*c,this._yoyo&&0!==(1&this._cycle)&&(this._time=_-this._time),this._time>_?(this._time=_,t=_+1e-4):this._time<0?this._time=t=0:t=this._time)),this._hasPause&&!this._forcingPlayhead&&!e){if(t=this._time,t>=m)for(n=this._first;n&&n._startTime<=t&&!f;)n._duration||"isPause"!==n.data||n.ratio||0===n._startTime&&0===this._rawPrevTime||(f=n),n=n._next;else for(n=this._last;n&&n._startTime>=t&&!f;)n._duration||"isPause"===n.data&&n._rawPrevTime>0&&(f=n),n=n._prev;f&&(this._time=t=f._startTime,this._totalTime=t+this._cycle*(this._totalDuration+this._repeatDelay))}if(this._cycle!==w&&!this._locked){var b=this._yoyo&&0!==(1&w),P=b===(this._yoyo&&0!==(1&this._cycle)),C=this._totalTime,k=this._cycle,S=this._rawPrevTime,A=this._time;if(this._totalTime=w*_,this._cycle<w?b=!b:this._totalTime+=_,this._time=m,this._rawPrevTime=0===_?T-1e-4:T,this._cycle=w,this._locked=!0,m=b?0:_,this.render(m,e,0===_),e||this._gc||this.vars.onRepeat&&this._callback("onRepeat"),m!==this._time)return;if(P&&(m=b?_+1e-4:-1e-4,this.render(m,!0,!1)),this._locked=!1,this._paused&&!x)return;this._time=A,this._totalTime=C,this._cycle=k,this._rawPrevTime=S}if(!(this._time!==m&&this._first||i||h||f))return void(g!==this._totalTime&&this._onUpdate&&(e||this._callback("onUpdate")));if(this._initted||(this._initted=!0),this._active||!this._paused&&this._totalTime!==g&&t>0&&(this._active=!0),0===g&&this.vars.onStart&&(0===this._totalTime&&this._totalDuration||e||this._callback("onStart")),p=this._time,p>=m)for(n=this._first;n&&(o=n._next,p===this._time&&(!this._paused||x));)(n._active||n._startTime<=this._time&&!n._paused&&!n._gc)&&(f===n&&this.pause(),n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)),n=o;else for(n=this._last;n&&(o=n._prev,p===this._time&&(!this._paused||x));){if(n._active||n._startTime<=m&&!n._paused&&!n._gc){if(f===n){for(f=n._prev;f&&f.endTime()>this._time;)f.render(f._reversed?f.totalDuration()-(t-f._startTime)*f._timeScale:(t-f._startTime)*f._timeScale,e,i),f=f._prev;f=null,this.pause()}n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)}n=o}this._onUpdate&&(e||(a.length&&l(),this._callback("onUpdate"))),u&&(this._locked||this._gc||v!==this._startTime&&y===this._timeScale||(0===this._time||d>=this.totalDuration())&&(r&&(a.length&&l(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[u]&&this._callback(u)))},c.getActive=function(t,e,i){null==t&&(t=!0),null==e&&(e=!0),null==i&&(i=!1);var n,r,s=[],o=this.getChildren(t,e,i),a=0,l=o.length;for(n=0;n<l;n++)r=o[n],r.isActive()&&(s[a++]=r);return s},c.getLabelAfter=function(t){t||0!==t&&(t=this._time);var e,i=this.getLabelsArray(),n=i.length;for(e=0;e<n;e++)if(i[e].time>t)return i[e].name;return null},c.getLabelBefore=function(t){null==t&&(t=this._time);for(var e=this.getLabelsArray(),i=e.length;--i>-1;)if(e[i].time<t)return e[i].name;return null},c.getLabelsArray=function(){var t,e=[],i=0;for(t in this._labels)e[i++]={time:this._labels[t],name:t};return e.sort(function(t,e){return t.time-e.time}),e},c.progress=function(t,e){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!==(1&this._cycle)?1-t:t)+this._cycle*(this._duration+this._repeatDelay),e):this._time/this.duration()},c.totalProgress=function(t,e){return arguments.length?this.totalTime(this.totalDuration()*t,e):this._totalTime/this.totalDuration()},c.totalDuration=function(e){return arguments.length?this._repeat!==-1&&e?this.timeScale(this.totalDuration()/e):this:(this._dirty&&(t.prototype.totalDuration.call(this),this._totalDuration=this._repeat===-1?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat),this._totalDuration)},c.time=function(t,e){return arguments.length?(this._dirty&&this.totalDuration(),t>this._duration&&(t=this._duration),this._yoyo&&0!==(1&this._cycle)?t=this._duration-t+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(t+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(t,e)):this._time},c.repeat=function(t){return arguments.length?(this._repeat=t,this._uncache(!0)):this._repeat},c.repeatDelay=function(t){return arguments.length?(this._repeatDelay=t,this._uncache(!0)):this._repeatDelay},c.yoyo=function(t){return arguments.length?(this._yoyo=t,this):this._yoyo},c.currentLabel=function(t){return arguments.length?this.seek(t,!0):this.getLabelBefore(this._time+1e-8)},r},!0),function(){var t=180/Math.PI,e=[],n=[],r=[],s={},o=i._gsDefine.globals,a=function(t,e,i,n){i===n&&(i=n-(n-e)/1e6),t===e&&(e=t+(i-t)/1e6),this.a=t,this.b=e,this.c=i,this.d=n,this.da=n-t,this.ca=i-t,this.ba=e-t},l=",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,",u=function(t,e,i,n){var r={a:t},s={},o={},a={c:n},l=(t+e)/2,u=(e+i)/2,h=(i+n)/2,c=(l+u)/2,f=(u+h)/2,p=(f-c)/8;
return r.b=l+(t-l)/4,s.b=c+p,r.c=s.a=(r.b+s.b)/2,s.c=o.a=(c+f)/2,o.b=f-p,a.b=h+(n-h)/4,o.c=a.a=(o.b+a.b)/2,[r,s,o,a]},h=function(t,i,s,o,a){var l,h,c,f,p,d,_,m,g,v,y,T,x,w=t.length-1,b=0,P=t[0].a;for(l=0;l<w;l++)p=t[b],h=p.a,c=p.d,f=t[b+1].d,a?(y=e[l],T=n[l],x=(T+y)*i*.25/(o?.5:r[l]||.5),d=c-(c-h)*(o?.5*i:0!==y?x/y:0),_=c+(f-c)*(o?.5*i:0!==T?x/T:0),m=c-(d+((_-d)*(3*y/(y+T)+.5)/4||0))):(d=c-(c-h)*i*.5,_=c+(f-c)*i*.5,m=c-(d+_)/2),d+=m,_+=m,p.c=g=d,0!==l?p.b=P:p.b=P=p.a+.6*(p.c-p.a),p.da=c-h,p.ca=g-h,p.ba=P-h,s?(v=u(h,P,g,c),t.splice(b,1,v[0],v[1],v[2],v[3]),b+=4):b++,P=_;p=t[b],p.b=P,p.c=P+.4*(p.d-P),p.da=p.d-p.a,p.ca=p.c-p.a,p.ba=P-p.a,s&&(v=u(p.a,P,p.c,p.d),t.splice(b,1,v[0],v[1],v[2],v[3]))},c=function(t,i,r,s){var o,l,u,h,c,f,p=[];if(s)for(t=[s].concat(t),l=t.length;--l>-1;)"string"==typeof(f=t[l][i])&&"="===f.charAt(1)&&(t[l][i]=s[i]+Number(f.charAt(0)+f.substr(2)));if(o=t.length-2,o<0)return p[0]=new a(t[0][i],0,0,t[o<-1?0:1][i]),p;for(l=0;l<o;l++)u=t[l][i],h=t[l+1][i],p[l]=new a(u,0,0,h),r&&(c=t[l+2][i],e[l]=(e[l]||0)+(h-u)*(h-u),n[l]=(n[l]||0)+(c-h)*(c-h));return p[l]=new a(t[l][i],0,0,t[l+1][i]),p},f=function(t,i,o,a,u,f){var p,d,_,m,g,v,y,T,x={},w=[],b=f||t[0];u="string"==typeof u?","+u+",":l,null==i&&(i=1);for(d in t[0])w.push(d);if(t.length>1){for(T=t[t.length-1],y=!0,p=w.length;--p>-1;)if(d=w[p],Math.abs(b[d]-T[d])>.05){y=!1;break}y&&(t=t.concat(),f&&t.unshift(f),t.push(t[1]),f=t[t.length-3])}for(e.length=n.length=r.length=0,p=w.length;--p>-1;)d=w[p],s[d]=u.indexOf(","+d+",")!==-1,x[d]=c(t,d,s[d],f);for(p=e.length;--p>-1;)e[p]=Math.sqrt(e[p]),n[p]=Math.sqrt(n[p]);if(!a){for(p=w.length;--p>-1;)if(s[d])for(_=x[w[p]],v=_.length-1,m=0;m<v;m++)g=_[m+1].da/n[m]+_[m].da/e[m]||0,r[m]=(r[m]||0)+g*g;for(p=r.length;--p>-1;)r[p]=Math.sqrt(r[p])}for(p=w.length,m=o?4:1;--p>-1;)d=w[p],_=x[d],h(_,i,o,a,s[d]),y&&(_.splice(0,m),_.splice(_.length-m,m));return x},p=function(t,e,i){e=e||"soft";var n,r,s,o,l,u,h,c,f,p,d,_={},m="cubic"===e?3:2,g="soft"===e,v=[];if(g&&i&&(t=[i].concat(t)),null==t||t.length<m+1)throw"invalid Bezier data";for(f in t[0])v.push(f);for(u=v.length;--u>-1;){for(f=v[u],_[f]=l=[],p=0,c=t.length,h=0;h<c;h++)n=null==i?t[h][f]:"string"==typeof(d=t[h][f])&&"="===d.charAt(1)?i[f]+Number(d.charAt(0)+d.substr(2)):Number(d),g&&h>1&&h<c-1&&(l[p++]=(n+l[p-2])/2),l[p++]=n;for(c=p-m+1,p=0,h=0;h<c;h+=m)n=l[h],r=l[h+1],s=l[h+2],o=2===m?0:l[h+3],l[p++]=d=3===m?new a(n,r,s,o):new a(n,(2*r+n)/3,(2*r+s)/3,s);l.length=p}return _},d=function(t,e,i){for(var n,r,s,o,a,l,u,h,c,f,p,d=1/i,_=t.length;--_>-1;)for(f=t[_],s=f.a,o=f.d-s,a=f.c-s,l=f.b-s,n=r=0,h=1;h<=i;h++)u=d*h,c=1-u,n=r-(r=(u*u*o+3*c*(u*a+c*l))*u),p=_*i+h-1,e[p]=(e[p]||0)+n*n},_=function(t,e){e=e>>0||6;var i,n,r,s,o=[],a=[],l=0,u=0,h=e-1,c=[],f=[];for(i in t)d(t[i],o,e);for(r=o.length,n=0;n<r;n++)l+=Math.sqrt(o[n]),s=n%e,f[s]=l,s===h&&(u+=l,s=n/e>>0,c[s]=f,a[s]=u,l=0,f=[]);return{length:u,lengths:a,segments:c}},m=i._gsDefine.plugin({propName:"bezier",priority:-1,version:"1.3.7",API:2,global:!0,init:function(t,e,i){this._target=t,e instanceof Array&&(e={values:e}),this._func={},this._mod={},this._props=[],this._timeRes=null==e.timeResolution?6:parseInt(e.timeResolution,10);var n,r,s,o,a,l=e.values||[],u={},h=l[0],c=e.autoRotate||i.vars.orientToBezier;this._autoRotate=c?c instanceof Array?c:[["x","y","rotation",c===!0?0:Number(c)||0]]:null;for(n in h)this._props.push(n);for(s=this._props.length;--s>-1;)n=this._props[s],this._overwriteProps.push(n),r=this._func[n]="function"==typeof t[n],u[n]=r?t[n.indexOf("set")||"function"!=typeof t["get"+n.substr(3)]?n:"get"+n.substr(3)]():parseFloat(t[n]),a||u[n]!==l[0][n]&&(a=u);if(this._beziers="cubic"!==e.type&&"quadratic"!==e.type&&"soft"!==e.type?f(l,isNaN(e.curviness)?1:e.curviness,!1,"thruBasic"===e.type,e.correlate,a):p(l,e.type,u),this._segCount=this._beziers[n].length,this._timeRes){var d=_(this._beziers,this._timeRes);this._length=d.length,this._lengths=d.lengths,this._segments=d.segments,this._l1=this._li=this._s1=this._si=0,this._l2=this._lengths[0],this._curSeg=this._segments[0],this._s2=this._curSeg[0],this._prec=1/this._curSeg.length}if(c=this._autoRotate)for(this._initialRotations=[],c[0]instanceof Array||(this._autoRotate=c=[c]),s=c.length;--s>-1;){for(o=0;o<3;o++)n=c[s][o],this._func[n]="function"==typeof t[n]&&t[n.indexOf("set")||"function"!=typeof t["get"+n.substr(3)]?n:"get"+n.substr(3)];n=c[s][2],this._initialRotations[s]=(this._func[n]?this._func[n].call(this._target):this._target[n])||0,this._overwriteProps.push(n)}return this._startRatio=i.vars.runBackwards?1:0,!0},set:function(e){var i,n,r,s,o,a,l,u,h,c,f=this._segCount,p=this._func,d=this._target,_=e!==this._startRatio;if(this._timeRes){if(h=this._lengths,c=this._curSeg,e*=this._length,r=this._li,e>this._l2&&r<f-1){for(u=f-1;r<u&&(this._l2=h[++r])<=e;);this._l1=h[r-1],this._li=r,this._curSeg=c=this._segments[r],this._s2=c[this._s1=this._si=0]}else if(e<this._l1&&r>0){for(;r>0&&(this._l1=h[--r])>=e;);0===r&&e<this._l1?this._l1=0:r++,this._l2=h[r],this._li=r,this._curSeg=c=this._segments[r],this._s1=c[(this._si=c.length-1)-1]||0,this._s2=c[this._si]}if(i=r,e-=this._l1,r=this._si,e>this._s2&&r<c.length-1){for(u=c.length-1;r<u&&(this._s2=c[++r])<=e;);this._s1=c[r-1],this._si=r}else if(e<this._s1&&r>0){for(;r>0&&(this._s1=c[--r])>=e;);0===r&&e<this._s1?this._s1=0:r++,this._s2=c[r],this._si=r}a=(r+(e-this._s1)/(this._s2-this._s1))*this._prec||0}else i=e<0?0:e>=1?f-1:f*e>>0,a=(e-i*(1/f))*f;for(n=1-a,r=this._props.length;--r>-1;)s=this._props[r],o=this._beziers[s][i],l=(a*a*o.da+3*n*(a*o.ca+n*o.ba))*a+o.a,this._mod[s]&&(l=this._mod[s](l,d)),p[s]?d[s](l):d[s]=l;if(this._autoRotate){var m,g,v,y,T,x,w,b=this._autoRotate;for(r=b.length;--r>-1;)s=b[r][2],x=b[r][3]||0,w=b[r][4]===!0?1:t,o=this._beziers[b[r][0]],m=this._beziers[b[r][1]],o&&m&&(o=o[i],m=m[i],g=o.a+(o.b-o.a)*a,y=o.b+(o.c-o.b)*a,g+=(y-g)*a,y+=(o.c+(o.d-o.c)*a-y)*a,v=m.a+(m.b-m.a)*a,T=m.b+(m.c-m.b)*a,v+=(T-v)*a,T+=(m.c+(m.d-m.c)*a-T)*a,l=_?Math.atan2(T-v,y-g)*w+x:this._initialRotations[r],this._mod[s]&&(l=this._mod[s](l,d)),p[s]?d[s](l):d[s]=l)}}}),g=m.prototype;m.bezierThrough=f,m.cubicToQuadratic=u,m._autoCSS=!0,m.quadraticToCubic=function(t,e,i){return new a(t,(2*e+t)/3,(2*e+i)/3,i)},m._cssRegister=function(){var t=o.CSSPlugin;if(t){var e=t._internals,i=e._parseToProxy,n=e._setPluginRatio,r=e.CSSPropTween;e._registerComplexSpecialProp("bezier",{parser:function(t,e,s,o,a,l){e instanceof Array&&(e={values:e}),l=new m;var u,h,c,f=e.values,p=f.length-1,d=[],_={};if(p<0)return a;for(u=0;u<=p;u++)c=i(t,f[u],o,a,l,p!==u),d[u]=c.end;for(h in e)_[h]=e[h];return _.values=d,a=new r(t,"bezier",0,0,c.pt,2),a.data=c,a.plugin=l,a.setRatio=n,0===_.autoRotate&&(_.autoRotate=!0),!_.autoRotate||_.autoRotate instanceof Array||(u=_.autoRotate===!0?0:Number(_.autoRotate),_.autoRotate=null!=c.end.left?[["left","top","rotation",u,!1]]:null!=c.end.x&&[["x","y","rotation",u,!1]]),_.autoRotate&&(o._transform||o._enableTransforms(!1),c.autoRotate=o._target._gsTransform,c.proxy.rotation=c.autoRotate.rotation||0,o._overwriteProps.push("rotation")),l._onInitTween(c.proxy,_,o._tween),a}})}},g._mod=function(t){for(var e,i=this._overwriteProps,n=i.length;--n>-1;)e=t[i[n]],e&&"function"==typeof e&&(this._mod[i[n]]=e)},g._kill=function(t){var e,i,n=this._props;for(e in this._beziers)if(e in t)for(delete this._beziers[e],delete this._func[e],i=n.length;--i>-1;)n[i]===e&&n.splice(i,1);if(n=this._autoRotate)for(i=n.length;--i>-1;)t[n[i][2]]&&n.splice(i,1);return this._super._kill.call(this,t)}}(),i._gsDefine("plugins.CSSPlugin",["plugins.TweenPlugin","TweenLite"],function(t,e){var n,r,s,o,a=function(){t.call(this,"css"),this._overwriteProps.length=0,this.setRatio=a.prototype.setRatio},l=i._gsDefine.globals,u={},h=a.prototype=new t("css");h.constructor=a,a.version="1.19.0",a.API=2,a.defaultTransformPerspective=0,a.defaultSkewType="compensated",a.defaultSmoothOrigin=!0,h="px",a.suffixMap={top:h,right:h,bottom:h,left:h,width:h,height:h,fontSize:h,padding:h,margin:h,perspective:h,lineHeight:""};var c,f,p,d,_,m,g,v,y=/(?:\-|\.|\b)(\d|\.|e\-)+/g,T=/(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g,x=/(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi,w=/(?![+-]?\d*\.?\d+|[+-]|e[+-]\d+)[^0-9]/g,b=/(?:\d|\-|\+|=|#|\.)*/g,P=/opacity *= *([^)]*)/i,C=/opacity:([^;]*)/i,k=/alpha\(opacity *=.+?\)/i,S=/^(rgb|hsl)/,A=/([A-Z])/g,D=/-([a-z])/gi,O=/(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi,R=function(t,e){return e.toUpperCase()},j=/(?:Left|Right|Width)/i,E=/(M11|M12|M21|M22)=[\d\-\.e]+/gi,L=/progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i,M=/,(?=[^\)]*(?:\(|$))/gi,F=/[\s,\(]/i,N=Math.PI/180,q=180/Math.PI,I={},z=document,B=function(t){return z.createElementNS?z.createElementNS("http://www.w3.org/1999/xhtml",t):z.createElement(t)},H=B("div"),X=B("img"),W=a._internals={_specialProps:u},U=navigator.userAgent,Y=function(){var t=U.indexOf("Android"),e=B("a");return p=U.indexOf("Safari")!==-1&&U.indexOf("Chrome")===-1&&(t===-1||Number(U.substr(t+8,1))>3),_=p&&Number(U.substr(U.indexOf("Version/")+8,1))<6,d=U.indexOf("Firefox")!==-1,(/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(U)||/Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(U))&&(m=parseFloat(RegExp.$1)),!!e&&(e.style.cssText="top:1px;opacity:.55;",/^0.55/.test(e.style.opacity))}(),$=function(t){return P.test("string"==typeof t?t:(t.currentStyle?t.currentStyle.filter:t.style.filter)||"")?parseFloat(RegExp.$1)/100:1},V=function(t){window.console&&console.log(t)},G="",Q="",K=function(t,e){e=e||H;var i,n,r=e.style;if(void 0!==r[t])return t;for(t=t.charAt(0).toUpperCase()+t.substr(1),i=["O","Moz","ms","Ms","Webkit"],n=5;--n>-1&&void 0===r[i[n]+t];);return n>=0?(Q=3===n?"ms":i[n],G="-"+Q.toLowerCase()+"-",Q+t):null},Z=z.defaultView?z.defaultView.getComputedStyle:function(){},J=a.getStyle=function(t,e,i,n,r){var s;return Y||"opacity"!==e?(!n&&t.style[e]?s=t.style[e]:(i=i||Z(t))?s=i[e]||i.getPropertyValue(e)||i.getPropertyValue(e.replace(A,"-$1").toLowerCase()):t.currentStyle&&(s=t.currentStyle[e]),null==r||s&&"none"!==s&&"auto"!==s&&"auto auto"!==s?s:r):$(t)},tt=W.convertToPixels=function(t,i,n,r,s){if("px"===r||!r)return n;if("auto"===r||!n)return 0;var o,l,u,h=j.test(i),c=t,f=H.style,p=n<0,d=1===n;if(p&&(n=-n),d&&(n*=100),"%"===r&&i.indexOf("border")!==-1)o=n/100*(h?t.clientWidth:t.clientHeight);else{if(f.cssText="border:0 solid red;position:"+J(t,"position")+";line-height:0;","%"!==r&&c.appendChild&&"v"!==r.charAt(0)&&"rem"!==r)f[h?"borderLeftWidth":"borderTopWidth"]=n+r;else{if(c=t.parentNode||z.body,l=c._gsCache,u=e.ticker.frame,l&&h&&l.time===u)return l.width*n/100;f[h?"width":"height"]=n+r}c.appendChild(H),o=parseFloat(H[h?"offsetWidth":"offsetHeight"]),c.removeChild(H),h&&"%"===r&&a.cacheWidths!==!1&&(l=c._gsCache=c._gsCache||{},l.time=u,l.width=o/n*100),0!==o||s||(o=tt(t,i,n,r,!0))}return d&&(o/=100),p?-o:o},et=W.calculateOffset=function(t,e,i){if("absolute"!==J(t,"position",i))return 0;var n="left"===e?"Left":"Top",r=J(t,"margin"+n,i);return t["offset"+n]-(tt(t,e,parseFloat(r),r.replace(b,""))||0)},it=function(t,e){var i,n,r,s={};if(e=e||Z(t,null))if(i=e.length)for(;--i>-1;)r=e[i],r.indexOf("-transform")!==-1&&Dt!==r||(s[r.replace(D,R)]=e.getPropertyValue(r));else for(i in e)i.indexOf("Transform")!==-1&&At!==i||(s[i]=e[i]);else if(e=t.currentStyle||t.style)for(i in e)"string"==typeof i&&void 0===s[i]&&(s[i.replace(D,R)]=e[i]);return Y||(s.opacity=$(t)),n=Ht(t,e,!1),s.rotation=n.rotation,s.skewX=n.skewX,s.scaleX=n.scaleX,s.scaleY=n.scaleY,s.x=n.x,s.y=n.y,Rt&&(s.z=n.z,s.rotationX=n.rotationX,s.rotationY=n.rotationY,s.scaleZ=n.scaleZ),s.filters&&delete s.filters,s},nt=function(t,e,i,n,r){var s,o,a,l={},u=t.style;for(o in i)"cssText"!==o&&"length"!==o&&isNaN(o)&&(e[o]!==(s=i[o])||r&&r[o])&&o.indexOf("Origin")===-1&&("number"!=typeof s&&"string"!=typeof s||(l[o]="auto"!==s||"left"!==o&&"top"!==o?""!==s&&"auto"!==s&&"none"!==s||"string"!=typeof e[o]||""===e[o].replace(w,"")?s:0:et(t,o),void 0!==u[o]&&(a=new vt(u,o,u[o],a))));if(n)for(o in n)"className"!==o&&(l[o]=n[o]);return{difs:l,firstMPT:a}},rt={width:["Left","Right"],height:["Top","Bottom"]},st=["marginLeft","marginRight","marginTop","marginBottom"],ot=function(t,e,i){if("svg"===(t.nodeName+"").toLowerCase())return(i||Z(t))[e]||0;if(t.getBBox&&It(t))return t.getBBox()[e]||0;var n=parseFloat("width"===e?t.offsetWidth:t.offsetHeight),r=rt[e],s=r.length;for(i=i||Z(t,null);--s>-1;)n-=parseFloat(J(t,"padding"+r[s],i,!0))||0,n-=parseFloat(J(t,"border"+r[s]+"Width",i,!0))||0;return n},at=function(t,e){if("contain"===t||"auto"===t||"auto auto"===t)return t+" ";null!=t&&""!==t||(t="0 0");var i,n=t.split(" "),r=t.indexOf("left")!==-1?"0%":t.indexOf("right")!==-1?"100%":n[0],s=t.indexOf("top")!==-1?"0%":t.indexOf("bottom")!==-1?"100%":n[1];if(n.length>3&&!e){for(n=t.split(", ").join(",").split(","),t=[],i=0;i<n.length;i++)t.push(at(n[i]));return t.join(",")}return null==s?s="center"===r?"50%":"0":"center"===s&&(s="50%"),("center"===r||isNaN(parseFloat(r))&&(r+"").indexOf("=")===-1)&&(r="50%"),t=r+" "+s+(n.length>2?" "+n[2]:""),e&&(e.oxp=r.indexOf("%")!==-1,e.oyp=s.indexOf("%")!==-1,e.oxr="="===r.charAt(1),e.oyr="="===s.charAt(1),e.ox=parseFloat(r.replace(w,"")),e.oy=parseFloat(s.replace(w,"")),e.v=t),e||t},lt=function(t,e){return"function"==typeof t&&(t=t(v,g)),"string"==typeof t&&"="===t.charAt(1)?parseInt(t.charAt(0)+"1",10)*parseFloat(t.substr(2)):parseFloat(t)-parseFloat(e)||0},ut=function(t,e){return"function"==typeof t&&(t=t(v,g)),null==t?e:"string"==typeof t&&"="===t.charAt(1)?parseInt(t.charAt(0)+"1",10)*parseFloat(t.substr(2))+e:parseFloat(t)||0},ht=function(t,e,i,n){var r,s,o,a,l,u=1e-6;return"function"==typeof t&&(t=t(v,g)),null==t?a=e:"number"==typeof t?a=t:(r=360,s=t.split("_"),l="="===t.charAt(1),o=(l?parseInt(t.charAt(0)+"1",10)*parseFloat(s[0].substr(2)):parseFloat(s[0]))*(t.indexOf("rad")===-1?1:q)-(l?0:e),s.length&&(n&&(n[i]=e+o),t.indexOf("short")!==-1&&(o%=r,o!==o%(r/2)&&(o=o<0?o+r:o-r)),t.indexOf("_cw")!==-1&&o<0?o=(o+9999999999*r)%r-(o/r|0)*r:t.indexOf("ccw")!==-1&&o>0&&(o=(o-9999999999*r)%r-(o/r|0)*r)),a=e+o),a<u&&a>-u&&(a=0),a},ct={aqua:[0,255,255],lime:[0,255,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,255],navy:[0,0,128],white:[255,255,255],fuchsia:[255,0,255],olive:[128,128,0],yellow:[255,255,0],orange:[255,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[255,0,0],pink:[255,192,203],cyan:[0,255,255],transparent:[255,255,255,0]},ft=function(t,e,i){return t=t<0?t+1:t>1?t-1:t,255*(6*t<1?e+(i-e)*t*6:t<.5?i:3*t<2?e+(i-e)*(2/3-t)*6:e)+.5|0},pt=a.parseColor=function(t,e){var i,n,r,s,o,a,l,u,h,c,f;if(t)if("number"==typeof t)i=[t>>16,t>>8&255,255&t];else{if(","===t.charAt(t.length-1)&&(t=t.substr(0,t.length-1)),ct[t])i=ct[t];else if("#"===t.charAt(0))4===t.length&&(n=t.charAt(1),r=t.charAt(2),s=t.charAt(3),t="#"+n+n+r+r+s+s),t=parseInt(t.substr(1),16),i=[t>>16,t>>8&255,255&t];else if("hsl"===t.substr(0,3))if(i=f=t.match(y),e){if(t.indexOf("=")!==-1)return t.match(T)}else o=Number(i[0])%360/360,a=Number(i[1])/100,l=Number(i[2])/100,r=l<=.5?l*(a+1):l+a-l*a,n=2*l-r,i.length>3&&(i[3]=Number(t[3])),i[0]=ft(o+1/3,n,r),i[1]=ft(o,n,r),i[2]=ft(o-1/3,n,r);else i=t.match(y)||ct.transparent;i[0]=Number(i[0]),i[1]=Number(i[1]),i[2]=Number(i[2]),i.length>3&&(i[3]=Number(i[3]))}else i=ct.black;return e&&!f&&(n=i[0]/255,r=i[1]/255,s=i[2]/255,u=Math.max(n,r,s),h=Math.min(n,r,s),l=(u+h)/2,u===h?o=a=0:(c=u-h,a=l>.5?c/(2-u-h):c/(u+h),o=u===n?(r-s)/c+(r<s?6:0):u===r?(s-n)/c+2:(n-r)/c+4,o*=60),i[0]=o+.5|0,i[1]=100*a+.5|0,i[2]=100*l+.5|0),i},dt=function(t,e){var i,n,r,s=t.match(_t)||[],o=0,a=s.length?"":t;for(i=0;i<s.length;i++)n=s[i],r=t.substr(o,t.indexOf(n,o)-o),o+=r.length+n.length,n=pt(n,e),3===n.length&&n.push(1),a+=r+(e?"hsla("+n[0]+","+n[1]+"%,"+n[2]+"%,"+n[3]:"rgba("+n.join(","))+")";return a+t.substr(o)},_t="(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3}){1,2}\\b";for(h in ct)_t+="|"+h+"\\b";_t=new RegExp(_t+")","gi"),a.colorStringFilter=function(t){var e,i=t[0]+t[1];_t.test(i)&&(e=i.indexOf("hsl(")!==-1||i.indexOf("hsla(")!==-1,t[0]=dt(t[0],e),t[1]=dt(t[1],e)),_t.lastIndex=0},e.defaultStringFilter||(e.defaultStringFilter=a.colorStringFilter);var mt=function(t,e,i,n){if(null==t)return function(t){return t};var r,s=e?(t.match(_t)||[""])[0]:"",o=t.split(s).join("").match(x)||[],a=t.substr(0,t.indexOf(o[0])),l=")"===t.charAt(t.length-1)?")":"",u=t.indexOf(" ")!==-1?" ":",",h=o.length,c=h>0?o[0].replace(y,""):"";return h?r=e?function(t){var e,f,p,d;if("number"==typeof t)t+=c;else if(n&&M.test(t)){for(d=t.replace(M,"|").split("|"),p=0;p<d.length;p++)d[p]=r(d[p]);return d.join(",")}if(e=(t.match(_t)||[s])[0],f=t.split(e).join("").match(x)||[],p=f.length,h>p--)for(;++p<h;)f[p]=i?f[(p-1)/2|0]:o[p];return a+f.join(u)+u+e+l+(t.indexOf("inset")!==-1?" inset":"")}:function(t){var e,s,f;if("number"==typeof t)t+=c;else if(n&&M.test(t)){for(s=t.replace(M,"|").split("|"),f=0;f<s.length;f++)s[f]=r(s[f]);return s.join(",")}if(e=t.match(x)||[],f=e.length,h>f--)for(;++f<h;)e[f]=i?e[(f-1)/2|0]:o[f];return a+e.join(u)+l}:function(t){return t}},gt=function(t){return t=t.split(","),function(e,i,n,r,s,o,a){var l,u=(i+"").split(" ");for(a={},l=0;l<4;l++)a[t[l]]=u[l]=u[l]||u[(l-1)/2>>0];return r.parse(e,a,s,o)}},vt=(W._setPluginRatio=function(t){this.plugin.setRatio(t);for(var e,i,n,r,s,o=this.data,a=o.proxy,l=o.firstMPT,u=1e-6;l;)e=a[l.v],l.r?e=Math.round(e):e<u&&e>-u&&(e=0),l.t[l.p]=e,l=l._next;if(o.autoRotate&&(o.autoRotate.rotation=o.mod?o.mod(a.rotation,this.t):a.rotation),1===t||0===t)for(l=o.firstMPT,s=1===t?"e":"b";l;){if(i=l.t,i.type){if(1===i.type){for(r=i.xs0+i.s+i.xs1,n=1;n<i.l;n++)r+=i["xn"+n]+i["xs"+(n+1)];i[s]=r}}else i[s]=i.s+i.xs0;l=l._next}},function(t,e,i,n,r){this.t=t,this.p=e,this.v=i,this.r=r,n&&(n._prev=this,this._next=n)}),yt=(W._parseToProxy=function(t,e,i,n,r,s){var o,a,l,u,h,c=n,f={},p={},d=i._transform,_=I;for(i._transform=null,I=e,n=h=i.parse(t,e,n,r),I=_,s&&(i._transform=d,c&&(c._prev=null,c._prev&&(c._prev._next=null)));n&&n!==c;){if(n.type<=1&&(a=n.p,p[a]=n.s+n.c,f[a]=n.s,s||(u=new vt(n,"s",a,u,n.r),n.c=0),1===n.type))for(o=n.l;--o>0;)l="xn"+o,a=n.p+"_"+l,p[a]=n.data[l],f[a]=n[l],s||(u=new vt(n,l,a,u,n.rxp[l]));n=n._next}return{proxy:f,end:p,firstMPT:u,pt:h}},W.CSSPropTween=function(t,e,i,r,s,a,l,u,h,c,f){this.t=t,this.p=e,this.s=i,this.c=r,this.n=l||e,t instanceof yt||o.push(this.n),this.r=u,this.type=a||0,h&&(this.pr=h,n=!0),this.b=void 0===c?i:c,this.e=void 0===f?i+r:f,s&&(this._next=s,s._prev=this)}),Tt=function(t,e,i,n,r,s){var o=new yt(t,e,i,n-i,r,(-1),s);return o.b=i,o.e=o.xs0=n,o},xt=a.parseComplex=function(t,e,i,n,r,s,o,l,u,h){i=i||s||"","function"==typeof n&&(n=n(v,g)),o=new yt(t,e,0,0,o,h?2:1,null,(!1),l,i,n),n+="",r&&_t.test(n+i)&&(n=[i,n],a.colorStringFilter(n),i=n[0],n=n[1]);var f,p,d,_,m,x,w,b,P,C,k,S,A,D=i.split(", ").join(",").split(" "),O=n.split(", ").join(",").split(" "),R=D.length,j=c!==!1;for(n.indexOf(",")===-1&&i.indexOf(",")===-1||(D=D.join(" ").replace(M,", ").split(" "),O=O.join(" ").replace(M,", ").split(" "),R=D.length),R!==O.length&&(D=(s||"").split(" "),R=D.length),o.plugin=u,o.setRatio=h,_t.lastIndex=0,f=0;f<R;f++)if(_=D[f],m=O[f],b=parseFloat(_),b||0===b)o.appendXtra("",b,lt(m,b),m.replace(T,""),j&&m.indexOf("px")!==-1,!0);else if(r&&_t.test(_))S=m.indexOf(")")+1,S=")"+(S?m.substr(S):""),A=m.indexOf("hsl")!==-1&&Y,_=pt(_,A),m=pt(m,A),P=_.length+m.length>6,P&&!Y&&0===m[3]?(o["xs"+o.l]+=o.l?" transparent":"transparent",o.e=o.e.split(O[f]).join("transparent")):(Y||(P=!1),A?o.appendXtra(P?"hsla(":"hsl(",_[0],lt(m[0],_[0]),",",!1,!0).appendXtra("",_[1],lt(m[1],_[1]),"%,",!1).appendXtra("",_[2],lt(m[2],_[2]),P?"%,":"%"+S,!1):o.appendXtra(P?"rgba(":"rgb(",_[0],m[0]-_[0],",",!0,!0).appendXtra("",_[1],m[1]-_[1],",",!0).appendXtra("",_[2],m[2]-_[2],P?",":S,!0),P&&(_=_.length<4?1:_[3],o.appendXtra("",_,(m.length<4?1:m[3])-_,S,!1))),_t.lastIndex=0;else if(x=_.match(y)){if(w=m.match(T),!w||w.length!==x.length)return o;for(d=0,p=0;p<x.length;p++)k=x[p],C=_.indexOf(k,d),o.appendXtra(_.substr(d,C-d),Number(k),lt(w[p],k),"",j&&"px"===_.substr(C+k.length,2),0===p),d=C+k.length;o["xs"+o.l]+=_.substr(d)}else o["xs"+o.l]+=o.l||o["xs"+o.l]?" "+m:m;if(n.indexOf("=")!==-1&&o.data){for(S=o.xs0+o.data.s,f=1;f<o.l;f++)S+=o["xs"+f]+o.data["xn"+f];o.e=S+o["xs"+f]}return o.l||(o.type=-1,o.xs0=o.e),o.xfirst||o},wt=9;for(h=yt.prototype,h.l=h.pr=0;--wt>0;)h["xn"+wt]=0,h["xs"+wt]="";h.xs0="",h._next=h._prev=h.xfirst=h.data=h.plugin=h.setRatio=h.rxp=null,h.appendXtra=function(t,e,i,n,r,s){var o=this,a=o.l;return o["xs"+a]+=s&&(a||o["xs"+a])?" "+t:t||"",i||0===a||o.plugin?(o.l++,o.type=o.setRatio?2:1,o["xs"+o.l]=n||"",a>0?(o.data["xn"+a]=e+i,o.rxp["xn"+a]=r,o["xn"+a]=e,o.plugin||(o.xfirst=new yt(o,"xn"+a,e,i,o.xfirst||o,0,o.n,r,o.pr),o.xfirst.xs0=0),o):(o.data={s:e+i},o.rxp={},o.s=e,o.c=i,o.r=r,o)):(o["xs"+a]+=e+(n||""),o)};var bt=function(t,e){e=e||{},this.p=e.prefix?K(t)||t:t,u[t]=u[this.p]=this,this.format=e.formatter||mt(e.defaultValue,e.color,e.collapsible,e.multi),e.parser&&(this.parse=e.parser),this.clrs=e.color,this.multi=e.multi,this.keyword=e.keyword,this.dflt=e.defaultValue,this.pr=e.priority||0},Pt=W._registerComplexSpecialProp=function(t,e,i){"object"!=typeof e&&(e={parser:i});var n,r,s=t.split(","),o=e.defaultValue;for(i=i||[o],n=0;n<s.length;n++)e.prefix=0===n&&e.prefix,e.defaultValue=i[n]||o,r=new bt(s[n],e)},Ct=W._registerPluginProp=function(t){if(!u[t]){var e=t.charAt(0).toUpperCase()+t.substr(1)+"Plugin";Pt(t,{parser:function(t,i,n,r,s,o,a){var h=l.com.greensock.plugins[e];return h?(h._cssRegister(),u[n].parse(t,i,n,r,s,o,a)):(V("Error: "+e+" js file not loaded."),s)}})}};h=bt.prototype,h.parseComplex=function(t,e,i,n,r,s){var o,a,l,u,h,c,f=this.keyword;if(this.multi&&(M.test(i)||M.test(e)?(a=e.replace(M,"|").split("|"),l=i.replace(M,"|").split("|")):f&&(a=[e],l=[i])),l){for(u=l.length>a.length?l.length:a.length,o=0;o<u;o++)e=a[o]=a[o]||this.dflt,i=l[o]=l[o]||this.dflt,f&&(h=e.indexOf(f),c=i.indexOf(f),h!==c&&(c===-1?a[o]=a[o].split(f).join(""):h===-1&&(a[o]+=" "+f)));e=a.join(", "),i=l.join(", ")}return xt(t,this.p,e,i,this.clrs,this.dflt,n,this.pr,r,s)},h.parse=function(t,e,i,n,r,o,a){return this.parseComplex(t.style,this.format(J(t,this.p,s,!1,this.dflt)),this.format(e),r,o)},a.registerSpecialProp=function(t,e,i){Pt(t,{parser:function(t,n,r,s,o,a,l){var u=new yt(t,r,0,0,o,2,r,(!1),i);return u.plugin=a,u.setRatio=e(t,n,s._tween,r),u},priority:i})},a.useSVGTransformAttr=p||d;var kt,St="scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(","),At=K("transform"),Dt=G+"transform",Ot=K("transformOrigin"),Rt=null!==K("perspective"),jt=W.Transform=function(){this.perspective=parseFloat(a.defaultTransformPerspective)||0,this.force3D=!(a.defaultForce3D===!1||!Rt)&&(a.defaultForce3D||"auto")},Et=window.SVGElement,Lt=function(t,e,i){var n,r=z.createElementNS("http://www.w3.org/2000/svg",t),s=/([a-z])([A-Z])/g;for(n in i)r.setAttributeNS(null,n.replace(s,"$1-$2").toLowerCase(),i[n]);return e.appendChild(r),r},Mt=z.documentElement,Ft=function(){var t,e,i,n=m||/Android/i.test(U)&&!window.chrome;return z.createElementNS&&!n&&(t=Lt("svg",Mt),e=Lt("rect",t,{width:100,height:50,x:100}),i=e.getBoundingClientRect().width,e.style[Ot]="50% 50%",e.style[At]="scaleX(0.5)",n=i===e.getBoundingClientRect().width&&!(d&&Rt),Mt.removeChild(t)),n}(),Nt=function(t,e,i,n,r,s){var o,l,u,h,c,f,p,d,_,m,g,v,y,T,x=t._gsTransform,w=Bt(t,!0);x&&(y=x.xOrigin,T=x.yOrigin),(!n||(o=n.split(" ")).length<2)&&(p=t.getBBox(),e=at(e).split(" "),o=[(e[0].indexOf("%")!==-1?parseFloat(e[0])/100*p.width:parseFloat(e[0]))+p.x,(e[1].indexOf("%")!==-1?parseFloat(e[1])/100*p.height:parseFloat(e[1]))+p.y]),i.xOrigin=h=parseFloat(o[0]),i.yOrigin=c=parseFloat(o[1]),n&&w!==zt&&(f=w[0],p=w[1],d=w[2],_=w[3],m=w[4],g=w[5],v=f*_-p*d,l=h*(_/v)+c*(-d/v)+(d*g-_*m)/v,u=h*(-p/v)+c*(f/v)-(f*g-p*m)/v,h=i.xOrigin=o[0]=l,c=i.yOrigin=o[1]=u),x&&(s&&(i.xOffset=x.xOffset,i.yOffset=x.yOffset,x=i),r||r!==!1&&a.defaultSmoothOrigin!==!1?(l=h-y,u=c-T,x.xOffset+=l*w[0]+u*w[2]-l,x.yOffset+=l*w[1]+u*w[3]-u):x.xOffset=x.yOffset=0),s||t.setAttribute("data-svg-origin",o.join(" "))},qt=function(t){try{return t.getBBox()}catch(t){}},It=function(t){return!!(Et&&t.getBBox&&t.getCTM&&qt(t)&&(!t.parentNode||t.parentNode.getBBox&&t.parentNode.getCTM))},zt=[1,0,0,1,0,0],Bt=function(t,e){var i,n,r,s,o,a,l=t._gsTransform||new jt,u=1e5,h=t.style;if(At?n=J(t,Dt,null,!0):t.currentStyle&&(n=t.currentStyle.filter.match(E),n=n&&4===n.length?[n[0].substr(4),Number(n[2].substr(4)),Number(n[1].substr(4)),n[3].substr(4),l.x||0,l.y||0].join(","):""),i=!n||"none"===n||"matrix(1, 0, 0, 1, 0, 0)"===n,i&&At&&((a="none"===Z(t).display)||!t.parentNode)&&(a&&(s=h.display,h.display="block"),t.parentNode||(o=1,Mt.appendChild(t)),n=J(t,Dt,null,!0),i=!n||"none"===n||"matrix(1, 0, 0, 1, 0, 0)"===n,s?h.display=s:a&&Yt(h,"display"),o&&Mt.removeChild(t)),(l.svg||t.getBBox&&It(t))&&(i&&(h[At]+"").indexOf("matrix")!==-1&&(n=h[At],i=0),r=t.getAttribute("transform"),i&&r&&(r.indexOf("matrix")!==-1?(n=r,i=0):r.indexOf("translate")!==-1&&(n="matrix(1,0,0,1,"+r.match(/(?:\-|\b)[\d\-\.e]+\b/gi).join(",")+")",i=0))),i)return zt;for(r=(n||"").match(y)||[],wt=r.length;--wt>-1;)s=Number(r[wt]),r[wt]=(o=s-(s|=0))?(o*u+(o<0?-.5:.5)|0)/u+s:s;return e&&r.length>6?[r[0],r[1],r[4],r[5],r[12],r[13]]:r},Ht=W.getTransform=function(t,i,n,r){if(t._gsTransform&&n&&!r)return t._gsTransform;var s,o,l,u,h,c,f=n?t._gsTransform||new jt:new jt,p=f.scaleX<0,d=2e-5,_=1e5,m=Rt?parseFloat(J(t,Ot,i,!1,"0 0 0").split(" ")[2])||f.zOrigin||0:0,g=parseFloat(a.defaultTransformPerspective)||0;if(f.svg=!(!t.getBBox||!It(t)),f.svg&&(Nt(t,J(t,Ot,i,!1,"50% 50%")+"",f,t.getAttribute("data-svg-origin")),kt=a.useSVGTransformAttr||Ft),s=Bt(t),s!==zt){if(16===s.length){var v,y,T,x,w,b=s[0],P=s[1],C=s[2],k=s[3],S=s[4],A=s[5],D=s[6],O=s[7],R=s[8],j=s[9],E=s[10],L=s[12],M=s[13],F=s[14],N=s[11],I=Math.atan2(D,E);f.zOrigin&&(F=-f.zOrigin,L=R*F-s[12],M=j*F-s[13],F=E*F+f.zOrigin-s[14]),f.rotationX=I*q,I&&(x=Math.cos(-I),w=Math.sin(-I),v=S*x+R*w,y=A*x+j*w,T=D*x+E*w,R=S*-w+R*x,j=A*-w+j*x,E=D*-w+E*x,N=O*-w+N*x,S=v,A=y,D=T),I=Math.atan2(-C,E),f.rotationY=I*q,I&&(x=Math.cos(-I),w=Math.sin(-I),v=b*x-R*w,y=P*x-j*w,T=C*x-E*w,j=P*w+j*x,E=C*w+E*x,N=k*w+N*x,b=v,P=y,C=T),I=Math.atan2(P,b),f.rotation=I*q,I&&(x=Math.cos(-I),w=Math.sin(-I),b=b*x+S*w,y=P*x+A*w,A=P*-w+A*x,D=C*-w+D*x,P=y),f.rotationX&&Math.abs(f.rotationX)+Math.abs(f.rotation)>359.9&&(f.rotationX=f.rotation=0,f.rotationY=180-f.rotationY),f.scaleX=(Math.sqrt(b*b+P*P)*_+.5|0)/_,f.scaleY=(Math.sqrt(A*A+j*j)*_+.5|0)/_,f.scaleZ=(Math.sqrt(D*D+E*E)*_+.5|0)/_,f.rotationX||f.rotationY?f.skewX=0:(f.skewX=S||A?Math.atan2(S,A)*q+f.rotation:f.skewX||0,Math.abs(f.skewX)>90&&Math.abs(f.skewX)<270&&(p?(f.scaleX*=-1,f.skewX+=f.rotation<=0?180:-180,f.rotation+=f.rotation<=0?180:-180):(f.scaleY*=-1,f.skewX+=f.skewX<=0?180:-180))),f.perspective=N?1/(N<0?-N:N):0,f.x=L,f.y=M,f.z=F,f.svg&&(f.x-=f.xOrigin-(f.xOrigin*b-f.yOrigin*S),f.y-=f.yOrigin-(f.yOrigin*P-f.xOrigin*A))}else if(!Rt||r||!s.length||f.x!==s[4]||f.y!==s[5]||!f.rotationX&&!f.rotationY){var z=s.length>=6,B=z?s[0]:1,H=s[1]||0,X=s[2]||0,W=z?s[3]:1;f.x=s[4]||0,f.y=s[5]||0,l=Math.sqrt(B*B+H*H),u=Math.sqrt(W*W+X*X),h=B||H?Math.atan2(H,B)*q:f.rotation||0,c=X||W?Math.atan2(X,W)*q+h:f.skewX||0,Math.abs(c)>90&&Math.abs(c)<270&&(p?(l*=-1,c+=h<=0?180:-180,h+=h<=0?180:-180):(u*=-1,c+=c<=0?180:-180)),f.scaleX=l,f.scaleY=u,f.rotation=h,f.skewX=c,Rt&&(f.rotationX=f.rotationY=f.z=0,f.perspective=g,f.scaleZ=1),f.svg&&(f.x-=f.xOrigin-(f.xOrigin*B+f.yOrigin*X),f.y-=f.yOrigin-(f.xOrigin*H+f.yOrigin*W))}f.zOrigin=m;for(o in f)f[o]<d&&f[o]>-d&&(f[o]=0)}return n&&(t._gsTransform=f,f.svg&&(kt&&t.style[At]?e.delayedCall(.001,function(){Yt(t.style,At)}):!kt&&t.getAttribute("transform")&&e.delayedCall(.001,function(){t.removeAttribute("transform")}))),f},Xt=function(t){var e,i,n=this.data,r=-n.rotation*N,s=r+n.skewX*N,o=1e5,a=(Math.cos(r)*n.scaleX*o|0)/o,l=(Math.sin(r)*n.scaleX*o|0)/o,u=(Math.sin(s)*-n.scaleY*o|0)/o,h=(Math.cos(s)*n.scaleY*o|0)/o,c=this.t.style,f=this.t.currentStyle;if(f){i=l,l=-u,u=-i,e=f.filter,c.filter="";var p,d,_=this.t.offsetWidth,g=this.t.offsetHeight,v="absolute"!==f.position,y="progid:DXImageTransform.Microsoft.Matrix(M11="+a+", M12="+l+", M21="+u+", M22="+h,T=n.x+_*n.xPercent/100,x=n.y+g*n.yPercent/100;if(null!=n.ox&&(p=(n.oxp?_*n.ox*.01:n.ox)-_/2,d=(n.oyp?g*n.oy*.01:n.oy)-g/2,T+=p-(p*a+d*l),x+=d-(p*u+d*h)),v?(p=_/2,d=g/2,y+=", Dx="+(p-(p*a+d*l)+T)+", Dy="+(d-(p*u+d*h)+x)+")"):y+=", sizingMethod='auto expand')",e.indexOf("DXImageTransform.Microsoft.Matrix(")!==-1?c.filter=e.replace(L,y):c.filter=y+" "+e,0!==t&&1!==t||1===a&&0===l&&0===u&&1===h&&(v&&y.indexOf("Dx=0, Dy=0")===-1||P.test(e)&&100!==parseFloat(RegExp.$1)||e.indexOf(e.indexOf("Alpha"))===-1&&c.removeAttribute("filter")),!v){var w,C,k,S=m<8?1:-1;for(p=n.ieOffsetX||0,d=n.ieOffsetY||0,n.ieOffsetX=Math.round((_-((a<0?-a:a)*_+(l<0?-l:l)*g))/2+T),n.ieOffsetY=Math.round((g-((h<0?-h:h)*g+(u<0?-u:u)*_))/2+x),wt=0;wt<4;wt++)C=st[wt],w=f[C],i=w.indexOf("px")!==-1?parseFloat(w):tt(this.t,C,parseFloat(w),w.replace(b,""))||0,k=i!==n[C]?wt<2?-n.ieOffsetX:-n.ieOffsetY:wt<2?p-n.ieOffsetX:d-n.ieOffsetY,c[C]=(n[C]=Math.round(i-k*(0===wt||2===wt?1:S)))+"px"}}},Wt=W.set3DTransformRatio=W.setTransformRatio=function(t){var e,i,n,r,s,o,a,l,u,h,c,f,p,_,m,g,v,y,T,x,w,b,P,C=this.data,k=this.t.style,S=C.rotation,A=C.rotationX,D=C.rotationY,O=C.scaleX,R=C.scaleY,j=C.scaleZ,E=C.x,L=C.y,M=C.z,F=C.svg,q=C.perspective,I=C.force3D;if(((1===t||0===t)&&"auto"===I&&(this.tween._totalTime===this.tween._totalDuration||!this.tween._totalTime)||!I)&&!M&&!q&&!D&&!A&&1===j||kt&&F||!Rt)return void(S||C.skewX||F?(S*=N,b=C.skewX*N,P=1e5,e=Math.cos(S)*O,r=Math.sin(S)*O,i=Math.sin(S-b)*-R,s=Math.cos(S-b)*R,b&&"simple"===C.skewType&&(v=Math.tan(b-C.skewY*N),v=Math.sqrt(1+v*v),i*=v,s*=v,C.skewY&&(v=Math.tan(C.skewY*N),v=Math.sqrt(1+v*v),e*=v,r*=v)),F&&(E+=C.xOrigin-(C.xOrigin*e+C.yOrigin*i)+C.xOffset,L+=C.yOrigin-(C.xOrigin*r+C.yOrigin*s)+C.yOffset,kt&&(C.xPercent||C.yPercent)&&(_=this.t.getBBox(),E+=.01*C.xPercent*_.width,L+=.01*C.yPercent*_.height),_=1e-6,E<_&&E>-_&&(E=0),L<_&&L>-_&&(L=0)),T=(e*P|0)/P+","+(r*P|0)/P+","+(i*P|0)/P+","+(s*P|0)/P+","+E+","+L+")",F&&kt?this.t.setAttribute("transform","matrix("+T):k[At]=(C.xPercent||C.yPercent?"translate("+C.xPercent+"%,"+C.yPercent+"%) matrix(":"matrix(")+T):k[At]=(C.xPercent||C.yPercent?"translate("+C.xPercent+"%,"+C.yPercent+"%) matrix(":"matrix(")+O+",0,0,"+R+","+E+","+L+")");if(d&&(_=1e-4,O<_&&O>-_&&(O=j=2e-5),R<_&&R>-_&&(R=j=2e-5),!q||C.z||C.rotationX||C.rotationY||(q=0)),S||C.skewX)S*=N,m=e=Math.cos(S),g=r=Math.sin(S),C.skewX&&(S-=C.skewX*N,m=Math.cos(S),g=Math.sin(S),"simple"===C.skewType&&(v=Math.tan((C.skewX-C.skewY)*N),v=Math.sqrt(1+v*v),m*=v,g*=v,C.skewY&&(v=Math.tan(C.skewY*N),v=Math.sqrt(1+v*v),e*=v,r*=v))),i=-g,s=m;else{if(!(D||A||1!==j||q||F))return void(k[At]=(C.xPercent||C.yPercent?"translate("+C.xPercent+"%,"+C.yPercent+"%) translate3d(":"translate3d(")+E+"px,"+L+"px,"+M+"px)"+(1!==O||1!==R?" scale("+O+","+R+")":""));e=s=1,i=r=0}u=1,n=o=a=l=h=c=0,f=q?-1/q:0,p=C.zOrigin,_=1e-6,x=",",w="0",S=D*N,S&&(m=Math.cos(S),g=Math.sin(S),a=-g,h=f*-g,n=e*g,o=r*g,u=m,f*=m,e*=m,r*=m),S=A*N,S&&(m=Math.cos(S),g=Math.sin(S),v=i*m+n*g,y=s*m+o*g,l=u*g,c=f*g,n=i*-g+n*m,o=s*-g+o*m,u*=m,f*=m,i=v,s=y),1!==j&&(n*=j,o*=j,u*=j,f*=j),1!==R&&(i*=R,s*=R,l*=R,c*=R),1!==O&&(e*=O,r*=O,a*=O,h*=O),(p||F)&&(p&&(E+=n*-p,L+=o*-p,M+=u*-p+p),F&&(E+=C.xOrigin-(C.xOrigin*e+C.yOrigin*i)+C.xOffset,L+=C.yOrigin-(C.xOrigin*r+C.yOrigin*s)+C.yOffset),E<_&&E>-_&&(E=w),L<_&&L>-_&&(L=w),M<_&&M>-_&&(M=0)),T=C.xPercent||C.yPercent?"translate("+C.xPercent+"%,"+C.yPercent+"%) matrix3d(":"matrix3d(",T+=(e<_&&e>-_?w:e)+x+(r<_&&r>-_?w:r)+x+(a<_&&a>-_?w:a),T+=x+(h<_&&h>-_?w:h)+x+(i<_&&i>-_?w:i)+x+(s<_&&s>-_?w:s),A||D||1!==j?(T+=x+(l<_&&l>-_?w:l)+x+(c<_&&c>-_?w:c)+x+(n<_&&n>-_?w:n),T+=x+(o<_&&o>-_?w:o)+x+(u<_&&u>-_?w:u)+x+(f<_&&f>-_?w:f)+x):T+=",0,0,0,0,1,0,",T+=E+x+L+x+M+x+(q?1+-M/q:1)+")",
k[At]=T};h=jt.prototype,h.x=h.y=h.z=h.skewX=h.skewY=h.rotation=h.rotationX=h.rotationY=h.zOrigin=h.xPercent=h.yPercent=h.xOffset=h.yOffset=0,h.scaleX=h.scaleY=h.scaleZ=1,Pt("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin",{parser:function(t,e,i,n,r,o,l){if(n._lastParsedTransform===l)return r;n._lastParsedTransform=l;var u;"function"==typeof l[i]&&(u=l[i],l[i]=e);var h,c,f,p,d,_,m,y,T,x=t._gsTransform,w=t.style,b=1e-6,P=St.length,C=l,k={},S="transformOrigin",A=Ht(t,s,!0,C.parseTransform),D=C.transform&&("function"==typeof C.transform?C.transform(v,g):C.transform);if(n._transform=A,D&&"string"==typeof D&&At)c=H.style,c[At]=D,c.display="block",c.position="absolute",z.body.appendChild(H),h=Ht(H,null,!1),A.svg&&(_=A.xOrigin,m=A.yOrigin,h.x-=A.xOffset,h.y-=A.yOffset,(C.transformOrigin||C.svgOrigin)&&(D={},Nt(t,at(C.transformOrigin),D,C.svgOrigin,C.smoothOrigin,!0),_=D.xOrigin,m=D.yOrigin,h.x-=D.xOffset-A.xOffset,h.y-=D.yOffset-A.yOffset),(_||m)&&(y=Bt(H,!0),h.x-=_-(_*y[0]+m*y[2]),h.y-=m-(_*y[1]+m*y[3]))),z.body.removeChild(H),h.perspective||(h.perspective=A.perspective),null!=C.xPercent&&(h.xPercent=ut(C.xPercent,A.xPercent)),null!=C.yPercent&&(h.yPercent=ut(C.yPercent,A.yPercent));else if("object"==typeof C){if(h={scaleX:ut(null!=C.scaleX?C.scaleX:C.scale,A.scaleX),scaleY:ut(null!=C.scaleY?C.scaleY:C.scale,A.scaleY),scaleZ:ut(C.scaleZ,A.scaleZ),x:ut(C.x,A.x),y:ut(C.y,A.y),z:ut(C.z,A.z),xPercent:ut(C.xPercent,A.xPercent),yPercent:ut(C.yPercent,A.yPercent),perspective:ut(C.transformPerspective,A.perspective)},d=C.directionalRotation,null!=d)if("object"==typeof d)for(c in d)C[c]=d[c];else C.rotation=d;"string"==typeof C.x&&C.x.indexOf("%")!==-1&&(h.x=0,h.xPercent=ut(C.x,A.xPercent)),"string"==typeof C.y&&C.y.indexOf("%")!==-1&&(h.y=0,h.yPercent=ut(C.y,A.yPercent)),h.rotation=ht("rotation"in C?C.rotation:"shortRotation"in C?C.shortRotation+"_short":"rotationZ"in C?C.rotationZ:A.rotation-A.skewY,A.rotation-A.skewY,"rotation",k),Rt&&(h.rotationX=ht("rotationX"in C?C.rotationX:"shortRotationX"in C?C.shortRotationX+"_short":A.rotationX||0,A.rotationX,"rotationX",k),h.rotationY=ht("rotationY"in C?C.rotationY:"shortRotationY"in C?C.shortRotationY+"_short":A.rotationY||0,A.rotationY,"rotationY",k)),h.skewX=ht(C.skewX,A.skewX-A.skewY),(h.skewY=ht(C.skewY,A.skewY))&&(h.skewX+=h.skewY,h.rotation+=h.skewY)}for(Rt&&null!=C.force3D&&(A.force3D=C.force3D,p=!0),A.skewType=C.skewType||A.skewType||a.defaultSkewType,f=A.force3D||A.z||A.rotationX||A.rotationY||h.z||h.rotationX||h.rotationY||h.perspective,f||null==C.scale||(h.scaleZ=1);--P>-1;)T=St[P],D=h[T]-A[T],(D>b||D<-b||null!=C[T]||null!=I[T])&&(p=!0,r=new yt(A,T,A[T],D,r),T in k&&(r.e=k[T]),r.xs0=0,r.plugin=o,n._overwriteProps.push(r.n));return D=C.transformOrigin,A.svg&&(D||C.svgOrigin)&&(_=A.xOffset,m=A.yOffset,Nt(t,at(D),h,C.svgOrigin,C.smoothOrigin),r=Tt(A,"xOrigin",(x?A:h).xOrigin,h.xOrigin,r,S),r=Tt(A,"yOrigin",(x?A:h).yOrigin,h.yOrigin,r,S),_===A.xOffset&&m===A.yOffset||(r=Tt(A,"xOffset",x?_:A.xOffset,A.xOffset,r,S),r=Tt(A,"yOffset",x?m:A.yOffset,A.yOffset,r,S)),D=kt?null:"0px 0px"),(D||Rt&&f&&A.zOrigin)&&(At?(p=!0,T=Ot,D=(D||J(t,T,s,!1,"50% 50%"))+"",r=new yt(w,T,0,0,r,(-1),S),r.b=w[T],r.plugin=o,Rt?(c=A.zOrigin,D=D.split(" "),A.zOrigin=(D.length>2&&(0===c||"0px"!==D[2])?parseFloat(D[2]):c)||0,r.xs0=r.e=D[0]+" "+(D[1]||"50%")+" 0px",r=new yt(A,"zOrigin",0,0,r,(-1),r.n),r.b=c,r.xs0=r.e=A.zOrigin):r.xs0=r.e=D):at(D+"",A)),p&&(n._transformType=A.svg&&kt||!f&&3!==this._transformType?2:3),u&&(l[i]=u),r},prefix:!0}),Pt("boxShadow",{defaultValue:"0px 0px 0px 0px #999",prefix:!0,color:!0,multi:!0,keyword:"inset"}),Pt("borderRadius",{defaultValue:"0px",parser:function(t,e,i,n,o,a){e=this.format(e);var l,u,h,c,f,p,d,_,m,g,v,y,T,x,w,b,P=["borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius"],C=t.style;for(m=parseFloat(t.offsetWidth),g=parseFloat(t.offsetHeight),l=e.split(" "),u=0;u<P.length;u++)this.p.indexOf("border")&&(P[u]=K(P[u])),f=c=J(t,P[u],s,!1,"0px"),f.indexOf(" ")!==-1&&(c=f.split(" "),f=c[0],c=c[1]),p=h=l[u],d=parseFloat(f),y=f.substr((d+"").length),T="="===p.charAt(1),T?(_=parseInt(p.charAt(0)+"1",10),p=p.substr(2),_*=parseFloat(p),v=p.substr((_+"").length-(_<0?1:0))||""):(_=parseFloat(p),v=p.substr((_+"").length)),""===v&&(v=r[i]||y),v!==y&&(x=tt(t,"borderLeft",d,y),w=tt(t,"borderTop",d,y),"%"===v?(f=x/m*100+"%",c=w/g*100+"%"):"em"===v?(b=tt(t,"borderLeft",1,"em"),f=x/b+"em",c=w/b+"em"):(f=x+"px",c=w+"px"),T&&(p=parseFloat(f)+_+v,h=parseFloat(c)+_+v)),o=xt(C,P[u],f+" "+c,p+" "+h,!1,"0px",o);return o},prefix:!0,formatter:mt("0px 0px 0px 0px",!1,!0)}),Pt("borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius",{defaultValue:"0px",parser:function(t,e,i,n,r,o){return xt(t.style,i,this.format(J(t,i,s,!1,"0px 0px")),this.format(e),!1,"0px",r)},prefix:!0,formatter:mt("0px 0px",!1,!0)}),Pt("backgroundPosition",{defaultValue:"0 0",parser:function(t,e,i,n,r,o){var a,l,u,h,c,f,p="background-position",d=s||Z(t,null),_=this.format((d?m?d.getPropertyValue(p+"-x")+" "+d.getPropertyValue(p+"-y"):d.getPropertyValue(p):t.currentStyle.backgroundPositionX+" "+t.currentStyle.backgroundPositionY)||"0 0"),g=this.format(e);if(_.indexOf("%")!==-1!=(g.indexOf("%")!==-1)&&g.split(",").length<2&&(f=J(t,"backgroundImage").replace(O,""),f&&"none"!==f)){for(a=_.split(" "),l=g.split(" "),X.setAttribute("src",f),u=2;--u>-1;)_=a[u],h=_.indexOf("%")!==-1,h!==(l[u].indexOf("%")!==-1)&&(c=0===u?t.offsetWidth-X.width:t.offsetHeight-X.height,a[u]=h?parseFloat(_)/100*c+"px":parseFloat(_)/c*100+"%");_=a.join(" ")}return this.parseComplex(t.style,_,g,r,o)},formatter:at}),Pt("backgroundSize",{defaultValue:"0 0",formatter:function(t){return t+="",at(t.indexOf(" ")===-1?t+" "+t:t)}}),Pt("perspective",{defaultValue:"0px",prefix:!0}),Pt("perspectiveOrigin",{defaultValue:"50% 50%",prefix:!0}),Pt("transformStyle",{prefix:!0}),Pt("backfaceVisibility",{prefix:!0}),Pt("userSelect",{prefix:!0}),Pt("margin",{parser:gt("marginTop,marginRight,marginBottom,marginLeft")}),Pt("padding",{parser:gt("paddingTop,paddingRight,paddingBottom,paddingLeft")}),Pt("clip",{defaultValue:"rect(0px,0px,0px,0px)",parser:function(t,e,i,n,r,o){var a,l,u;return m<9?(l=t.currentStyle,u=m<8?" ":",",a="rect("+l.clipTop+u+l.clipRight+u+l.clipBottom+u+l.clipLeft+")",e=this.format(e).split(",").join(u)):(a=this.format(J(t,this.p,s,!1,this.dflt)),e=this.format(e)),this.parseComplex(t.style,a,e,r,o)}}),Pt("textShadow",{defaultValue:"0px 0px 0px #999",color:!0,multi:!0}),Pt("autoRound,strictUnits",{parser:function(t,e,i,n,r){return r}}),Pt("border",{defaultValue:"0px solid #000",parser:function(t,e,i,n,r,o){var a=J(t,"borderTopWidth",s,!1,"0px"),l=this.format(e).split(" "),u=l[0].replace(b,"");return"px"!==u&&(a=parseFloat(a)/tt(t,"borderTopWidth",1,u)+u),this.parseComplex(t.style,this.format(a+" "+J(t,"borderTopStyle",s,!1,"solid")+" "+J(t,"borderTopColor",s,!1,"#000")),l.join(" "),r,o)},color:!0,formatter:function(t){var e=t.split(" ");return e[0]+" "+(e[1]||"solid")+" "+(t.match(_t)||["#000"])[0]}}),Pt("borderWidth",{parser:gt("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth")}),Pt("float,cssFloat,styleFloat",{parser:function(t,e,i,n,r,s){var o=t.style,a="cssFloat"in o?"cssFloat":"styleFloat";return new yt(o,a,0,0,r,(-1),i,(!1),0,o[a],e)}});var Ut=function(t){var e,i=this.t,n=i.filter||J(this.data,"filter")||"",r=this.s+this.c*t|0;100===r&&(n.indexOf("atrix(")===-1&&n.indexOf("radient(")===-1&&n.indexOf("oader(")===-1?(i.removeAttribute("filter"),e=!J(this.data,"filter")):(i.filter=n.replace(k,""),e=!0)),e||(this.xn1&&(i.filter=n=n||"alpha(opacity="+r+")"),n.indexOf("pacity")===-1?0===r&&this.xn1||(i.filter=n+" alpha(opacity="+r+")"):i.filter=n.replace(P,"opacity="+r))};Pt("opacity,alpha,autoAlpha",{defaultValue:"1",parser:function(t,e,i,n,r,o){var a=parseFloat(J(t,"opacity",s,!1,"1")),l=t.style,u="autoAlpha"===i;return"string"==typeof e&&"="===e.charAt(1)&&(e=("-"===e.charAt(0)?-1:1)*parseFloat(e.substr(2))+a),u&&1===a&&"hidden"===J(t,"visibility",s)&&0!==e&&(a=0),Y?r=new yt(l,"opacity",a,e-a,r):(r=new yt(l,"opacity",100*a,100*(e-a),r),r.xn1=u?1:0,l.zoom=1,r.type=2,r.b="alpha(opacity="+r.s+")",r.e="alpha(opacity="+(r.s+r.c)+")",r.data=t,r.plugin=o,r.setRatio=Ut),u&&(r=new yt(l,"visibility",0,0,r,(-1),null,(!1),0,0!==a?"inherit":"hidden",0===e?"hidden":"inherit"),r.xs0="inherit",n._overwriteProps.push(r.n),n._overwriteProps.push(i)),r}});var Yt=function(t,e){e&&(t.removeProperty?("ms"!==e.substr(0,2)&&"webkit"!==e.substr(0,6)||(e="-"+e),t.removeProperty(e.replace(A,"-$1").toLowerCase())):t.removeAttribute(e))},$t=function(t){if(this.t._gsClassPT=this,1===t||0===t){this.t.setAttribute("class",0===t?this.b:this.e);for(var e=this.data,i=this.t.style;e;)e.v?i[e.p]=e.v:Yt(i,e.p),e=e._next;1===t&&this.t._gsClassPT===this&&(this.t._gsClassPT=null)}else this.t.getAttribute("class")!==this.e&&this.t.setAttribute("class",this.e)};Pt("className",{parser:function(t,e,i,r,o,a,l){var u,h,c,f,p,d=t.getAttribute("class")||"",_=t.style.cssText;if(o=r._classNamePT=new yt(t,i,0,0,o,2),o.setRatio=$t,o.pr=-11,n=!0,o.b=d,h=it(t,s),c=t._gsClassPT){for(f={},p=c.data;p;)f[p.p]=1,p=p._next;c.setRatio(1)}return t._gsClassPT=o,o.e="="!==e.charAt(1)?e:d.replace(new RegExp("(?:\\s|^)"+e.substr(2)+"(?![\\w-])"),"")+("+"===e.charAt(0)?" "+e.substr(2):""),t.setAttribute("class",o.e),u=nt(t,h,it(t),l,f),t.setAttribute("class",d),o.data=u.firstMPT,t.style.cssText=_,o=o.xfirst=r.parse(t,u.difs,o,a)}});var Vt=function(t){if((1===t||0===t)&&this.data._totalTime===this.data._totalDuration&&"isFromStart"!==this.data.data){var e,i,n,r,s,o=this.t.style,a=u.transform.parse;if("all"===this.e)o.cssText="",r=!0;else for(e=this.e.split(" ").join("").split(","),n=e.length;--n>-1;)i=e[n],u[i]&&(u[i].parse===a?r=!0:i="transformOrigin"===i?Ot:u[i].p),Yt(o,i);r&&(Yt(o,At),s=this.t._gsTransform,s&&(s.svg&&(this.t.removeAttribute("data-svg-origin"),this.t.removeAttribute("transform")),delete this.t._gsTransform))}};for(Pt("clearProps",{parser:function(t,e,i,r,s){return s=new yt(t,i,0,0,s,2),s.setRatio=Vt,s.e=e,s.pr=-10,s.data=r._tween,n=!0,s}}),h="bezier,throwProps,physicsProps,physics2D".split(","),wt=h.length;wt--;)Ct(h[wt]);h=a.prototype,h._firstPT=h._lastParsedTransform=h._transform=null,h._onInitTween=function(t,e,i,l){if(!t.nodeType)return!1;this._target=g=t,this._tween=i,this._vars=e,v=l,c=e.autoRound,n=!1,r=e.suffixMap||a.suffixMap,s=Z(t,""),o=this._overwriteProps;var h,d,m,y,T,x,w,b,P,k=t.style;if(f&&""===k.zIndex&&(h=J(t,"zIndex",s),"auto"!==h&&""!==h||this._addLazySet(k,"zIndex",0)),"string"==typeof e&&(y=k.cssText,h=it(t,s),k.cssText=y+";"+e,h=nt(t,h,it(t)).difs,!Y&&C.test(e)&&(h.opacity=parseFloat(RegExp.$1)),e=h,k.cssText=y),e.className?this._firstPT=d=u.className.parse(t,e.className,"className",this,null,null,e):this._firstPT=d=this.parse(t,e,null),this._transformType){for(P=3===this._transformType,At?p&&(f=!0,""===k.zIndex&&(w=J(t,"zIndex",s),"auto"!==w&&""!==w||this._addLazySet(k,"zIndex",0)),_&&this._addLazySet(k,"WebkitBackfaceVisibility",this._vars.WebkitBackfaceVisibility||(P?"visible":"hidden"))):k.zoom=1,m=d;m&&m._next;)m=m._next;b=new yt(t,"transform",0,0,null,2),this._linkCSSP(b,null,m),b.setRatio=At?Wt:Xt,b.data=this._transform||Ht(t,s,!0),b.tween=i,b.pr=-1,o.pop()}if(n){for(;d;){for(x=d._next,m=y;m&&m.pr>d.pr;)m=m._next;(d._prev=m?m._prev:T)?d._prev._next=d:y=d,(d._next=m)?m._prev=d:T=d,d=x}this._firstPT=y}return!0},h.parse=function(t,e,i,n){var o,a,l,h,f,p,d,_,m,y,T=t.style;for(o in e)p=e[o],"function"==typeof p&&(p=p(v,g)),a=u[o],a?i=a.parse(t,p,o,this,i,n,e):(f=J(t,o,s)+"",m="string"==typeof p,"color"===o||"fill"===o||"stroke"===o||o.indexOf("Color")!==-1||m&&S.test(p)?(m||(p=pt(p),p=(p.length>3?"rgba(":"rgb(")+p.join(",")+")"),i=xt(T,o,f,p,!0,"transparent",i,0,n)):m&&F.test(p)?i=xt(T,o,f,p,!0,null,i,0,n):(l=parseFloat(f),d=l||0===l?f.substr((l+"").length):"",""!==f&&"auto"!==f||("width"===o||"height"===o?(l=ot(t,o,s),d="px"):"left"===o||"top"===o?(l=et(t,o,s),d="px"):(l="opacity"!==o?0:1,d="")),y=m&&"="===p.charAt(1),y?(h=parseInt(p.charAt(0)+"1",10),p=p.substr(2),h*=parseFloat(p),_=p.replace(b,"")):(h=parseFloat(p),_=m?p.replace(b,""):""),""===_&&(_=o in r?r[o]:d),p=h||0===h?(y?h+l:h)+_:e[o],d!==_&&""!==_&&(h||0===h)&&l&&(l=tt(t,o,l,d),"%"===_?(l/=tt(t,o,100,"%")/100,e.strictUnits!==!0&&(f=l+"%")):"em"===_||"rem"===_||"vw"===_||"vh"===_?l/=tt(t,o,1,_):"px"!==_&&(h=tt(t,o,h,_),_="px"),y&&(h||0===h)&&(p=h+l+_)),y&&(h+=l),!l&&0!==l||!h&&0!==h?void 0!==T[o]&&(p||p+""!="NaN"&&null!=p)?(i=new yt(T,o,h||l||0,0,i,(-1),o,(!1),0,f,p),i.xs0="none"!==p||"display"!==o&&o.indexOf("Style")===-1?p:f):V("invalid "+o+" tween value: "+e[o]):(i=new yt(T,o,l,h-l,i,0,o,c!==!1&&("px"===_||"zIndex"===o),0,f,p),i.xs0=_))),n&&i&&!i.plugin&&(i.plugin=n);return i},h.setRatio=function(t){var e,i,n,r=this._firstPT,s=1e-6;if(1!==t||this._tween._time!==this._tween._duration&&0!==this._tween._time)if(t||this._tween._time!==this._tween._duration&&0!==this._tween._time||this._tween._rawPrevTime===-1e-6)for(;r;){if(e=r.c*t+r.s,r.r?e=Math.round(e):e<s&&e>-s&&(e=0),r.type)if(1===r.type)if(n=r.l,2===n)r.t[r.p]=r.xs0+e+r.xs1+r.xn1+r.xs2;else if(3===n)r.t[r.p]=r.xs0+e+r.xs1+r.xn1+r.xs2+r.xn2+r.xs3;else if(4===n)r.t[r.p]=r.xs0+e+r.xs1+r.xn1+r.xs2+r.xn2+r.xs3+r.xn3+r.xs4;else if(5===n)r.t[r.p]=r.xs0+e+r.xs1+r.xn1+r.xs2+r.xn2+r.xs3+r.xn3+r.xs4+r.xn4+r.xs5;else{for(i=r.xs0+e+r.xs1,n=1;n<r.l;n++)i+=r["xn"+n]+r["xs"+(n+1)];r.t[r.p]=i}else r.type===-1?r.t[r.p]=r.xs0:r.setRatio&&r.setRatio(t);else r.t[r.p]=e+r.xs0;r=r._next}else for(;r;)2!==r.type?r.t[r.p]=r.b:r.setRatio(t),r=r._next;else for(;r;){if(2!==r.type)if(r.r&&r.type!==-1)if(e=Math.round(r.s+r.c),r.type){if(1===r.type){for(n=r.l,i=r.xs0+e+r.xs1,n=1;n<r.l;n++)i+=r["xn"+n]+r["xs"+(n+1)];r.t[r.p]=i}}else r.t[r.p]=e+r.xs0;else r.t[r.p]=r.e;else r.setRatio(t);r=r._next}},h._enableTransforms=function(t){this._transform=this._transform||Ht(this._target,s,!0),this._transformType=this._transform.svg&&kt||!t&&3!==this._transformType?2:3};var Gt=function(t){this.t[this.p]=this.e,this.data._linkCSSP(this,this._next,null,!0)};h._addLazySet=function(t,e,i){var n=this._firstPT=new yt(t,e,0,0,this._firstPT,2);n.e=i,n.setRatio=Gt,n.data=this},h._linkCSSP=function(t,e,i,n){return t&&(e&&(e._prev=t),t._next&&(t._next._prev=t._prev),t._prev?t._prev._next=t._next:this._firstPT===t&&(this._firstPT=t._next,n=!0),i?i._next=t:n||null!==this._firstPT||(this._firstPT=t),t._next=e,t._prev=i),t},h._mod=function(t){for(var e=this._firstPT;e;)"function"==typeof t[e.p]&&t[e.p]===Math.round&&(e.r=1),e=e._next},h._kill=function(e){var i,n,r,s=e;if(e.autoAlpha||e.alpha){s={};for(n in e)s[n]=e[n];s.opacity=1,s.autoAlpha&&(s.visibility=1)}for(e.className&&(i=this._classNamePT)&&(r=i.xfirst,r&&r._prev?this._linkCSSP(r._prev,i._next,r._prev._prev):r===this._firstPT&&(this._firstPT=i._next),i._next&&this._linkCSSP(i._next,i._next._next,r._prev),this._classNamePT=null),i=this._firstPT;i;)i.plugin&&i.plugin!==n&&i.plugin._kill&&(i.plugin._kill(e),n=i.plugin),i=i._next;return t.prototype._kill.call(this,s)};var Qt=function(t,e,i){var n,r,s,o;if(t.slice)for(r=t.length;--r>-1;)Qt(t[r],e,i);else for(n=t.childNodes,r=n.length;--r>-1;)s=n[r],o=s.type,s.style&&(e.push(it(s)),i&&i.push(s)),1!==o&&9!==o&&11!==o||!s.childNodes.length||Qt(s,e,i)};return a.cascadeTo=function(t,i,n){var r,s,o,a,l=e.to(t,i,n),u=[l],h=[],c=[],f=[],p=e._internals.reservedProps;for(t=l._targets||l.target,Qt(t,h,f),l.render(i,!0,!0),Qt(t,c),l.render(0,!0,!0),l._enabled(!0),r=f.length;--r>-1;)if(s=nt(f[r],h[r],c[r]),s.firstMPT){s=s.difs;for(o in n)p[o]&&(s[o]=n[o]);a={};for(o in s)a[o]=h[r][o];u.push(e.fromTo(f[r],i,a,s))}return u},t.activate([a]),a},!0),function(){var t=i._gsDefine.plugin({propName:"roundProps",version:"1.6.0",priority:-1,API:2,init:function(t,e,i){return this._tween=i,!0}}),e=function(t){for(;t;)t.f||t.blob||(t.m=Math.round),t=t._next},n=t.prototype;n._onInitAllProps=function(){for(var t,i,n,r=this._tween,s=r.vars.roundProps.join?r.vars.roundProps:r.vars.roundProps.split(","),o=s.length,a={},l=r._propLookup.roundProps;--o>-1;)a[s[o]]=Math.round;for(o=s.length;--o>-1;)for(t=s[o],i=r._firstPT;i;)n=i._next,i.pg?i.t._mod(a):i.n===t&&(2===i.f&&i.t?e(i.t._firstPT):(this._add(i.t,t,i.s,i.c),n&&(n._prev=i._prev),i._prev?i._prev._next=n:r._firstPT===i&&(r._firstPT=n),i._next=i._prev=null,r._propLookup[t]=l)),i=n;return!1},n._add=function(t,e,i,n){this._addTween(t,e,i,i+n,e,Math.round),this._overwriteProps.push(e)}}(),function(){i._gsDefine.plugin({propName:"attr",API:2,version:"0.6.0",init:function(t,e,i,n){var r,s;if("function"!=typeof t.setAttribute)return!1;for(r in e)s=e[r],"function"==typeof s&&(s=s(n,t)),this._addTween(t,"setAttribute",t.getAttribute(r)+"",s+"",r,!1,r),this._overwriteProps.push(r);return!0}})}(),i._gsDefine.plugin({propName:"directionalRotation",version:"0.3.0",API:2,init:function(t,e,i,n){"object"!=typeof e&&(e={rotation:e}),this.finals={};var r,s,o,a,l,u,h=e.useRadians===!0?2*Math.PI:360,c=1e-6;for(r in e)"useRadians"!==r&&(a=e[r],"function"==typeof a&&(a=a(n,t)),u=(a+"").split("_"),s=u[0],o=parseFloat("function"!=typeof t[r]?t[r]:t[r.indexOf("set")||"function"!=typeof t["get"+r.substr(3)]?r:"get"+r.substr(3)]()),a=this.finals[r]="string"==typeof s&&"="===s.charAt(1)?o+parseInt(s.charAt(0)+"1",10)*Number(s.substr(2)):Number(s)||0,l=a-o,u.length&&(s=u.join("_"),s.indexOf("short")!==-1&&(l%=h,l!==l%(h/2)&&(l=l<0?l+h:l-h)),s.indexOf("_cw")!==-1&&l<0?l=(l+9999999999*h)%h-(l/h|0)*h:s.indexOf("ccw")!==-1&&l>0&&(l=(l-9999999999*h)%h-(l/h|0)*h)),(l>c||l<-c)&&(this._addTween(t,r,o,o+l,r),this._overwriteProps.push(r)));return!0},set:function(t){var e;if(1!==t)this._super.setRatio.call(this,t);else for(e=this._firstPT;e;)e.f?e.t[e.p](this.finals[e.p]):e.t[e.p]=this.finals[e.p],e=e._next}})._autoCSS=!0,i._gsDefine("easing.Back",["easing.Ease"],function(t){var e,n,r,s=i.GreenSockGlobals||i,o=s.com.greensock,a=2*Math.PI,l=Math.PI/2,u=o._class,h=function(e,i){var n=u("easing."+e,function(){},!0),r=n.prototype=new t;return r.constructor=n,r.getRatio=i,n},c=t.register||function(){},f=function(t,e,i,n,r){var s=u("easing."+t,{easeOut:new e,easeIn:new i,easeInOut:new n},!0);return c(s,t),s},p=function(t,e,i){this.t=t,this.v=e,i&&(this.next=i,i.prev=this,this.c=i.v-e,this.gap=i.t-t)},d=function(e,i){var n=u("easing."+e,function(t){this._p1=t||0===t?t:1.70158,this._p2=1.525*this._p1},!0),r=n.prototype=new t;return r.constructor=n,r.getRatio=i,r.config=function(t){return new n(t)},n},_=f("Back",d("BackOut",function(t){return(t-=1)*t*((this._p1+1)*t+this._p1)+1}),d("BackIn",function(t){return t*t*((this._p1+1)*t-this._p1)}),d("BackInOut",function(t){return(t*=2)<1?.5*t*t*((this._p2+1)*t-this._p2):.5*((t-=2)*t*((this._p2+1)*t+this._p2)+2)})),m=u("easing.SlowMo",function(t,e,i){e=e||0===e?e:.7,null==t?t=.7:t>1&&(t=1),this._p=1!==t?e:0,this._p1=(1-t)/2,this._p2=t,this._p3=this._p1+this._p2,this._calcEnd=i===!0},!0),g=m.prototype=new t;return g.constructor=m,g.getRatio=function(t){var e=t+(.5-t)*this._p;return t<this._p1?this._calcEnd?1-(t=1-t/this._p1)*t:e-(t=1-t/this._p1)*t*t*t*e:t>this._p3?this._calcEnd?1-(t=(t-this._p3)/this._p1)*t:e+(t-e)*(t=(t-this._p3)/this._p1)*t*t*t:this._calcEnd?1:e},m.ease=new m(.7,.7),g.config=m.config=function(t,e,i){return new m(t,e,i)},e=u("easing.SteppedEase",function(t){t=t||1,this._p1=1/t,this._p2=t+1},!0),g=e.prototype=new t,g.constructor=e,g.getRatio=function(t){return t<0?t=0:t>=1&&(t=.999999999),(this._p2*t>>0)*this._p1},g.config=e.config=function(t){return new e(t)},n=u("easing.RoughEase",function(e){e=e||{};for(var i,n,r,s,o,a,l=e.taper||"none",u=[],h=0,c=0|(e.points||20),f=c,d=e.randomize!==!1,_=e.clamp===!0,m=e.template instanceof t?e.template:null,g="number"==typeof e.strength?.4*e.strength:.4;--f>-1;)i=d?Math.random():1/c*f,n=m?m.getRatio(i):i,"none"===l?r=g:"out"===l?(s=1-i,r=s*s*g):"in"===l?r=i*i*g:i<.5?(s=2*i,r=s*s*.5*g):(s=2*(1-i),r=s*s*.5*g),d?n+=Math.random()*r-.5*r:f%2?n+=.5*r:n-=.5*r,_&&(n>1?n=1:n<0&&(n=0)),u[h++]={x:i,y:n};for(u.sort(function(t,e){return t.x-e.x}),a=new p(1,1,null),f=c;--f>-1;)o=u[f],a=new p(o.x,o.y,a);this._prev=new p(0,0,0!==a.t?a:a.next)},!0),g=n.prototype=new t,g.constructor=n,g.getRatio=function(t){var e=this._prev;if(t>e.t){for(;e.next&&t>=e.t;)e=e.next;e=e.prev}else for(;e.prev&&t<=e.t;)e=e.prev;return this._prev=e,e.v+(t-e.t)/e.gap*e.c},g.config=function(t){return new n(t)},n.ease=new n,f("Bounce",h("BounceOut",function(t){return t<1/2.75?7.5625*t*t:t<2/2.75?7.5625*(t-=1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375}),h("BounceIn",function(t){return(t=1-t)<1/2.75?1-7.5625*t*t:t<2/2.75?1-(7.5625*(t-=1.5/2.75)*t+.75):t<2.5/2.75?1-(7.5625*(t-=2.25/2.75)*t+.9375):1-(7.5625*(t-=2.625/2.75)*t+.984375)}),h("BounceInOut",function(t){var e=t<.5;return t=e?1-2*t:2*t-1,t=t<1/2.75?7.5625*t*t:t<2/2.75?7.5625*(t-=1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375,e?.5*(1-t):.5*t+.5})),f("Circ",h("CircOut",function(t){return Math.sqrt(1-(t-=1)*t)}),h("CircIn",function(t){return-(Math.sqrt(1-t*t)-1)}),h("CircInOut",function(t){return(t*=2)<1?-.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-=2)*t)+1)})),r=function(e,i,n){var r=u("easing."+e,function(t,e){this._p1=t>=1?t:1,this._p2=(e||n)/(t<1?t:1),this._p3=this._p2/a*(Math.asin(1/this._p1)||0),this._p2=a/this._p2},!0),s=r.prototype=new t;return s.constructor=r,s.getRatio=i,s.config=function(t,e){return new r(t,e)},r},f("Elastic",r("ElasticOut",function(t){return this._p1*Math.pow(2,-10*t)*Math.sin((t-this._p3)*this._p2)+1},.3),r("ElasticIn",function(t){return-(this._p1*Math.pow(2,10*(t-=1))*Math.sin((t-this._p3)*this._p2))},.3),r("ElasticInOut",function(t){return(t*=2)<1?-.5*(this._p1*Math.pow(2,10*(t-=1))*Math.sin((t-this._p3)*this._p2)):this._p1*Math.pow(2,-10*(t-=1))*Math.sin((t-this._p3)*this._p2)*.5+1},.45)),f("Expo",h("ExpoOut",function(t){return 1-Math.pow(2,-10*t)}),h("ExpoIn",function(t){return Math.pow(2,10*(t-1))-.001}),h("ExpoInOut",function(t){return(t*=2)<1?.5*Math.pow(2,10*(t-1)):.5*(2-Math.pow(2,-10*(t-1)))})),f("Sine",h("SineOut",function(t){return Math.sin(t*l)}),h("SineIn",function(t){return-Math.cos(t*l)+1}),h("SineInOut",function(t){return-.5*(Math.cos(Math.PI*t)-1)})),u("easing.EaseLookup",{find:function(e){return t.map[e]}},!0),c(s.SlowMo,"SlowMo","ease,"),c(n,"RoughEase","ease,"),c(e,"SteppedEase","ease,"),_},!0)}),i._gsDefine&&i._gsQueue.pop()(),function(t,i){"use strict";var n={},r=t.GreenSockGlobals=t.GreenSockGlobals||t;if(!r.TweenLite){var s,o,a,l,u,h=function(t){var e,i=t.split("."),n=r;for(e=0;e<i.length;e++)n[i[e]]=n=n[i[e]]||{};return n},c=h("com.greensock"),f=1e-10,p=function(t){var e,i=[],n=t.length;for(e=0;e!==n;i.push(t[e++]));return i},d=function(){},_=function(){var t=Object.prototype.toString,e=t.call([]);return function(i){return null!=i&&(i instanceof Array||"object"==typeof i&&!!i.push&&t.call(i)===e)}}(),m={},g=function(s,o,a,l){this.sc=m[s]?m[s].sc:[],m[s]=this,this.gsClass=null,this.func=a;var u=[];this.check=function(c){for(var f,p,d,_,v,y=o.length,T=y;--y>-1;)(f=m[o[y]]||new g(o[y],[])).gsClass?(u[y]=f.gsClass,T--):c&&f.sc.push(this);if(0===T&&a){if(p=("com.greensock."+s).split("."),d=p.pop(),_=h(p.join("."))[d]=this.gsClass=a.apply(a,u),l)if(r[d]=n[d]=_,v="undefined"!=typeof e&&e.exports,!v&&"function"==typeof define&&define.amd)define((t.GreenSockAMDPath?t.GreenSockAMDPath+"/":"")+s.split(".").pop(),[],function(){return _});else if(v)if(s===i){e.exports=n[i]=_;for(y in n)_[y]=n[y]}else n[i]&&(n[i][d]=_);for(y=0;y<this.sc.length;y++)this.sc[y].check()}},this.check(!0)},v=t._gsDefine=function(t,e,i,n){return new g(t,e,i,n)},y=c._class=function(t,e,i){return e=e||function(){},v(t,[],function(){return e},i),e};v.globals=r;var T=[0,0,1,1],x=y("easing.Ease",function(t,e,i,n){this._func=t,this._type=i||0,this._power=n||0,this._params=e?T.concat(e):T},!0),w=x.map={},b=x.register=function(t,e,i,n){for(var r,s,o,a,l=e.split(","),u=l.length,h=(i||"easeIn,easeOut,easeInOut").split(",");--u>-1;)for(s=l[u],r=n?y("easing."+s,null,!0):c.easing[s]||{},o=h.length;--o>-1;)a=h[o],w[s+"."+a]=w[a+s]=r[a]=t.getRatio?t:t[a]||new t};for(a=x.prototype,a._calcEnd=!1,a.getRatio=function(t){if(this._func)return this._params[0]=t,this._func.apply(null,this._params);var e=this._type,i=this._power,n=1===e?1-t:2===e?t:t<.5?2*t:2*(1-t);return 1===i?n*=n:2===i?n*=n*n:3===i?n*=n*n*n:4===i&&(n*=n*n*n*n),1===e?1-n:2===e?n:t<.5?n/2:1-n/2},s=["Linear","Quad","Cubic","Quart","Quint,Strong"],o=s.length;--o>-1;)a=s[o]+",Power"+o,b(new x(null,null,1,o),a,"easeOut",!0),b(new x(null,null,2,o),a,"easeIn"+(0===o?",easeNone":"")),b(new x(null,null,3,o),a,"easeInOut");w.linear=c.easing.Linear.easeIn,w.swing=c.easing.Quad.easeInOut;var P=y("events.EventDispatcher",function(t){this._listeners={},this._eventTarget=t||this});a=P.prototype,a.addEventListener=function(t,e,i,n,r){r=r||0;var s,o,a=this._listeners[t],h=0;for(this!==l||u||l.wake(),null==a&&(this._listeners[t]=a=[]),o=a.length;--o>-1;)s=a[o],s.c===e&&s.s===i?a.splice(o,1):0===h&&s.pr<r&&(h=o+1);a.splice(h,0,{c:e,s:i,up:n,pr:r})},a.removeEventListener=function(t,e){var i,n=this._listeners[t];if(n)for(i=n.length;--i>-1;)if(n[i].c===e)return void n.splice(i,1)},a.dispatchEvent=function(t){var e,i,n,r=this._listeners[t];if(r)for(e=r.length,e>1&&(r=r.slice(0)),i=this._eventTarget;--e>-1;)n=r[e],n&&(n.up?n.c.call(n.s||i,{type:t,target:i}):n.c.call(n.s||i))};var C=t.requestAnimationFrame,k=t.cancelAnimationFrame,S=Date.now||function(){return(new Date).getTime()},A=S();for(s=["ms","moz","webkit","o"],o=s.length;--o>-1&&!C;)C=t[s[o]+"RequestAnimationFrame"],k=t[s[o]+"CancelAnimationFrame"]||t[s[o]+"CancelRequestAnimationFrame"];y("Ticker",function(t,e){var i,n,r,s,o,a=this,h=S(),c=!(e===!1||!C)&&"auto",p=500,_=33,m="tick",g=function(t){var e,l,u=S()-A;u>p&&(h+=u-_),A+=u,a.time=(A-h)/1e3,e=a.time-o,(!i||e>0||t===!0)&&(a.frame++,o+=e+(e>=s?.004:s-e),l=!0),t!==!0&&(r=n(g)),l&&a.dispatchEvent(m)};P.call(a),a.time=a.frame=0,a.tick=function(){g(!0)},a.lagSmoothing=function(t,e){p=t||1/f,_=Math.min(e,p,0)},a.sleep=function(){null!=r&&(c&&k?k(r):clearTimeout(r),n=d,r=null,a===l&&(u=!1))},a.wake=function(t){null!==r?a.sleep():t?h+=-A+(A=S()):a.frame>10&&(A=S()-p+5),n=0===i?d:c&&C?C:function(t){return setTimeout(t,1e3*(o-a.time)+1|0)},a===l&&(u=!0),g(2)},a.fps=function(t){return arguments.length?(i=t,s=1/(i||60),o=this.time+s,void a.wake()):i},a.useRAF=function(t){return arguments.length?(a.sleep(),c=t,void a.fps(i)):c},a.fps(t),setTimeout(function(){"auto"===c&&a.frame<5&&"hidden"!==document.visibilityState&&a.useRAF(!1)},1500)}),a=c.Ticker.prototype=new c.events.EventDispatcher,a.constructor=c.Ticker;var D=y("core.Animation",function(t,e){if(this.vars=e=e||{},this._duration=this._totalDuration=t||0,this._delay=Number(e.delay)||0,this._timeScale=1,this._active=e.immediateRender===!0,this.data=e.data,this._reversed=e.reversed===!0,V){u||l.wake();var i=this.vars.useFrames?$:V;i.add(this,i._time),this.vars.paused&&this.paused(!0)}});l=D.ticker=new c.Ticker,a=D.prototype,a._dirty=a._gc=a._initted=a._paused=!1,a._totalTime=a._time=0,a._rawPrevTime=-1,a._next=a._last=a._onUpdate=a._timeline=a.timeline=null,a._paused=!1;var O=function(){u&&S()-A>2e3&&l.wake(),setTimeout(O,2e3)};O(),a.play=function(t,e){return null!=t&&this.seek(t,e),this.reversed(!1).paused(!1)},a.pause=function(t,e){return null!=t&&this.seek(t,e),this.paused(!0)},a.resume=function(t,e){return null!=t&&this.seek(t,e),this.paused(!1)},a.seek=function(t,e){return this.totalTime(Number(t),e!==!1)},a.restart=function(t,e){return this.reversed(!1).paused(!1).totalTime(t?-this._delay:0,e!==!1,!0)},a.reverse=function(t,e){return null!=t&&this.seek(t||this.totalDuration(),e),this.reversed(!0).paused(!1)},a.render=function(t,e,i){},a.invalidate=function(){return this._time=this._totalTime=0,this._initted=this._gc=!1,this._rawPrevTime=-1,!this._gc&&this.timeline||this._enabled(!0),this},a.isActive=function(){var t,e=this._timeline,i=this._startTime;return!e||!this._gc&&!this._paused&&e.isActive()&&(t=e.rawTime())>=i&&t<i+this.totalDuration()/this._timeScale},a._enabled=function(t,e){return u||l.wake(),this._gc=!t,this._active=this.isActive(),e!==!0&&(t&&!this.timeline?this._timeline.add(this,this._startTime-this._delay):!t&&this.timeline&&this._timeline._remove(this,!0)),!1},a._kill=function(t,e){return this._enabled(!1,!1)},a.kill=function(t,e){return this._kill(t,e),this},a._uncache=function(t){for(var e=t?this:this.timeline;e;)e._dirty=!0,e=e.timeline;return this},a._swapSelfInParams=function(t){for(var e=t.length,i=t.concat();--e>-1;)"{self}"===t[e]&&(i[e]=this);return i},a._callback=function(t){var e=this.vars,i=e[t],n=e[t+"Params"],r=e[t+"Scope"]||e.callbackScope||this,s=n?n.length:0;switch(s){case 0:i.call(r);break;case 1:i.call(r,n[0]);break;case 2:i.call(r,n[0],n[1]);break;default:i.apply(r,n)}},a.eventCallback=function(t,e,i,n){if("on"===(t||"").substr(0,2)){var r=this.vars;if(1===arguments.length)return r[t];null==e?delete r[t]:(r[t]=e,r[t+"Params"]=_(i)&&i.join("").indexOf("{self}")!==-1?this._swapSelfInParams(i):i,r[t+"Scope"]=n),"onUpdate"===t&&(this._onUpdate=e)}return this},a.delay=function(t){return arguments.length?(this._timeline.smoothChildTiming&&this.startTime(this._startTime+t-this._delay),this._delay=t,this):this._delay},a.duration=function(t){return arguments.length?(this._duration=this._totalDuration=t,this._uncache(!0),this._timeline.smoothChildTiming&&this._time>0&&this._time<this._duration&&0!==t&&this.totalTime(this._totalTime*(t/this._duration),!0),this):(this._dirty=!1,this._duration)},a.totalDuration=function(t){return this._dirty=!1,arguments.length?this.duration(t):this._totalDuration},a.time=function(t,e){return arguments.length?(this._dirty&&this.totalDuration(),this.totalTime(t>this._duration?this._duration:t,e)):this._time},a.totalTime=function(t,e,i){if(u||l.wake(),!arguments.length)return this._totalTime;if(this._timeline){if(t<0&&!i&&(t+=this.totalDuration()),this._timeline.smoothChildTiming){this._dirty&&this.totalDuration();var n=this._totalDuration,r=this._timeline;if(t>n&&!i&&(t=n),this._startTime=(this._paused?this._pauseTime:r._time)-(this._reversed?n-t:t)/this._timeScale,r._dirty||this._uncache(!1),r._timeline)for(;r._timeline;)r._timeline._time!==(r._startTime+r._totalTime)/r._timeScale&&r.totalTime(r._totalTime,!0),r=r._timeline}this._gc&&this._enabled(!0,!1),this._totalTime===t&&0!==this._duration||(M.length&&Q(),this.render(t,e,!1),M.length&&Q())}return this},a.progress=a.totalProgress=function(t,e){var i=this.duration();return arguments.length?this.totalTime(i*t,e):i?this._time/i:this.ratio},a.startTime=function(t){return arguments.length?(t!==this._startTime&&(this._startTime=t,this.timeline&&this.timeline._sortChildren&&this.timeline.add(this,t-this._delay)),this):this._startTime},a.endTime=function(t){return this._startTime+(0!=t?this.totalDuration():this.duration())/this._timeScale},a.timeScale=function(t){if(!arguments.length)return this._timeScale;if(t=t||f,this._timeline&&this._timeline.smoothChildTiming){var e=this._pauseTime,i=e||0===e?e:this._timeline.totalTime();this._startTime=i-(i-this._startTime)*this._timeScale/t}return this._timeScale=t,this._uncache(!1)},a.reversed=function(t){return arguments.length?(t!=this._reversed&&(this._reversed=t,this.totalTime(this._timeline&&!this._timeline.smoothChildTiming?this.totalDuration()-this._totalTime:this._totalTime,!0)),this):this._reversed},a.paused=function(t){if(!arguments.length)return this._paused;var e,i,n=this._timeline;return t!=this._paused&&n&&(u||t||l.wake(),e=n.rawTime(),i=e-this._pauseTime,!t&&n.smoothChildTiming&&(this._startTime+=i,this._uncache(!1)),this._pauseTime=t?e:null,this._paused=t,
this._active=this.isActive(),!t&&0!==i&&this._initted&&this.duration()&&(e=n.smoothChildTiming?this._totalTime:(e-this._startTime)/this._timeScale,this.render(e,e===this._totalTime,!0))),this._gc&&!t&&this._enabled(!0,!1),this};var R=y("core.SimpleTimeline",function(t){D.call(this,0,t),this.autoRemoveChildren=this.smoothChildTiming=!0});a=R.prototype=new D,a.constructor=R,a.kill()._gc=!1,a._first=a._last=a._recent=null,a._sortChildren=!1,a.add=a.insert=function(t,e,i,n){var r,s;if(t._startTime=Number(e||0)+t._delay,t._paused&&this!==t._timeline&&(t._pauseTime=t._startTime+(this.rawTime()-t._startTime)/t._timeScale),t.timeline&&t.timeline._remove(t,!0),t.timeline=t._timeline=this,t._gc&&t._enabled(!0,!0),r=this._last,this._sortChildren)for(s=t._startTime;r&&r._startTime>s;)r=r._prev;return r?(t._next=r._next,r._next=t):(t._next=this._first,this._first=t),t._next?t._next._prev=t:this._last=t,t._prev=r,this._recent=t,this._timeline&&this._uncache(!0),this},a._remove=function(t,e){return t.timeline===this&&(e||t._enabled(!1,!0),t._prev?t._prev._next=t._next:this._first===t&&(this._first=t._next),t._next?t._next._prev=t._prev:this._last===t&&(this._last=t._prev),t._next=t._prev=t.timeline=null,t===this._recent&&(this._recent=this._last),this._timeline&&this._uncache(!0)),this},a.render=function(t,e,i){var n,r=this._first;for(this._totalTime=this._time=this._rawPrevTime=t;r;)n=r._next,(r._active||t>=r._startTime&&!r._paused)&&(r._reversed?r.render((r._dirty?r.totalDuration():r._totalDuration)-(t-r._startTime)*r._timeScale,e,i):r.render((t-r._startTime)*r._timeScale,e,i)),r=n},a.rawTime=function(){return u||l.wake(),this._totalTime};var j=y("TweenLite",function(e,i,n){if(D.call(this,i,n),this.render=j.prototype.render,null==e)throw"Cannot tween a null target.";this.target=e="string"!=typeof e?e:j.selector(e)||e;var r,s,o,a=e.jquery||e.length&&e!==t&&e[0]&&(e[0]===t||e[0].nodeType&&e[0].style&&!e.nodeType),l=this.vars.overwrite;if(this._overwrite=l=null==l?Y[j.defaultOverwrite]:"number"==typeof l?l>>0:Y[l],(a||e instanceof Array||e.push&&_(e))&&"number"!=typeof e[0])for(this._targets=o=p(e),this._propLookup=[],this._siblings=[],r=0;r<o.length;r++)s=o[r],s?"string"!=typeof s?s.length&&s!==t&&s[0]&&(s[0]===t||s[0].nodeType&&s[0].style&&!s.nodeType)?(o.splice(r--,1),this._targets=o=o.concat(p(s))):(this._siblings[r]=K(s,this,!1),1===l&&this._siblings[r].length>1&&J(s,this,null,1,this._siblings[r])):(s=o[r--]=j.selector(s),"string"==typeof s&&o.splice(r+1,1)):o.splice(r--,1);else this._propLookup={},this._siblings=K(e,this,!1),1===l&&this._siblings.length>1&&J(e,this,null,1,this._siblings);(this.vars.immediateRender||0===i&&0===this._delay&&this.vars.immediateRender!==!1)&&(this._time=-f,this.render(Math.min(0,-this._delay)))},!0),E=function(e){return e&&e.length&&e!==t&&e[0]&&(e[0]===t||e[0].nodeType&&e[0].style&&!e.nodeType)},L=function(t,e){var i,n={};for(i in t)U[i]||i in e&&"transform"!==i&&"x"!==i&&"y"!==i&&"width"!==i&&"height"!==i&&"className"!==i&&"border"!==i||!(!H[i]||H[i]&&H[i]._autoCSS)||(n[i]=t[i],delete t[i]);t.css=n};a=j.prototype=new D,a.constructor=j,a.kill()._gc=!1,a.ratio=0,a._firstPT=a._targets=a._overwrittenProps=a._startAt=null,a._notifyPluginsOfEnabled=a._lazy=!1,j.version="1.19.0",j.defaultEase=a._ease=new x(null,null,1,1),j.defaultOverwrite="auto",j.ticker=l,j.autoSleep=120,j.lagSmoothing=function(t,e){l.lagSmoothing(t,e)},j.selector=t.$||t.jQuery||function(e){var i=t.$||t.jQuery;return i?(j.selector=i,i(e)):"undefined"==typeof document?e:document.querySelectorAll?document.querySelectorAll(e):document.getElementById("#"===e.charAt(0)?e.substr(1):e)};var M=[],F={},N=/(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi,q=function(t){for(var e,i=this._firstPT,n=1e-6;i;)e=i.blob?t?this.join(""):this.start:i.c*t+i.s,i.m?e=i.m(e,this._target||i.t):e<n&&e>-n&&(e=0),i.f?i.fp?i.t[i.p](i.fp,e):i.t[i.p](e):i.t[i.p]=e,i=i._next},I=function(t,e,i,n){var r,s,o,a,l,u,h,c=[t,e],f=0,p="",d=0;for(c.start=t,i&&(i(c),t=c[0],e=c[1]),c.length=0,r=t.match(N)||[],s=e.match(N)||[],n&&(n._next=null,n.blob=1,c._firstPT=c._applyPT=n),l=s.length,a=0;a<l;a++)h=s[a],u=e.substr(f,e.indexOf(h,f)-f),p+=u||!a?u:",",f+=u.length,d?d=(d+1)%5:"rgba("===u.substr(-5)&&(d=1),h===r[a]||r.length<=a?p+=h:(p&&(c.push(p),p=""),o=parseFloat(r[a]),c.push(o),c._firstPT={_next:c._firstPT,t:c,p:c.length-1,s:o,c:("="===h.charAt(1)?parseInt(h.charAt(0)+"1",10)*parseFloat(h.substr(2)):parseFloat(h)-o)||0,f:0,m:d&&d<4?Math.round:0}),f+=h.length;return p+=e.substr(f),p&&c.push(p),c.setRatio=q,c},z=function(t,e,i,n,r,s,o,a,l){"function"==typeof n&&(n=n(l||0,t));var u,h,c="get"===i?t[e]:i,f=typeof t[e],p="string"==typeof n&&"="===n.charAt(1),d={t:t,p:e,s:c,f:"function"===f,pg:0,n:r||e,m:s?"function"==typeof s?s:Math.round:0,pr:0,c:p?parseInt(n.charAt(0)+"1",10)*parseFloat(n.substr(2)):parseFloat(n)-c||0};if("number"!==f&&("function"===f&&"get"===i&&(h=e.indexOf("set")||"function"!=typeof t["get"+e.substr(3)]?e:"get"+e.substr(3),d.s=c=o?t[h](o):t[h]()),"string"==typeof c&&(o||isNaN(c))?(d.fp=o,u=I(c,n,a||j.defaultStringFilter,d),d={t:u,p:"setRatio",s:0,c:1,f:2,pg:0,n:r||e,pr:0,m:0}):p||(d.s=parseFloat(c),d.c=parseFloat(n)-d.s||0)),d.c)return(d._next=this._firstPT)&&(d._next._prev=d),this._firstPT=d,d},B=j._internals={isArray:_,isSelector:E,lazyTweens:M,blobDif:I},H=j._plugins={},X=B.tweenLookup={},W=0,U=B.reservedProps={ease:1,delay:1,overwrite:1,onComplete:1,onCompleteParams:1,onCompleteScope:1,useFrames:1,runBackwards:1,startAt:1,onUpdate:1,onUpdateParams:1,onUpdateScope:1,onStart:1,onStartParams:1,onStartScope:1,onReverseComplete:1,onReverseCompleteParams:1,onReverseCompleteScope:1,onRepeat:1,onRepeatParams:1,onRepeatScope:1,easeParams:1,yoyo:1,immediateRender:1,repeat:1,repeatDelay:1,data:1,paused:1,reversed:1,autoCSS:1,lazy:1,onOverwrite:1,callbackScope:1,stringFilter:1,id:1},Y={none:0,all:1,auto:2,concurrent:3,allOnStart:4,preexisting:5,true:1,false:0},$=D._rootFramesTimeline=new R,V=D._rootTimeline=new R,G=30,Q=B.lazyRender=function(){var t,e=M.length;for(F={};--e>-1;)t=M[e],t&&t._lazy!==!1&&(t.render(t._lazy[0],t._lazy[1],!0),t._lazy=!1);M.length=0};V._startTime=l.time,$._startTime=l.frame,V._active=$._active=!0,setTimeout(Q,1),D._updateRoot=j.render=function(){var t,e,i;if(M.length&&Q(),V.render((l.time-V._startTime)*V._timeScale,!1,!1),$.render((l.frame-$._startTime)*$._timeScale,!1,!1),M.length&&Q(),l.frame>=G){G=l.frame+(parseInt(j.autoSleep,10)||120);for(i in X){for(e=X[i].tweens,t=e.length;--t>-1;)e[t]._gc&&e.splice(t,1);0===e.length&&delete X[i]}if(i=V._first,(!i||i._paused)&&j.autoSleep&&!$._first&&1===l._listeners.tick.length){for(;i&&i._paused;)i=i._next;i||l.sleep()}}},l.addEventListener("tick",D._updateRoot);var K=function(t,e,i){var n,r,s=t._gsTweenID;if(X[s||(t._gsTweenID=s="t"+W++)]||(X[s]={target:t,tweens:[]}),e&&(n=X[s].tweens,n[r=n.length]=e,i))for(;--r>-1;)n[r]===e&&n.splice(r,1);return X[s].tweens},Z=function(t,e,i,n){var r,s,o=t.vars.onOverwrite;return o&&(r=o(t,e,i,n)),o=j.onOverwrite,o&&(s=o(t,e,i,n)),r!==!1&&s!==!1},J=function(t,e,i,n,r){var s,o,a,l;if(1===n||n>=4){for(l=r.length,s=0;s<l;s++)if((a=r[s])!==e)a._gc||a._kill(null,t,e)&&(o=!0);else if(5===n)break;return o}var u,h=e._startTime+f,c=[],p=0,d=0===e._duration;for(s=r.length;--s>-1;)(a=r[s])===e||a._gc||a._paused||(a._timeline!==e._timeline?(u=u||tt(e,0,d),0===tt(a,u,d)&&(c[p++]=a)):a._startTime<=h&&a._startTime+a.totalDuration()/a._timeScale>h&&((d||!a._initted)&&h-a._startTime<=2e-10||(c[p++]=a)));for(s=p;--s>-1;)if(a=c[s],2===n&&a._kill(i,t,e)&&(o=!0),2!==n||!a._firstPT&&a._initted){if(2!==n&&!Z(a,e))continue;a._enabled(!1,!1)&&(o=!0)}return o},tt=function(t,e,i){for(var n=t._timeline,r=n._timeScale,s=t._startTime;n._timeline;){if(s+=n._startTime,r*=n._timeScale,n._paused)return-100;n=n._timeline}return s/=r,s>e?s-e:i&&s===e||!t._initted&&s-e<2*f?f:(s+=t.totalDuration()/t._timeScale/r)>e+f?0:s-e-f};a._init=function(){var t,e,i,n,r,s,o=this.vars,a=this._overwrittenProps,l=this._duration,u=!!o.immediateRender,h=o.ease;if(o.startAt){this._startAt&&(this._startAt.render(-1,!0),this._startAt.kill()),r={};for(n in o.startAt)r[n]=o.startAt[n];if(r.overwrite=!1,r.immediateRender=!0,r.lazy=u&&o.lazy!==!1,r.startAt=r.delay=null,this._startAt=j.to(this.target,0,r),u)if(this._time>0)this._startAt=null;else if(0!==l)return}else if(o.runBackwards&&0!==l)if(this._startAt)this._startAt.render(-1,!0),this._startAt.kill(),this._startAt=null;else{0!==this._time&&(u=!1),i={};for(n in o)U[n]&&"autoCSS"!==n||(i[n]=o[n]);if(i.overwrite=0,i.data="isFromStart",i.lazy=u&&o.lazy!==!1,i.immediateRender=u,this._startAt=j.to(this.target,0,i),u){if(0===this._time)return}else this._startAt._init(),this._startAt._enabled(!1),this.vars.immediateRender&&(this._startAt=null)}if(this._ease=h=h?h instanceof x?h:"function"==typeof h?new x(h,o.easeParams):w[h]||j.defaultEase:j.defaultEase,o.easeParams instanceof Array&&h.config&&(this._ease=h.config.apply(h,o.easeParams)),this._easeType=this._ease._type,this._easePower=this._ease._power,this._firstPT=null,this._targets)for(s=this._targets.length,t=0;t<s;t++)this._initProps(this._targets[t],this._propLookup[t]={},this._siblings[t],a?a[t]:null,t)&&(e=!0);else e=this._initProps(this.target,this._propLookup,this._siblings,a,0);if(e&&j._onPluginEvent("_onInitAllProps",this),a&&(this._firstPT||"function"!=typeof this.target&&this._enabled(!1,!1)),o.runBackwards)for(i=this._firstPT;i;)i.s+=i.c,i.c=-i.c,i=i._next;this._onUpdate=o.onUpdate,this._initted=!0},a._initProps=function(e,i,n,r,s){var o,a,l,u,h,c;if(null==e)return!1;F[e._gsTweenID]&&Q(),this.vars.css||e.style&&e!==t&&e.nodeType&&H.css&&this.vars.autoCSS!==!1&&L(this.vars,e);for(o in this.vars)if(c=this.vars[o],U[o])c&&(c instanceof Array||c.push&&_(c))&&c.join("").indexOf("{self}")!==-1&&(this.vars[o]=c=this._swapSelfInParams(c,this));else if(H[o]&&(u=new H[o])._onInitTween(e,this.vars[o],this,s)){for(this._firstPT=h={_next:this._firstPT,t:u,p:"setRatio",s:0,c:1,f:1,n:o,pg:1,pr:u._priority,m:0},a=u._overwriteProps.length;--a>-1;)i[u._overwriteProps[a]]=this._firstPT;(u._priority||u._onInitAllProps)&&(l=!0),(u._onDisable||u._onEnable)&&(this._notifyPluginsOfEnabled=!0),h._next&&(h._next._prev=h)}else i[o]=z.call(this,e,o,"get",c,o,0,null,this.vars.stringFilter,s);return r&&this._kill(r,e)?this._initProps(e,i,n,r,s):this._overwrite>1&&this._firstPT&&n.length>1&&J(e,this,i,this._overwrite,n)?(this._kill(i,e),this._initProps(e,i,n,r,s)):(this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration)&&(F[e._gsTweenID]=!0),l)},a.render=function(t,e,i){var n,r,s,o,a=this._time,l=this._duration,u=this._rawPrevTime;if(t>=l-1e-7)this._totalTime=this._time=l,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1,this._reversed||(n=!0,r="onComplete",i=i||this._timeline.autoRemoveChildren),0===l&&(this._initted||!this.vars.lazy||i)&&(this._startTime===this._timeline._duration&&(t=0),(u<0||t<=0&&t>=-1e-7||u===f&&"isPause"!==this.data)&&u!==t&&(i=!0,u>f&&(r="onReverseComplete")),this._rawPrevTime=o=!e||t||u===t?t:f);else if(t<1e-7)this._totalTime=this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==a||0===l&&u>0)&&(r="onReverseComplete",n=this._reversed),t<0&&(this._active=!1,0===l&&(this._initted||!this.vars.lazy||i)&&(u>=0&&(u!==f||"isPause"!==this.data)&&(i=!0),this._rawPrevTime=o=!e||t||u===t?t:f)),this._initted||(i=!0);else if(this._totalTime=this._time=t,this._easeType){var h=t/l,c=this._easeType,p=this._easePower;(1===c||3===c&&h>=.5)&&(h=1-h),3===c&&(h*=2),1===p?h*=h:2===p?h*=h*h:3===p?h*=h*h*h:4===p&&(h*=h*h*h*h),1===c?this.ratio=1-h:2===c?this.ratio=h:t/l<.5?this.ratio=h/2:this.ratio=1-h/2}else this.ratio=this._ease.getRatio(t/l);if(this._time!==a||i){if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!i&&this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration))return this._time=this._totalTime=a,this._rawPrevTime=u,M.push(this),void(this._lazy=[t,e]);this._time&&!n?this.ratio=this._ease.getRatio(this._time/l):n&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(this._lazy!==!1&&(this._lazy=!1),this._active||!this._paused&&this._time!==a&&t>=0&&(this._active=!0),0===a&&(this._startAt&&(t>=0?this._startAt.render(t,e,i):r||(r="_dummyGS")),this.vars.onStart&&(0===this._time&&0!==l||e||this._callback("onStart"))),s=this._firstPT;s;)s.f?s.t[s.p](s.c*this.ratio+s.s):s.t[s.p]=s.c*this.ratio+s.s,s=s._next;this._onUpdate&&(t<0&&this._startAt&&t!==-1e-4&&this._startAt.render(t,e,i),e||(this._time!==a||n||i)&&this._callback("onUpdate")),r&&(this._gc&&!i||(t<0&&this._startAt&&!this._onUpdate&&t!==-1e-4&&this._startAt.render(t,e,i),n&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[r]&&this._callback(r),0===l&&this._rawPrevTime===f&&o!==f&&(this._rawPrevTime=0)))}},a._kill=function(t,e,i){if("all"===t&&(t=null),null==t&&(null==e||e===this.target))return this._lazy=!1,this._enabled(!1,!1);e="string"!=typeof e?e||this._targets||this.target:j.selector(e)||e;var n,r,s,o,a,l,u,h,c,f=i&&this._time&&i._startTime===this._startTime&&this._timeline===i._timeline;if((_(e)||E(e))&&"number"!=typeof e[0])for(n=e.length;--n>-1;)this._kill(t,e[n],i)&&(l=!0);else{if(this._targets){for(n=this._targets.length;--n>-1;)if(e===this._targets[n]){a=this._propLookup[n]||{},this._overwrittenProps=this._overwrittenProps||[],r=this._overwrittenProps[n]=t?this._overwrittenProps[n]||{}:"all";break}}else{if(e!==this.target)return!1;a=this._propLookup,r=this._overwrittenProps=t?this._overwrittenProps||{}:"all"}if(a){if(u=t||a,h=t!==r&&"all"!==r&&t!==a&&("object"!=typeof t||!t._tempKill),i&&(j.onOverwrite||this.vars.onOverwrite)){for(s in u)a[s]&&(c||(c=[]),c.push(s));if((c||!t)&&!Z(this,i,e,c))return!1}for(s in u)(o=a[s])&&(f&&(o.f?o.t[o.p](o.s):o.t[o.p]=o.s,l=!0),o.pg&&o.t._kill(u)&&(l=!0),o.pg&&0!==o.t._overwriteProps.length||(o._prev?o._prev._next=o._next:o===this._firstPT&&(this._firstPT=o._next),o._next&&(o._next._prev=o._prev),o._next=o._prev=null),delete a[s]),h&&(r[s]=1);!this._firstPT&&this._initted&&this._enabled(!1,!1)}}return l},a.invalidate=function(){return this._notifyPluginsOfEnabled&&j._onPluginEvent("_onDisable",this),this._firstPT=this._overwrittenProps=this._startAt=this._onUpdate=null,this._notifyPluginsOfEnabled=this._active=this._lazy=!1,this._propLookup=this._targets?{}:[],D.prototype.invalidate.call(this),this.vars.immediateRender&&(this._time=-f,this.render(Math.min(0,-this._delay))),this},a._enabled=function(t,e){if(u||l.wake(),t&&this._gc){var i,n=this._targets;if(n)for(i=n.length;--i>-1;)this._siblings[i]=K(n[i],this,!0);else this._siblings=K(this.target,this,!0)}return D.prototype._enabled.call(this,t,e),!(!this._notifyPluginsOfEnabled||!this._firstPT)&&j._onPluginEvent(t?"_onEnable":"_onDisable",this)},j.to=function(t,e,i){return new j(t,e,i)},j.from=function(t,e,i){return i.runBackwards=!0,i.immediateRender=0!=i.immediateRender,new j(t,e,i)},j.fromTo=function(t,e,i,n){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,new j(t,e,n)},j.delayedCall=function(t,e,i,n,r){return new j(e,0,{delay:t,onComplete:e,onCompleteParams:i,callbackScope:n,onReverseComplete:e,onReverseCompleteParams:i,immediateRender:!1,lazy:!1,useFrames:r,overwrite:0})},j.set=function(t,e){return new j(t,0,e)},j.getTweensOf=function(t,e){if(null==t)return[];t="string"!=typeof t?t:j.selector(t)||t;var i,n,r,s;if((_(t)||E(t))&&"number"!=typeof t[0]){for(i=t.length,n=[];--i>-1;)n=n.concat(j.getTweensOf(t[i],e));for(i=n.length;--i>-1;)for(s=n[i],r=i;--r>-1;)s===n[r]&&n.splice(i,1)}else for(n=K(t).concat(),i=n.length;--i>-1;)(n[i]._gc||e&&!n[i].isActive())&&n.splice(i,1);return n},j.killTweensOf=j.killDelayedCallsTo=function(t,e,i){"object"==typeof e&&(i=e,e=!1);for(var n=j.getTweensOf(t,e),r=n.length;--r>-1;)n[r]._kill(i,t)};var et=y("plugins.TweenPlugin",function(t,e){this._overwriteProps=(t||"").split(","),this._propName=this._overwriteProps[0],this._priority=e||0,this._super=et.prototype},!0);if(a=et.prototype,et.version="1.19.0",et.API=2,a._firstPT=null,a._addTween=z,a.setRatio=q,a._kill=function(t){var e,i=this._overwriteProps,n=this._firstPT;if(null!=t[this._propName])this._overwriteProps=[];else for(e=i.length;--e>-1;)null!=t[i[e]]&&i.splice(e,1);for(;n;)null!=t[n.n]&&(n._next&&(n._next._prev=n._prev),n._prev?(n._prev._next=n._next,n._prev=null):this._firstPT===n&&(this._firstPT=n._next)),n=n._next;return!1},a._mod=a._roundProps=function(t){for(var e,i=this._firstPT;i;)e=t[this._propName]||null!=i.n&&t[i.n.split(this._propName+"_").join("")],e&&"function"==typeof e&&(2===i.f?i.t._applyPT.m=e:i.m=e),i=i._next},j._onPluginEvent=function(t,e){var i,n,r,s,o,a=e._firstPT;if("_onInitAllProps"===t){for(;a;){for(o=a._next,n=r;n&&n.pr>a.pr;)n=n._next;(a._prev=n?n._prev:s)?a._prev._next=a:r=a,(a._next=n)?n._prev=a:s=a,a=o}a=e._firstPT=r}for(;a;)a.pg&&"function"==typeof a.t[t]&&a.t[t]()&&(i=!0),a=a._next;return i},et.activate=function(t){for(var e=t.length;--e>-1;)t[e].API===et.API&&(H[(new t[e])._propName]=t[e]);return!0},v.plugin=function(t){if(!(t&&t.propName&&t.init&&t.API))throw"illegal plugin definition.";var e,i=t.propName,n=t.priority||0,r=t.overwriteProps,s={init:"_onInitTween",set:"setRatio",kill:"_kill",round:"_mod",mod:"_mod",initAll:"_onInitAllProps"},o=y("plugins."+i.charAt(0).toUpperCase()+i.substr(1)+"Plugin",function(){et.call(this,i,n),this._overwriteProps=r||[]},t.global===!0),a=o.prototype=new et(i);a.constructor=o,o.API=t.API;for(e in s)"function"==typeof t[e]&&(a[s[e]]=t[e]);return o.version=t.version,et.activate([o]),o},s=t._gsQueue){for(o=0;o<s.length;o++)s[o]();for(a in m)m[a].func||t.console.log("GSAP encountered missing dependency: "+a)}u=!1}}("undefined"!=typeof e&&e.exports&&"undefined"!=typeof t?t:this||window,"TweenMax")}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],14:[function(t,e,i){(function(i){var n="undefined"!=typeof e&&e.exports&&"undefined"!=typeof i?i:this||window;(n._gsQueue||(n._gsQueue=[])).push(function(){"use strict";function t(t,e,i,n,r,s){return i=(parseFloat(i)-parseFloat(t))*r,n=(parseFloat(n)-parseFloat(e))*s,Math.sqrt(i*i+n*n)}function e(t){return"string"!=typeof t&&t.nodeType||(t=n.TweenLite.selector(t),t.length&&(t=t[0])),t}function i(t,e,i){var n,r,s=t.indexOf(" ");return s===-1?(n=void 0!==i?i+"":t,r=t):(n=t.substr(0,s),r=t.substr(s+1)),n=n.indexOf("%")!==-1?parseFloat(n)/100*e:parseFloat(n),r=r.indexOf("%")!==-1?parseFloat(r)/100*e:parseFloat(r),n>r?[r,n]:[n,r]}function r(i){if(!i)return 0;i=e(i);var n,r,s,o,a,u,h,c=i.tagName.toLowerCase(),f=1,p=1;if("non-scaling-stroke"===i.getAttribute("vector-effect")&&(p=i.getScreenCTM(),f=p.a,p=p.d),"path"===c){o=i.style.strokeDasharray,i.style.strokeDasharray="none",n=i.getTotalLength()||0,f!==p&&console.log("Warning: <path> length cannot be measured accurately when vector-effect is non-scaling-stroke and the element isn't proportionally scaled."),n*=(f+p)/2;try{r=i.getBBox()}catch(t){}i.style.strokeDasharray=o}else if("rect"===c)n=2*i.getAttribute("width")*f+2*i.getAttribute("height")*p;else if("line"===c)n=t(i.getAttribute("x1"),i.getAttribute("y1"),i.getAttribute("x2"),i.getAttribute("y2"),f,p);else if("polyline"===c||"polygon"===c)for(s=i.getAttribute("points").match(l)||[],"polygon"===c&&s.push(s[0],s[1]),n=0,a=2;a<s.length;a+=2)n+=t(s[a-2],s[a-1],s[a],s[a+1],f,p)||0;else"circle"!==c&&"ellipse"!==c||(u=parseFloat(i.getAttribute("circle"===c?"r":"rx"))*f,h=parseFloat(i.getAttribute("circle"===c?"r":"ry"))*p,n=Math.PI*(3*(u+h)-Math.sqrt((3*u+h)*(u+3*h))));return n||0}function s(t,i){if(!t)return[0,0];t=e(t),i=i||r(t)+1;var n=a(t),s=n.strokeDasharray||"",o=parseFloat(n.strokeDashoffset),l=s.indexOf(",");return l<0&&(l=s.indexOf(" ")),s=l<0?i:parseFloat(s.substr(0,l))||1e-5,s>i&&(s=i),[Math.max(0,-o),Math.max(0,s-o)]}var o,a=document.defaultView?document.defaultView.getComputedStyle:function(){},l=/(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi;o=n._gsDefine.plugin({propName:"drawSVG",API:2,version:"0.1.1",global:!0,overwriteProps:["drawSVG"],init:function(t,e,n,o){if(!t.getBBox)return!1;var a,l,u,h=r(t)+1;return this._style=t.style,"function"==typeof e&&(e=e(o,t)),e===!0||"true"===e?e="0 100%":e?(e+"").indexOf(" ")===-1&&(e="0 "+e):e="0 0",a=s(t,h),l=i(e,h,a[0]),this._length=h+10,0===a[0]&&0===l[0]?(u=Math.max(1e-5,l[1]-h),this._dash=h+u,this._offset=h-a[1]+u,this._addTween(this,"_offset",this._offset,h-l[1]+u,"drawSVG")):(this._dash=a[1]-a[0]||1e-6,this._offset=-a[0],this._addTween(this,"_dash",this._dash,l[1]-l[0]||1e-5,"drawSVG"),this._addTween(this,"_offset",this._offset,-l[0],"drawSVG")),!0},set:function(t){this._firstPT&&(this._super.setRatio.call(this,t),this._style.strokeDashoffset=this._offset,1===t||0===t?this._style.strokeDasharray=this._offset<.001&&this._length-this._dash<=10?"none":this._offset===this._dash?"0px, 999999px":this._dash+"px,"+this._length+"px":this._style.strokeDasharray=this._dash+"px,"+this._length+"px")}}),o.getLength=r,o.getPosition=s}),n._gsDefine&&n._gsQueue.pop()(),function(i){"use strict";var r=function(){return(n.GreenSockGlobals||n)[i]};"function"==typeof define&&define.amd?define(["TweenLite"],r):"undefined"!=typeof e&&e.exports&&(t("../TweenLite.js"),e.exports=r())}("DrawSVGPlugin")}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"../TweenLite.js":12}],15:[function(t,e,i){!function(t,i){"use strict";"object"==typeof e&&"object"==typeof e.exports?e.exports=t.document?i(t,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return i(t)}:i(t)}("undefined"!=typeof window?window:this,function(t,e){"use strict";function i(t,e){e=e||J;var i=e.createElement("script");i.text=t,e.head.appendChild(i).parentNode.removeChild(i)}function n(t){var e=!!t&&"length"in t&&t.length,i=ft.type(t);return"function"!==i&&!ft.isWindow(t)&&("array"===i||0===e||"number"==typeof e&&e>0&&e-1 in t)}function r(t,e,i){if(ft.isFunction(e))return ft.grep(t,function(t,n){return!!e.call(t,n,t)!==i});if(e.nodeType)return ft.grep(t,function(t){return t===e!==i});if("string"==typeof e){if(wt.test(e))return ft.filter(e,t,i);e=ft.filter(e,t)}return ft.grep(t,function(t){return rt.call(e,t)>-1!==i&&1===t.nodeType})}function s(t,e){for(;(t=t[e])&&1!==t.nodeType;);return t}function o(t){var e={};return ft.each(t.match(At)||[],function(t,i){e[i]=!0}),e}function a(t){return t}function l(t){throw t}function u(t,e,i){var n;try{t&&ft.isFunction(n=t.promise)?n.call(t).done(e).fail(i):t&&ft.isFunction(n=t.then)?n.call(t,e,i):e.call(void 0,t)}catch(t){i.call(void 0,t)}}function h(){J.removeEventListener("DOMContentLoaded",h),t.removeEventListener("load",h),ft.ready()}function c(){this.expando=ft.expando+c.uid++}function f(t,e,i){var n;if(void 0===i&&1===t.nodeType)if(n="data-"+e.replace(Ft,"-$&").toLowerCase(),i=t.getAttribute(n),"string"==typeof i){try{i="true"===i||"false"!==i&&("null"===i?null:+i+""===i?+i:Mt.test(i)?JSON.parse(i):i)}catch(t){}Lt.set(t,e,i)}else i=void 0;return i}function p(t,e,i,n){var r,s=1,o=20,a=n?function(){return n.cur()}:function(){return ft.css(t,e,"")},l=a(),u=i&&i[3]||(ft.cssNumber[e]?"":"px"),h=(ft.cssNumber[e]||"px"!==u&&+l)&&qt.exec(ft.css(t,e));if(h&&h[3]!==u){u=u||h[3],i=i||[],h=+l||1;do s=s||".5",h/=s,ft.style(t,e,h+u);while(s!==(s=a()/l)&&1!==s&&--o)}return i&&(h=+h||+l||0,r=i[1]?h+(i[1]+1)*i[2]:+i[2],n&&(n.unit=u,n.start=h,n.end=r)),r}function d(t){var e,i=t.ownerDocument,n=t.nodeName,r=Ht[n];return r?r:(e=i.body.appendChild(i.createElement(n)),r=ft.css(e,"display"),e.parentNode.removeChild(e),"none"===r&&(r="block"),Ht[n]=r,r)}function _(t,e){for(var i,n,r=[],s=0,o=t.length;s<o;s++)n=t[s],n.style&&(i=n.style.display,e?("none"===i&&(r[s]=Et.get(n,"display")||null,r[s]||(n.style.display="")),""===n.style.display&&zt(n)&&(r[s]=d(n))):"none"!==i&&(r[s]="none",Et.set(n,"display",i)));for(s=0;s<o;s++)null!=r[s]&&(t[s].style.display=r[s]);return t}function m(t,e){var i="undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e||"*"):"undefined"!=typeof t.querySelectorAll?t.querySelectorAll(e||"*"):[];return void 0===e||e&&ft.nodeName(t,e)?ft.merge([t],i):i}function g(t,e){for(var i=0,n=t.length;i<n;i++)Et.set(t[i],"globalEval",!e||Et.get(e[i],"globalEval"))}function v(t,e,i,n,r){for(var s,o,a,l,u,h,c=e.createDocumentFragment(),f=[],p=0,d=t.length;p<d;p++)if(s=t[p],s||0===s)if("object"===ft.type(s))ft.merge(f,s.nodeType?[s]:s);else if($t.test(s)){for(o=o||c.appendChild(e.createElement("div")),a=(Wt.exec(s)||["",""])[1].toLowerCase(),l=Yt[a]||Yt._default,o.innerHTML=l[1]+ft.htmlPrefilter(s)+l[2],h=l[0];h--;)o=o.lastChild;ft.merge(f,o.childNodes),o=c.firstChild,o.textContent=""}else f.push(e.createTextNode(s));for(c.textContent="",p=0;s=f[p++];)if(n&&ft.inArray(s,n)>-1)r&&r.push(s);else if(u=ft.contains(s.ownerDocument,s),o=m(c.appendChild(s),"script"),u&&g(o),i)for(h=0;s=o[h++];)Ut.test(s.type||"")&&i.push(s);return c}function y(){return!0}function T(){return!1}function x(){try{return J.activeElement}catch(t){}}function w(t,e,i,n,r,s){var o,a;if("object"==typeof e){"string"!=typeof i&&(n=n||i,i=void 0);for(a in e)w(t,a,i,n,e[a],s);return t}if(null==n&&null==r?(r=i,n=i=void 0):null==r&&("string"==typeof i?(r=n,n=void 0):(r=n,n=i,i=void 0)),r===!1)r=T;else if(!r)return t;return 1===s&&(o=r,r=function(t){return ft().off(t),o.apply(this,arguments)},r.guid=o.guid||(o.guid=ft.guid++)),t.each(function(){ft.event.add(this,e,r,n,i)})}function b(t,e){return ft.nodeName(t,"table")&&ft.nodeName(11!==e.nodeType?e:e.firstChild,"tr")?t.getElementsByTagName("tbody")[0]||t:t}function P(t){return t.type=(null!==t.getAttribute("type"))+"/"+t.type,t}function C(t){var e=ee.exec(t.type);return e?t.type=e[1]:t.removeAttribute("type"),t}function k(t,e){var i,n,r,s,o,a,l,u;if(1===e.nodeType){if(Et.hasData(t)&&(s=Et.access(t),o=Et.set(e,s),u=s.events)){delete o.handle,o.events={};for(r in u)for(i=0,n=u[r].length;i<n;i++)ft.event.add(e,r,u[r][i])}Lt.hasData(t)&&(a=Lt.access(t),l=ft.extend({},a),Lt.set(e,l))}}function S(t,e){var i=e.nodeName.toLowerCase();"input"===i&&Xt.test(t.type)?e.checked=t.checked:"input"!==i&&"textarea"!==i||(e.defaultValue=t.defaultValue)}function A(t,e,n,r){e=it.apply([],e);var s,o,a,l,u,h,c=0,f=t.length,p=f-1,d=e[0],_=ft.isFunction(d);if(_||f>1&&"string"==typeof d&&!ht.checkClone&&te.test(d))return t.each(function(i){var s=t.eq(i);_&&(e[0]=d.call(this,i,s.html())),A(s,e,n,r)});if(f&&(s=v(e,t[0].ownerDocument,!1,t,r),o=s.firstChild,1===s.childNodes.length&&(s=o),o||r)){for(a=ft.map(m(s,"script"),P),l=a.length;c<f;c++)u=s,c!==p&&(u=ft.clone(u,!0,!0),l&&ft.merge(a,m(u,"script"))),n.call(t[c],u,c);if(l)for(h=a[a.length-1].ownerDocument,ft.map(a,C),c=0;c<l;c++)u=a[c],Ut.test(u.type||"")&&!Et.access(u,"globalEval")&&ft.contains(h,u)&&(u.src?ft._evalUrl&&ft._evalUrl(u.src):i(u.textContent.replace(ie,""),h))}return t}function D(t,e,i){for(var n,r=e?ft.filter(e,t):t,s=0;null!=(n=r[s]);s++)i||1!==n.nodeType||ft.cleanData(m(n)),n.parentNode&&(i&&ft.contains(n.ownerDocument,n)&&g(m(n,"script")),n.parentNode.removeChild(n));return t}function O(t,e,i){var n,r,s,o,a=t.style;return i=i||se(t),i&&(o=i.getPropertyValue(e)||i[e],""!==o||ft.contains(t.ownerDocument,t)||(o=ft.style(t,e)),!ht.pixelMarginRight()&&re.test(o)&&ne.test(e)&&(n=a.width,r=a.minWidth,s=a.maxWidth,a.minWidth=a.maxWidth=a.width=o,o=i.width,a.width=n,a.minWidth=r,a.maxWidth=s)),void 0!==o?o+"":o}function R(t,e){return{get:function(){return t()?void delete this.get:(this.get=e).apply(this,arguments)}}}function j(t){if(t in he)return t;for(var e=t[0].toUpperCase()+t.slice(1),i=ue.length;i--;)if(t=ue[i]+e,t in he)return t}function E(t,e,i){var n=qt.exec(e);return n?Math.max(0,n[2]-(i||0))+(n[3]||"px"):e}function L(t,e,i,n,r){for(var s=i===(n?"border":"content")?4:"width"===e?1:0,o=0;s<4;s+=2)"margin"===i&&(o+=ft.css(t,i+It[s],!0,r)),n?("content"===i&&(o-=ft.css(t,"padding"+It[s],!0,r)),"margin"!==i&&(o-=ft.css(t,"border"+It[s]+"Width",!0,r))):(o+=ft.css(t,"padding"+It[s],!0,r),"padding"!==i&&(o+=ft.css(t,"border"+It[s]+"Width",!0,r)));return o}function M(t,e,i){var n,r=!0,s=se(t),o="border-box"===ft.css(t,"boxSizing",!1,s);if(t.getClientRects().length&&(n=t.getBoundingClientRect()[e]),n<=0||null==n){if(n=O(t,e,s),(n<0||null==n)&&(n=t.style[e]),re.test(n))return n;r=o&&(ht.boxSizingReliable()||n===t.style[e]),n=parseFloat(n)||0}return n+L(t,e,i||(o?"border":"content"),r,s)+"px"}function F(t,e,i,n,r){return new F.prototype.init(t,e,i,n,r)}function N(){fe&&(t.requestAnimationFrame(N),ft.fx.tick())}function q(){return t.setTimeout(function(){ce=void 0}),ce=ft.now()}function I(t,e){var i,n=0,r={height:t};for(e=e?1:0;n<4;n+=2-e)i=It[n],r["margin"+i]=r["padding"+i]=t;return e&&(r.opacity=r.width=t),r}function z(t,e,i){for(var n,r=(X.tweeners[e]||[]).concat(X.tweeners["*"]),s=0,o=r.length;s<o;s++)if(n=r[s].call(i,e,t))return n}function B(t,e,i){var n,r,s,o,a,l,u,h,c="width"in e||"height"in e,f=this,p={},d=t.style,m=t.nodeType&&zt(t),g=Et.get(t,"fxshow");i.queue||(o=ft._queueHooks(t,"fx"),null==o.unqueued&&(o.unqueued=0,a=o.empty.fire,o.empty.fire=function(){o.unqueued||a()}),o.unqueued++,f.always(function(){f.always(function(){o.unqueued--,ft.queue(t,"fx").length||o.empty.fire()})}));for(n in e)if(r=e[n],pe.test(r)){if(delete e[n],s=s||"toggle"===r,r===(m?"hide":"show")){if("show"!==r||!g||void 0===g[n])continue;m=!0}p[n]=g&&g[n]||ft.style(t,n)}if(l=!ft.isEmptyObject(e),l||!ft.isEmptyObject(p)){c&&1===t.nodeType&&(i.overflow=[d.overflow,d.overflowX,d.overflowY],u=g&&g.display,null==u&&(u=Et.get(t,"display")),h=ft.css(t,"display"),"none"===h&&(u?h=u:(_([t],!0),u=t.style.display||u,h=ft.css(t,"display"),_([t]))),("inline"===h||"inline-block"===h&&null!=u)&&"none"===ft.css(t,"float")&&(l||(f.done(function(){d.display=u}),null==u&&(h=d.display,u="none"===h?"":h)),d.display="inline-block")),i.overflow&&(d.overflow="hidden",f.always(function(){d.overflow=i.overflow[0],d.overflowX=i.overflow[1],d.overflowY=i.overflow[2]})),l=!1;for(n in p)l||(g?"hidden"in g&&(m=g.hidden):g=Et.access(t,"fxshow",{display:u}),s&&(g.hidden=!m),m&&_([t],!0),f.done(function(){m||_([t]),Et.remove(t,"fxshow");for(n in p)ft.style(t,n,p[n])})),l=z(m?g[n]:0,n,f),n in g||(g[n]=l.start,m&&(l.end=l.start,l.start=0))}}function H(t,e){var i,n,r,s,o;for(i in t)if(n=ft.camelCase(i),r=e[n],s=t[i],ft.isArray(s)&&(r=s[1],s=t[i]=s[0]),i!==n&&(t[n]=s,delete t[i]),o=ft.cssHooks[n],o&&"expand"in o){s=o.expand(s),delete t[n];for(i in s)i in t||(t[i]=s[i],e[i]=r)}else e[n]=r}function X(t,e,i){var n,r,s=0,o=X.prefilters.length,a=ft.Deferred().always(function(){delete l.elem}),l=function(){if(r)return!1;for(var e=ce||q(),i=Math.max(0,u.startTime+u.duration-e),n=i/u.duration||0,s=1-n,o=0,l=u.tweens.length;o<l;o++)u.tweens[o].run(s);return a.notifyWith(t,[u,s,i]),s<1&&l?i:(a.resolveWith(t,[u]),!1)},u=a.promise({elem:t,props:ft.extend({},e),opts:ft.extend(!0,{specialEasing:{},easing:ft.easing._default},i),originalProperties:e,originalOptions:i,startTime:ce||q(),duration:i.duration,tweens:[],createTween:function(e,i){var n=ft.Tween(t,u.opts,e,i,u.opts.specialEasing[e]||u.opts.easing);return u.tweens.push(n),n},stop:function(e){var i=0,n=e?u.tweens.length:0;if(r)return this;for(r=!0;i<n;i++)u.tweens[i].run(1);return e?(a.notifyWith(t,[u,1,0]),a.resolveWith(t,[u,e])):a.rejectWith(t,[u,e]),this}}),h=u.props;for(H(h,u.opts.specialEasing);s<o;s++)if(n=X.prefilters[s].call(u,t,h,u.opts))return ft.isFunction(n.stop)&&(ft._queueHooks(u.elem,u.opts.queue).stop=ft.proxy(n.stop,n)),n;return ft.map(h,z,u),ft.isFunction(u.opts.start)&&u.opts.start.call(t,u),ft.fx.timer(ft.extend(l,{elem:t,anim:u,queue:u.opts.queue})),u.progress(u.opts.progress).done(u.opts.done,u.opts.complete).fail(u.opts.fail).always(u.opts.always)}function W(t){return t.getAttribute&&t.getAttribute("class")||""}function U(t,e,i,n){var r;if(ft.isArray(e))ft.each(e,function(e,r){i||ke.test(t)?n(t,r):U(t+"["+("object"==typeof r&&null!=r?e:"")+"]",r,i,n);
});else if(i||"object"!==ft.type(e))n(t,e);else for(r in e)U(t+"["+r+"]",e[r],i,n)}function Y(t){return function(e,i){"string"!=typeof e&&(i=e,e="*");var n,r=0,s=e.toLowerCase().match(At)||[];if(ft.isFunction(i))for(;n=s[r++];)"+"===n[0]?(n=n.slice(1)||"*",(t[n]=t[n]||[]).unshift(i)):(t[n]=t[n]||[]).push(i)}}function $(t,e,i,n){function r(a){var l;return s[a]=!0,ft.each(t[a]||[],function(t,a){var u=a(e,i,n);return"string"!=typeof u||o||s[u]?o?!(l=u):void 0:(e.dataTypes.unshift(u),r(u),!1)}),l}var s={},o=t===qe;return r(e.dataTypes[0])||!s["*"]&&r("*")}function V(t,e){var i,n,r=ft.ajaxSettings.flatOptions||{};for(i in e)void 0!==e[i]&&((r[i]?t:n||(n={}))[i]=e[i]);return n&&ft.extend(!0,t,n),t}function G(t,e,i){for(var n,r,s,o,a=t.contents,l=t.dataTypes;"*"===l[0];)l.shift(),void 0===n&&(n=t.mimeType||e.getResponseHeader("Content-Type"));if(n)for(r in a)if(a[r]&&a[r].test(n)){l.unshift(r);break}if(l[0]in i)s=l[0];else{for(r in i){if(!l[0]||t.converters[r+" "+l[0]]){s=r;break}o||(o=r)}s=s||o}if(s)return s!==l[0]&&l.unshift(s),i[s]}function Q(t,e,i,n){var r,s,o,a,l,u={},h=t.dataTypes.slice();if(h[1])for(o in t.converters)u[o.toLowerCase()]=t.converters[o];for(s=h.shift();s;)if(t.responseFields[s]&&(i[t.responseFields[s]]=e),!l&&n&&t.dataFilter&&(e=t.dataFilter(e,t.dataType)),l=s,s=h.shift())if("*"===s)s=l;else if("*"!==l&&l!==s){if(o=u[l+" "+s]||u["* "+s],!o)for(r in u)if(a=r.split(" "),a[1]===s&&(o=u[l+" "+a[0]]||u["* "+a[0]])){o===!0?o=u[r]:u[r]!==!0&&(s=a[0],h.unshift(a[1]));break}if(o!==!0)if(o&&t.throws)e=o(e);else try{e=o(e)}catch(t){return{state:"parsererror",error:o?t:"No conversion from "+l+" to "+s}}}return{state:"success",data:e}}function K(t){return ft.isWindow(t)?t:9===t.nodeType&&t.defaultView}var Z=[],J=t.document,tt=Object.getPrototypeOf,et=Z.slice,it=Z.concat,nt=Z.push,rt=Z.indexOf,st={},ot=st.toString,at=st.hasOwnProperty,lt=at.toString,ut=lt.call(Object),ht={},ct="3.1.0",ft=function(t,e){return new ft.fn.init(t,e)},pt=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,dt=/^-ms-/,_t=/-([a-z])/g,mt=function(t,e){return e.toUpperCase()};ft.fn=ft.prototype={jquery:ct,constructor:ft,length:0,toArray:function(){return et.call(this)},get:function(t){return null!=t?t<0?this[t+this.length]:this[t]:et.call(this)},pushStack:function(t){var e=ft.merge(this.constructor(),t);return e.prevObject=this,e},each:function(t){return ft.each(this,t)},map:function(t){return this.pushStack(ft.map(this,function(e,i){return t.call(e,i,e)}))},slice:function(){return this.pushStack(et.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(t){var e=this.length,i=+t+(t<0?e:0);return this.pushStack(i>=0&&i<e?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:nt,sort:Z.sort,splice:Z.splice},ft.extend=ft.fn.extend=function(){var t,e,i,n,r,s,o=arguments[0]||{},a=1,l=arguments.length,u=!1;for("boolean"==typeof o&&(u=o,o=arguments[a]||{},a++),"object"==typeof o||ft.isFunction(o)||(o={}),a===l&&(o=this,a--);a<l;a++)if(null!=(t=arguments[a]))for(e in t)i=o[e],n=t[e],o!==n&&(u&&n&&(ft.isPlainObject(n)||(r=ft.isArray(n)))?(r?(r=!1,s=i&&ft.isArray(i)?i:[]):s=i&&ft.isPlainObject(i)?i:{},o[e]=ft.extend(u,s,n)):void 0!==n&&(o[e]=n));return o},ft.extend({expando:"jQuery"+(ct+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isFunction:function(t){return"function"===ft.type(t)},isArray:Array.isArray,isWindow:function(t){return null!=t&&t===t.window},isNumeric:function(t){var e=ft.type(t);return("number"===e||"string"===e)&&!isNaN(t-parseFloat(t))},isPlainObject:function(t){var e,i;return!(!t||"[object Object]"!==ot.call(t)||(e=tt(t))&&(i=at.call(e,"constructor")&&e.constructor,"function"!=typeof i||lt.call(i)!==ut))},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},type:function(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?st[ot.call(t)]||"object":typeof t},globalEval:function(t){i(t)},camelCase:function(t){return t.replace(dt,"ms-").replace(_t,mt)},nodeName:function(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()},each:function(t,e){var i,r=0;if(n(t))for(i=t.length;r<i&&e.call(t[r],r,t[r])!==!1;r++);else for(r in t)if(e.call(t[r],r,t[r])===!1)break;return t},trim:function(t){return null==t?"":(t+"").replace(pt,"")},makeArray:function(t,e){var i=e||[];return null!=t&&(n(Object(t))?ft.merge(i,"string"==typeof t?[t]:t):nt.call(i,t)),i},inArray:function(t,e,i){return null==e?-1:rt.call(e,t,i)},merge:function(t,e){for(var i=+e.length,n=0,r=t.length;n<i;n++)t[r++]=e[n];return t.length=r,t},grep:function(t,e,i){for(var n,r=[],s=0,o=t.length,a=!i;s<o;s++)n=!e(t[s],s),n!==a&&r.push(t[s]);return r},map:function(t,e,i){var r,s,o=0,a=[];if(n(t))for(r=t.length;o<r;o++)s=e(t[o],o,i),null!=s&&a.push(s);else for(o in t)s=e(t[o],o,i),null!=s&&a.push(s);return it.apply([],a)},guid:1,proxy:function(t,e){var i,n,r;if("string"==typeof e&&(i=t[e],e=t,t=i),ft.isFunction(t))return n=et.call(arguments,2),r=function(){return t.apply(e||this,n.concat(et.call(arguments)))},r.guid=t.guid=t.guid||ft.guid++,r},now:Date.now,support:ht}),"function"==typeof Symbol&&(ft.fn[Symbol.iterator]=Z[Symbol.iterator]),ft.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(t,e){st["[object "+e+"]"]=e.toLowerCase()});var gt=function(t){function e(t,e,i,n){var r,s,o,a,l,u,h,f=e&&e.ownerDocument,d=e?e.nodeType:9;if(i=i||[],"string"!=typeof t||!t||1!==d&&9!==d&&11!==d)return i;if(!n&&((e?e.ownerDocument||e:B)!==E&&j(e),e=e||E,M)){if(11!==d&&(l=gt.exec(t)))if(r=l[1]){if(9===d){if(!(o=e.getElementById(r)))return i;if(o.id===r)return i.push(o),i}else if(f&&(o=f.getElementById(r))&&I(e,o)&&o.id===r)return i.push(o),i}else{if(l[2])return Z.apply(i,e.getElementsByTagName(t)),i;if((r=l[3])&&w.getElementsByClassName&&e.getElementsByClassName)return Z.apply(i,e.getElementsByClassName(r)),i}if(w.qsa&&!Y[t+" "]&&(!F||!F.test(t))){if(1!==d)f=e,h=t;else if("object"!==e.nodeName.toLowerCase()){for((a=e.getAttribute("id"))?a=a.replace(xt,wt):e.setAttribute("id",a=z),u=k(t),s=u.length;s--;)u[s]="#"+a+" "+p(u[s]);h=u.join(","),f=vt.test(t)&&c(e.parentNode)||e}if(h)try{return Z.apply(i,f.querySelectorAll(h)),i}catch(t){}finally{a===z&&e.removeAttribute("id")}}}return A(t.replace(at,"$1"),e,i,n)}function i(){function t(i,n){return e.push(i+" ")>b.cacheLength&&delete t[e.shift()],t[i+" "]=n}var e=[];return t}function n(t){return t[z]=!0,t}function r(t){var e=E.createElement("fieldset");try{return!!t(e)}catch(t){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function s(t,e){for(var i=t.split("|"),n=i.length;n--;)b.attrHandle[i[n]]=e}function o(t,e){var i=e&&t,n=i&&1===t.nodeType&&1===e.nodeType&&t.sourceIndex-e.sourceIndex;if(n)return n;if(i)for(;i=i.nextSibling;)if(i===e)return-1;return t?1:-1}function a(t){return function(e){var i=e.nodeName.toLowerCase();return"input"===i&&e.type===t}}function l(t){return function(e){var i=e.nodeName.toLowerCase();return("input"===i||"button"===i)&&e.type===t}}function u(t){return function(e){return"label"in e&&e.disabled===t||"form"in e&&e.disabled===t||"form"in e&&e.disabled===!1&&(e.isDisabled===t||e.isDisabled!==!t&&("label"in e||!Pt(e))!==t)}}function h(t){return n(function(e){return e=+e,n(function(i,n){for(var r,s=t([],i.length,e),o=s.length;o--;)i[r=s[o]]&&(i[r]=!(n[r]=i[r]))})})}function c(t){return t&&"undefined"!=typeof t.getElementsByTagName&&t}function f(){}function p(t){for(var e=0,i=t.length,n="";e<i;e++)n+=t[e].value;return n}function d(t,e,i){var n=e.dir,r=e.next,s=r||n,o=i&&"parentNode"===s,a=X++;return e.first?function(e,i,r){for(;e=e[n];)if(1===e.nodeType||o)return t(e,i,r)}:function(e,i,l){var u,h,c,f=[H,a];if(l){for(;e=e[n];)if((1===e.nodeType||o)&&t(e,i,l))return!0}else for(;e=e[n];)if(1===e.nodeType||o)if(c=e[z]||(e[z]={}),h=c[e.uniqueID]||(c[e.uniqueID]={}),r&&r===e.nodeName.toLowerCase())e=e[n]||e;else{if((u=h[s])&&u[0]===H&&u[1]===a)return f[2]=u[2];if(h[s]=f,f[2]=t(e,i,l))return!0}}}function _(t){return t.length>1?function(e,i,n){for(var r=t.length;r--;)if(!t[r](e,i,n))return!1;return!0}:t[0]}function m(t,i,n){for(var r=0,s=i.length;r<s;r++)e(t,i[r],n);return n}function g(t,e,i,n,r){for(var s,o=[],a=0,l=t.length,u=null!=e;a<l;a++)(s=t[a])&&(i&&!i(s,n,r)||(o.push(s),u&&e.push(a)));return o}function v(t,e,i,r,s,o){return r&&!r[z]&&(r=v(r)),s&&!s[z]&&(s=v(s,o)),n(function(n,o,a,l){var u,h,c,f=[],p=[],d=o.length,_=n||m(e||"*",a.nodeType?[a]:a,[]),v=!t||!n&&e?_:g(_,f,t,a,l),y=i?s||(n?t:d||r)?[]:o:v;if(i&&i(v,y,a,l),r)for(u=g(y,p),r(u,[],a,l),h=u.length;h--;)(c=u[h])&&(y[p[h]]=!(v[p[h]]=c));if(n){if(s||t){if(s){for(u=[],h=y.length;h--;)(c=y[h])&&u.push(v[h]=c);s(null,y=[],u,l)}for(h=y.length;h--;)(c=y[h])&&(u=s?tt(n,c):f[h])>-1&&(n[u]=!(o[u]=c))}}else y=g(y===o?y.splice(d,y.length):y),s?s(null,o,y,l):Z.apply(o,y)})}function y(t){for(var e,i,n,r=t.length,s=b.relative[t[0].type],o=s||b.relative[" "],a=s?1:0,l=d(function(t){return t===e},o,!0),u=d(function(t){return tt(e,t)>-1},o,!0),h=[function(t,i,n){var r=!s&&(n||i!==D)||((e=i).nodeType?l(t,i,n):u(t,i,n));return e=null,r}];a<r;a++)if(i=b.relative[t[a].type])h=[d(_(h),i)];else{if(i=b.filter[t[a].type].apply(null,t[a].matches),i[z]){for(n=++a;n<r&&!b.relative[t[n].type];n++);return v(a>1&&_(h),a>1&&p(t.slice(0,a-1).concat({value:" "===t[a-2].type?"*":""})).replace(at,"$1"),i,a<n&&y(t.slice(a,n)),n<r&&y(t=t.slice(n)),n<r&&p(t))}h.push(i)}return _(h)}function T(t,i){var r=i.length>0,s=t.length>0,o=function(n,o,a,l,u){var h,c,f,p=0,d="0",_=n&&[],m=[],v=D,y=n||s&&b.find.TAG("*",u),T=H+=null==v?1:Math.random()||.1,x=y.length;for(u&&(D=o===E||o||u);d!==x&&null!=(h=y[d]);d++){if(s&&h){for(c=0,o||h.ownerDocument===E||(j(h),a=!M);f=t[c++];)if(f(h,o||E,a)){l.push(h);break}u&&(H=T)}r&&((h=!f&&h)&&p--,n&&_.push(h))}if(p+=d,r&&d!==p){for(c=0;f=i[c++];)f(_,m,o,a);if(n){if(p>0)for(;d--;)_[d]||m[d]||(m[d]=Q.call(l));m=g(m)}Z.apply(l,m),u&&!n&&m.length>0&&p+i.length>1&&e.uniqueSort(l)}return u&&(H=T,D=v),_};return r?n(o):o}var x,w,b,P,C,k,S,A,D,O,R,j,E,L,M,F,N,q,I,z="sizzle"+1*new Date,B=t.document,H=0,X=0,W=i(),U=i(),Y=i(),$=function(t,e){return t===e&&(R=!0),0},V={}.hasOwnProperty,G=[],Q=G.pop,K=G.push,Z=G.push,J=G.slice,tt=function(t,e){for(var i=0,n=t.length;i<n;i++)if(t[i]===e)return i;return-1},et="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",it="[\\x20\\t\\r\\n\\f]",nt="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",rt="\\["+it+"*("+nt+")(?:"+it+"*([*^$|!~]?=)"+it+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+nt+"))|)"+it+"*\\]",st=":("+nt+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+rt+")*)|.*)\\)|)",ot=new RegExp(it+"+","g"),at=new RegExp("^"+it+"+|((?:^|[^\\\\])(?:\\\\.)*)"+it+"+$","g"),lt=new RegExp("^"+it+"*,"+it+"*"),ut=new RegExp("^"+it+"*([>+~]|"+it+")"+it+"*"),ht=new RegExp("="+it+"*([^\\]'\"]*?)"+it+"*\\]","g"),ct=new RegExp(st),ft=new RegExp("^"+nt+"$"),pt={ID:new RegExp("^#("+nt+")"),CLASS:new RegExp("^\\.("+nt+")"),TAG:new RegExp("^("+nt+"|[*])"),ATTR:new RegExp("^"+rt),PSEUDO:new RegExp("^"+st),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+it+"*(even|odd|(([+-]|)(\\d*)n|)"+it+"*(?:([+-]|)"+it+"*(\\d+)|))"+it+"*\\)|)","i"),bool:new RegExp("^(?:"+et+")$","i"),needsContext:new RegExp("^"+it+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+it+"*((?:-\\d)?\\d*)"+it+"*\\)|)(?=[^-]|$)","i")},dt=/^(?:input|select|textarea|button)$/i,_t=/^h\d$/i,mt=/^[^{]+\{\s*\[native \w/,gt=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,vt=/[+~]/,yt=new RegExp("\\\\([\\da-f]{1,6}"+it+"?|("+it+")|.)","ig"),Tt=function(t,e,i){var n="0x"+e-65536;return n!==n||i?e:n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320)},xt=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g,wt=function(t,e){return e?"\0"===t?"�":t.slice(0,-1)+"\\"+t.charCodeAt(t.length-1).toString(16)+" ":"\\"+t},bt=function(){j()},Pt=d(function(t){return t.disabled===!0},{dir:"parentNode",next:"legend"});try{Z.apply(G=J.call(B.childNodes),B.childNodes),G[B.childNodes.length].nodeType}catch(t){Z={apply:G.length?function(t,e){K.apply(t,J.call(e))}:function(t,e){for(var i=t.length,n=0;t[i++]=e[n++];);t.length=i-1}}}w=e.support={},C=e.isXML=function(t){var e=t&&(t.ownerDocument||t).documentElement;return!!e&&"HTML"!==e.nodeName},j=e.setDocument=function(t){var e,i,n=t?t.ownerDocument||t:B;return n!==E&&9===n.nodeType&&n.documentElement?(E=n,L=E.documentElement,M=!C(E),B!==E&&(i=E.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",bt,!1):i.attachEvent&&i.attachEvent("onunload",bt)),w.attributes=r(function(t){return t.className="i",!t.getAttribute("className")}),w.getElementsByTagName=r(function(t){return t.appendChild(E.createComment("")),!t.getElementsByTagName("*").length}),w.getElementsByClassName=mt.test(E.getElementsByClassName),w.getById=r(function(t){return L.appendChild(t).id=z,!E.getElementsByName||!E.getElementsByName(z).length}),w.getById?(b.find.ID=function(t,e){if("undefined"!=typeof e.getElementById&&M){var i=e.getElementById(t);return i?[i]:[]}},b.filter.ID=function(t){var e=t.replace(yt,Tt);return function(t){return t.getAttribute("id")===e}}):(delete b.find.ID,b.filter.ID=function(t){var e=t.replace(yt,Tt);return function(t){var i="undefined"!=typeof t.getAttributeNode&&t.getAttributeNode("id");return i&&i.value===e}}),b.find.TAG=w.getElementsByTagName?function(t,e){return"undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t):w.qsa?e.querySelectorAll(t):void 0}:function(t,e){var i,n=[],r=0,s=e.getElementsByTagName(t);if("*"===t){for(;i=s[r++];)1===i.nodeType&&n.push(i);return n}return s},b.find.CLASS=w.getElementsByClassName&&function(t,e){if("undefined"!=typeof e.getElementsByClassName&&M)return e.getElementsByClassName(t)},N=[],F=[],(w.qsa=mt.test(E.querySelectorAll))&&(r(function(t){L.appendChild(t).innerHTML="<a id='"+z+"'></a><select id='"+z+"-\r\\' msallowcapture=''><option selected=''></option></select>",t.querySelectorAll("[msallowcapture^='']").length&&F.push("[*^$]="+it+"*(?:''|\"\")"),t.querySelectorAll("[selected]").length||F.push("\\["+it+"*(?:value|"+et+")"),t.querySelectorAll("[id~="+z+"-]").length||F.push("~="),t.querySelectorAll(":checked").length||F.push(":checked"),t.querySelectorAll("a#"+z+"+*").length||F.push(".#.+[+~]")}),r(function(t){t.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var e=E.createElement("input");e.setAttribute("type","hidden"),t.appendChild(e).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&F.push("name"+it+"*[*^$|!~]?="),2!==t.querySelectorAll(":enabled").length&&F.push(":enabled",":disabled"),L.appendChild(t).disabled=!0,2!==t.querySelectorAll(":disabled").length&&F.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),F.push(",.*:")})),(w.matchesSelector=mt.test(q=L.matches||L.webkitMatchesSelector||L.mozMatchesSelector||L.oMatchesSelector||L.msMatchesSelector))&&r(function(t){w.disconnectedMatch=q.call(t,"*"),q.call(t,"[s!='']:x"),N.push("!=",st)}),F=F.length&&new RegExp(F.join("|")),N=N.length&&new RegExp(N.join("|")),e=mt.test(L.compareDocumentPosition),I=e||mt.test(L.contains)?function(t,e){var i=9===t.nodeType?t.documentElement:t,n=e&&e.parentNode;return t===n||!(!n||1!==n.nodeType||!(i.contains?i.contains(n):t.compareDocumentPosition&&16&t.compareDocumentPosition(n)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},$=e?function(t,e){if(t===e)return R=!0,0;var i=!t.compareDocumentPosition-!e.compareDocumentPosition;return i?i:(i=(t.ownerDocument||t)===(e.ownerDocument||e)?t.compareDocumentPosition(e):1,1&i||!w.sortDetached&&e.compareDocumentPosition(t)===i?t===E||t.ownerDocument===B&&I(B,t)?-1:e===E||e.ownerDocument===B&&I(B,e)?1:O?tt(O,t)-tt(O,e):0:4&i?-1:1)}:function(t,e){if(t===e)return R=!0,0;var i,n=0,r=t.parentNode,s=e.parentNode,a=[t],l=[e];if(!r||!s)return t===E?-1:e===E?1:r?-1:s?1:O?tt(O,t)-tt(O,e):0;if(r===s)return o(t,e);for(i=t;i=i.parentNode;)a.unshift(i);for(i=e;i=i.parentNode;)l.unshift(i);for(;a[n]===l[n];)n++;return n?o(a[n],l[n]):a[n]===B?-1:l[n]===B?1:0},E):E},e.matches=function(t,i){return e(t,null,null,i)},e.matchesSelector=function(t,i){if((t.ownerDocument||t)!==E&&j(t),i=i.replace(ht,"='$1']"),w.matchesSelector&&M&&!Y[i+" "]&&(!N||!N.test(i))&&(!F||!F.test(i)))try{var n=q.call(t,i);if(n||w.disconnectedMatch||t.document&&11!==t.document.nodeType)return n}catch(t){}return e(i,E,null,[t]).length>0},e.contains=function(t,e){return(t.ownerDocument||t)!==E&&j(t),I(t,e)},e.attr=function(t,e){(t.ownerDocument||t)!==E&&j(t);var i=b.attrHandle[e.toLowerCase()],n=i&&V.call(b.attrHandle,e.toLowerCase())?i(t,e,!M):void 0;return void 0!==n?n:w.attributes||!M?t.getAttribute(e):(n=t.getAttributeNode(e))&&n.specified?n.value:null},e.escape=function(t){return(t+"").replace(xt,wt)},e.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},e.uniqueSort=function(t){var e,i=[],n=0,r=0;if(R=!w.detectDuplicates,O=!w.sortStable&&t.slice(0),t.sort($),R){for(;e=t[r++];)e===t[r]&&(n=i.push(r));for(;n--;)t.splice(i[n],1)}return O=null,t},P=e.getText=function(t){var e,i="",n=0,r=t.nodeType;if(r){if(1===r||9===r||11===r){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)i+=P(t)}else if(3===r||4===r)return t.nodeValue}else for(;e=t[n++];)i+=P(e);return i},b=e.selectors={cacheLength:50,createPseudo:n,match:pt,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(yt,Tt),t[3]=(t[3]||t[4]||t[5]||"").replace(yt,Tt),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||e.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&e.error(t[0]),t},PSEUDO:function(t){var e,i=!t[6]&&t[2];return pt.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":i&&ct.test(i)&&(e=k(i,!0))&&(e=i.indexOf(")",i.length-e)-i.length)&&(t[0]=t[0].slice(0,e),t[2]=i.slice(0,e)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(yt,Tt).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=W[t+" "];return e||(e=new RegExp("(^|"+it+")"+t+"("+it+"|$)"))&&W(t,function(t){return e.test("string"==typeof t.className&&t.className||"undefined"!=typeof t.getAttribute&&t.getAttribute("class")||"")})},ATTR:function(t,i,n){return function(r){var s=e.attr(r,t);return null==s?"!="===i:!i||(s+="","="===i?s===n:"!="===i?s!==n:"^="===i?n&&0===s.indexOf(n):"*="===i?n&&s.indexOf(n)>-1:"$="===i?n&&s.slice(-n.length)===n:"~="===i?(" "+s.replace(ot," ")+" ").indexOf(n)>-1:"|="===i&&(s===n||s.slice(0,n.length+1)===n+"-"))}},CHILD:function(t,e,i,n,r){var s="nth"!==t.slice(0,3),o="last"!==t.slice(-4),a="of-type"===e;return 1===n&&0===r?function(t){return!!t.parentNode}:function(e,i,l){var u,h,c,f,p,d,_=s!==o?"nextSibling":"previousSibling",m=e.parentNode,g=a&&e.nodeName.toLowerCase(),v=!l&&!a,y=!1;if(m){if(s){for(;_;){for(f=e;f=f[_];)if(a?f.nodeName.toLowerCase()===g:1===f.nodeType)return!1;d=_="only"===t&&!d&&"nextSibling"}return!0}if(d=[o?m.firstChild:m.lastChild],o&&v){for(f=m,c=f[z]||(f[z]={}),h=c[f.uniqueID]||(c[f.uniqueID]={}),u=h[t]||[],p=u[0]===H&&u[1],y=p&&u[2],f=p&&m.childNodes[p];f=++p&&f&&f[_]||(y=p=0)||d.pop();)if(1===f.nodeType&&++y&&f===e){h[t]=[H,p,y];break}}else if(v&&(f=e,c=f[z]||(f[z]={}),h=c[f.uniqueID]||(c[f.uniqueID]={}),u=h[t]||[],p=u[0]===H&&u[1],y=p),y===!1)for(;(f=++p&&f&&f[_]||(y=p=0)||d.pop())&&((a?f.nodeName.toLowerCase()!==g:1!==f.nodeType)||!++y||(v&&(c=f[z]||(f[z]={}),h=c[f.uniqueID]||(c[f.uniqueID]={}),h[t]=[H,y]),f!==e)););return y-=r,y===n||y%n===0&&y/n>=0}}},PSEUDO:function(t,i){var r,s=b.pseudos[t]||b.setFilters[t.toLowerCase()]||e.error("unsupported pseudo: "+t);return s[z]?s(i):s.length>1?(r=[t,t,"",i],b.setFilters.hasOwnProperty(t.toLowerCase())?n(function(t,e){for(var n,r=s(t,i),o=r.length;o--;)n=tt(t,r[o]),t[n]=!(e[n]=r[o])}):function(t){return s(t,0,r)}):s}},pseudos:{not:n(function(t){var e=[],i=[],r=S(t.replace(at,"$1"));return r[z]?n(function(t,e,i,n){for(var s,o=r(t,null,n,[]),a=t.length;a--;)(s=o[a])&&(t[a]=!(e[a]=s))}):function(t,n,s){return e[0]=t,r(e,null,s,i),e[0]=null,!i.pop()}}),has:n(function(t){return function(i){return e(t,i).length>0}}),contains:n(function(t){return t=t.replace(yt,Tt),function(e){return(e.textContent||e.innerText||P(e)).indexOf(t)>-1}}),lang:n(function(t){return ft.test(t||"")||e.error("unsupported lang: "+t),t=t.replace(yt,Tt).toLowerCase(),function(e){var i;do if(i=M?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return i=i.toLowerCase(),i===t||0===i.indexOf(t+"-");while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var i=t.location&&t.location.hash;return i&&i.slice(1)===e.id},root:function(t){return t===L},focus:function(t){return t===E.activeElement&&(!E.hasFocus||E.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:u(!1),disabled:u(!0),checked:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&!!t.checked||"option"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,t.selected===!0},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!b.pseudos.empty(t)},header:function(t){return _t.test(t.nodeName)},input:function(t){return dt.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&"button"===t.type||"button"===e},text:function(t){var e;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(e=t.getAttribute("type"))||"text"===e.toLowerCase())},first:h(function(){return[0]}),last:h(function(t,e){return[e-1]}),eq:h(function(t,e,i){return[i<0?i+e:i]}),even:h(function(t,e){for(var i=0;i<e;i+=2)t.push(i);return t}),odd:h(function(t,e){for(var i=1;i<e;i+=2)t.push(i);return t}),lt:h(function(t,e,i){for(var n=i<0?i+e:i;--n>=0;)t.push(n);return t}),gt:h(function(t,e,i){for(var n=i<0?i+e:i;++n<e;)t.push(n);return t})}},b.pseudos.nth=b.pseudos.eq;for(x in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})b.pseudos[x]=a(x);for(x in{submit:!0,reset:!0})b.pseudos[x]=l(x);return f.prototype=b.filters=b.pseudos,b.setFilters=new f,k=e.tokenize=function(t,i){var n,r,s,o,a,l,u,h=U[t+" "];if(h)return i?0:h.slice(0);for(a=t,l=[],u=b.preFilter;a;){n&&!(r=lt.exec(a))||(r&&(a=a.slice(r[0].length)||a),l.push(s=[])),n=!1,(r=ut.exec(a))&&(n=r.shift(),s.push({value:n,type:r[0].replace(at," ")}),a=a.slice(n.length));for(o in b.filter)!(r=pt[o].exec(a))||u[o]&&!(r=u[o](r))||(n=r.shift(),s.push({value:n,type:o,matches:r}),a=a.slice(n.length));if(!n)break}return i?a.length:a?e.error(t):U(t,l).slice(0)},S=e.compile=function(t,e){var i,n=[],r=[],s=Y[t+" "];if(!s){for(e||(e=k(t)),i=e.length;i--;)s=y(e[i]),s[z]?n.push(s):r.push(s);s=Y(t,T(r,n)),s.selector=t}return s},A=e.select=function(t,e,i,n){var r,s,o,a,l,u="function"==typeof t&&t,h=!n&&k(t=u.selector||t);if(i=i||[],1===h.length){if(s=h[0]=h[0].slice(0),s.length>2&&"ID"===(o=s[0]).type&&w.getById&&9===e.nodeType&&M&&b.relative[s[1].type]){if(e=(b.find.ID(o.matches[0].replace(yt,Tt),e)||[])[0],!e)return i;u&&(e=e.parentNode),t=t.slice(s.shift().value.length)}for(r=pt.needsContext.test(t)?0:s.length;r--&&(o=s[r],!b.relative[a=o.type]);)if((l=b.find[a])&&(n=l(o.matches[0].replace(yt,Tt),vt.test(s[0].type)&&c(e.parentNode)||e))){if(s.splice(r,1),t=n.length&&p(s),!t)return Z.apply(i,n),i;break}}return(u||S(t,h))(n,e,!M,i,!e||vt.test(t)&&c(e.parentNode)||e),i},w.sortStable=z.split("").sort($).join("")===z,w.detectDuplicates=!!R,j(),w.sortDetached=r(function(t){return 1&t.compareDocumentPosition(E.createElement("fieldset"))}),r(function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")})||s("type|href|height|width",function(t,e,i){if(!i)return t.getAttribute(e,"type"===e.toLowerCase()?1:2)}),w.attributes&&r(function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")})||s("value",function(t,e,i){if(!i&&"input"===t.nodeName.toLowerCase())return t.defaultValue}),r(function(t){return null==t.getAttribute("disabled")})||s(et,function(t,e,i){var n;if(!i)return t[e]===!0?e.toLowerCase():(n=t.getAttributeNode(e))&&n.specified?n.value:null}),e}(t);ft.find=gt,ft.expr=gt.selectors,ft.expr[":"]=ft.expr.pseudos,ft.uniqueSort=ft.unique=gt.uniqueSort,ft.text=gt.getText,ft.isXMLDoc=gt.isXML,ft.contains=gt.contains,ft.escapeSelector=gt.escape;var vt=function(t,e,i){for(var n=[],r=void 0!==i;(t=t[e])&&9!==t.nodeType;)if(1===t.nodeType){if(r&&ft(t).is(i))break;n.push(t)}return n},yt=function(t,e){for(var i=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&i.push(t);return i},Tt=ft.expr.match.needsContext,xt=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i,wt=/^.[^:#\[\.,]*$/;ft.filter=function(t,e,i){var n=e[0];return i&&(t=":not("+t+")"),1===e.length&&1===n.nodeType?ft.find.matchesSelector(n,t)?[n]:[]:ft.find.matches(t,ft.grep(e,function(t){return 1===t.nodeType}))},ft.fn.extend({find:function(t){var e,i,n=this.length,r=this;if("string"!=typeof t)return this.pushStack(ft(t).filter(function(){for(e=0;e<n;e++)if(ft.contains(r[e],this))return!0}));for(i=this.pushStack([]),e=0;e<n;e++)ft.find(t,r[e],i);return n>1?ft.uniqueSort(i):i},filter:function(t){return this.pushStack(r(this,t||[],!1))},not:function(t){return this.pushStack(r(this,t||[],!0))},is:function(t){return!!r(this,"string"==typeof t&&Tt.test(t)?ft(t):t||[],!1).length}});var bt,Pt=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,Ct=ft.fn.init=function(t,e,i){var n,r;if(!t)return this;if(i=i||bt,"string"==typeof t){if(n="<"===t[0]&&">"===t[t.length-1]&&t.length>=3?[null,t,null]:Pt.exec(t),!n||!n[1]&&e)return!e||e.jquery?(e||i).find(t):this.constructor(e).find(t);if(n[1]){if(e=e instanceof ft?e[0]:e,ft.merge(this,ft.parseHTML(n[1],e&&e.nodeType?e.ownerDocument||e:J,!0)),xt.test(n[1])&&ft.isPlainObject(e))for(n in e)ft.isFunction(this[n])?this[n](e[n]):this.attr(n,e[n]);return this}return r=J.getElementById(n[2]),r&&(this[0]=r,this.length=1),this}return t.nodeType?(this[0]=t,this.length=1,this):ft.isFunction(t)?void 0!==i.ready?i.ready(t):t(ft):ft.makeArray(t,this)};Ct.prototype=ft.fn,bt=ft(J);var kt=/^(?:parents|prev(?:Until|All))/,St={children:!0,contents:!0,next:!0,prev:!0};ft.fn.extend({has:function(t){var e=ft(t,this),i=e.length;return this.filter(function(){for(var t=0;t<i;t++)if(ft.contains(this,e[t]))return!0})},closest:function(t,e){var i,n=0,r=this.length,s=[],o="string"!=typeof t&&ft(t);if(!Tt.test(t))for(;n<r;n++)for(i=this[n];i&&i!==e;i=i.parentNode)if(i.nodeType<11&&(o?o.index(i)>-1:1===i.nodeType&&ft.find.matchesSelector(i,t))){s.push(i);break}return this.pushStack(s.length>1?ft.uniqueSort(s):s)},index:function(t){return t?"string"==typeof t?rt.call(ft(t),this[0]):rt.call(this,t.jquery?t[0]:t):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){return this.pushStack(ft.uniqueSort(ft.merge(this.get(),ft(t,e))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),ft.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return vt(t,"parentNode")},parentsUntil:function(t,e,i){return vt(t,"parentNode",i)},next:function(t){return s(t,"nextSibling")},prev:function(t){return s(t,"previousSibling")},nextAll:function(t){return vt(t,"nextSibling")},prevAll:function(t){return vt(t,"previousSibling")},nextUntil:function(t,e,i){return vt(t,"nextSibling",i)},prevUntil:function(t,e,i){return vt(t,"previousSibling",i)},siblings:function(t){return yt((t.parentNode||{}).firstChild,t)},children:function(t){return yt(t.firstChild)},contents:function(t){return t.contentDocument||ft.merge([],t.childNodes)}},function(t,e){ft.fn[t]=function(i,n){var r=ft.map(this,e,i);return"Until"!==t.slice(-5)&&(n=i),n&&"string"==typeof n&&(r=ft.filter(n,r)),this.length>1&&(St[t]||ft.uniqueSort(r),kt.test(t)&&r.reverse()),this.pushStack(r)}});var At=/\S+/g;ft.Callbacks=function(t){t="string"==typeof t?o(t):ft.extend({},t);var e,i,n,r,s=[],a=[],l=-1,u=function(){for(r=t.once,n=e=!0;a.length;l=-1)for(i=a.shift();++l<s.length;)s[l].apply(i[0],i[1])===!1&&t.stopOnFalse&&(l=s.length,i=!1);t.memory||(i=!1),e=!1,r&&(s=i?[]:"")},h={add:function(){return s&&(i&&!e&&(l=s.length-1,a.push(i)),function e(i){ft.each(i,function(i,n){ft.isFunction(n)?t.unique&&h.has(n)||s.push(n):n&&n.length&&"string"!==ft.type(n)&&e(n)})}(arguments),i&&!e&&u()),this},remove:function(){return ft.each(arguments,function(t,e){for(var i;(i=ft.inArray(e,s,i))>-1;)s.splice(i,1),i<=l&&l--}),this},has:function(t){return t?ft.inArray(t,s)>-1:s.length>0},empty:function(){return s&&(s=[]),this},disable:function(){return r=a=[],s=i="",this},disabled:function(){return!s},lock:function(){return r=a=[],i||e||(s=i=""),this},locked:function(){return!!r},fireWith:function(t,i){return r||(i=i||[],i=[t,i.slice?i.slice():i],a.push(i),e||u()),this},fire:function(){return h.fireWith(this,arguments),this},fired:function(){return!!n}};return h},ft.extend({Deferred:function(e){var i=[["notify","progress",ft.Callbacks("memory"),ft.Callbacks("memory"),2],["resolve","done",ft.Callbacks("once memory"),ft.Callbacks("once memory"),0,"resolved"],["reject","fail",ft.Callbacks("once memory"),ft.Callbacks("once memory"),1,"rejected"]],n="pending",r={state:function(){return n},always:function(){return s.done(arguments).fail(arguments),this},catch:function(t){return r.then(null,t)},pipe:function(){var t=arguments;return ft.Deferred(function(e){ft.each(i,function(i,n){var r=ft.isFunction(t[n[4]])&&t[n[4]];s[n[1]](function(){var t=r&&r.apply(this,arguments);t&&ft.isFunction(t.promise)?t.promise().progress(e.notify).done(e.resolve).fail(e.reject):e[n[0]+"With"](this,r?[t]:arguments)})}),t=null}).promise()},then:function(e,n,r){function s(e,i,n,r){return function(){var u=this,h=arguments,c=function(){var t,c;if(!(e<o)){if(t=n.apply(u,h),t===i.promise())throw new TypeError("Thenable self-resolution");c=t&&("object"==typeof t||"function"==typeof t)&&t.then,ft.isFunction(c)?r?c.call(t,s(o,i,a,r),s(o,i,l,r)):(o++,c.call(t,s(o,i,a,r),s(o,i,l,r),s(o,i,a,i.notifyWith))):(n!==a&&(u=void 0,h=[t]),(r||i.resolveWith)(u,h))}},f=r?c:function(){try{c()}catch(t){ft.Deferred.exceptionHook&&ft.Deferred.exceptionHook(t,f.stackTrace),e+1>=o&&(n!==l&&(u=void 0,h=[t]),i.rejectWith(u,h))}};e?f():(ft.Deferred.getStackHook&&(f.stackTrace=ft.Deferred.getStackHook()),t.setTimeout(f))}}var o=0;return ft.Deferred(function(t){i[0][3].add(s(0,t,ft.isFunction(r)?r:a,t.notifyWith)),i[1][3].add(s(0,t,ft.isFunction(e)?e:a)),i[2][3].add(s(0,t,ft.isFunction(n)?n:l))}).promise()},promise:function(t){return null!=t?ft.extend(t,r):r}},s={};return ft.each(i,function(t,e){var o=e[2],a=e[5];r[e[1]]=o.add,a&&o.add(function(){n=a},i[3-t][2].disable,i[0][2].lock),o.add(e[3].fire),s[e[0]]=function(){return s[e[0]+"With"](this===s?void 0:this,arguments),this},s[e[0]+"With"]=o.fireWith}),r.promise(s),e&&e.call(s,s),s},when:function(t){var e=arguments.length,i=e,n=Array(i),r=et.call(arguments),s=ft.Deferred(),o=function(t){return function(i){n[t]=this,r[t]=arguments.length>1?et.call(arguments):i,--e||s.resolveWith(n,r)}};if(e<=1&&(u(t,s.done(o(i)).resolve,s.reject),"pending"===s.state()||ft.isFunction(r[i]&&r[i].then)))return s.then();for(;i--;)u(r[i],o(i),s.reject);return s.promise()}});var Dt=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;ft.Deferred.exceptionHook=function(e,i){t.console&&t.console.warn&&e&&Dt.test(e.name)&&t.console.warn("jQuery.Deferred exception: "+e.message,e.stack,i)},ft.readyException=function(e){t.setTimeout(function(){throw e})};var Ot=ft.Deferred();ft.fn.ready=function(t){return Ot.then(t).catch(function(t){ft.readyException(t);
}),this},ft.extend({isReady:!1,readyWait:1,holdReady:function(t){t?ft.readyWait++:ft.ready(!0)},ready:function(t){(t===!0?--ft.readyWait:ft.isReady)||(ft.isReady=!0,t!==!0&&--ft.readyWait>0||Ot.resolveWith(J,[ft]))}}),ft.ready.then=Ot.then,"complete"===J.readyState||"loading"!==J.readyState&&!J.documentElement.doScroll?t.setTimeout(ft.ready):(J.addEventListener("DOMContentLoaded",h),t.addEventListener("load",h));var Rt=function(t,e,i,n,r,s,o){var a=0,l=t.length,u=null==i;if("object"===ft.type(i)){r=!0;for(a in i)Rt(t,e,a,i[a],!0,s,o)}else if(void 0!==n&&(r=!0,ft.isFunction(n)||(o=!0),u&&(o?(e.call(t,n),e=null):(u=e,e=function(t,e,i){return u.call(ft(t),i)})),e))for(;a<l;a++)e(t[a],i,o?n:n.call(t[a],a,e(t[a],i)));return r?t:u?e.call(t):l?e(t[0],i):s},jt=function(t){return 1===t.nodeType||9===t.nodeType||!+t.nodeType};c.uid=1,c.prototype={cache:function(t){var e=t[this.expando];return e||(e={},jt(t)&&(t.nodeType?t[this.expando]=e:Object.defineProperty(t,this.expando,{value:e,configurable:!0}))),e},set:function(t,e,i){var n,r=this.cache(t);if("string"==typeof e)r[ft.camelCase(e)]=i;else for(n in e)r[ft.camelCase(n)]=e[n];return r},get:function(t,e){return void 0===e?this.cache(t):t[this.expando]&&t[this.expando][ft.camelCase(e)]},access:function(t,e,i){return void 0===e||e&&"string"==typeof e&&void 0===i?this.get(t,e):(this.set(t,e,i),void 0!==i?i:e)},remove:function(t,e){var i,n=t[this.expando];if(void 0!==n){if(void 0!==e){ft.isArray(e)?e=e.map(ft.camelCase):(e=ft.camelCase(e),e=e in n?[e]:e.match(At)||[]),i=e.length;for(;i--;)delete n[e[i]]}(void 0===e||ft.isEmptyObject(n))&&(t.nodeType?t[this.expando]=void 0:delete t[this.expando])}},hasData:function(t){var e=t[this.expando];return void 0!==e&&!ft.isEmptyObject(e)}};var Et=new c,Lt=new c,Mt=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Ft=/[A-Z]/g;ft.extend({hasData:function(t){return Lt.hasData(t)||Et.hasData(t)},data:function(t,e,i){return Lt.access(t,e,i)},removeData:function(t,e){Lt.remove(t,e)},_data:function(t,e,i){return Et.access(t,e,i)},_removeData:function(t,e){Et.remove(t,e)}}),ft.fn.extend({data:function(t,e){var i,n,r,s=this[0],o=s&&s.attributes;if(void 0===t){if(this.length&&(r=Lt.get(s),1===s.nodeType&&!Et.get(s,"hasDataAttrs"))){for(i=o.length;i--;)o[i]&&(n=o[i].name,0===n.indexOf("data-")&&(n=ft.camelCase(n.slice(5)),f(s,n,r[n])));Et.set(s,"hasDataAttrs",!0)}return r}return"object"==typeof t?this.each(function(){Lt.set(this,t)}):Rt(this,function(e){var i;if(s&&void 0===e){if(i=Lt.get(s,t),void 0!==i)return i;if(i=f(s,t),void 0!==i)return i}else this.each(function(){Lt.set(this,t,e)})},null,e,arguments.length>1,null,!0)},removeData:function(t){return this.each(function(){Lt.remove(this,t)})}}),ft.extend({queue:function(t,e,i){var n;if(t)return e=(e||"fx")+"queue",n=Et.get(t,e),i&&(!n||ft.isArray(i)?n=Et.access(t,e,ft.makeArray(i)):n.push(i)),n||[]},dequeue:function(t,e){e=e||"fx";var i=ft.queue(t,e),n=i.length,r=i.shift(),s=ft._queueHooks(t,e),o=function(){ft.dequeue(t,e)};"inprogress"===r&&(r=i.shift(),n--),r&&("fx"===e&&i.unshift("inprogress"),delete s.stop,r.call(t,o,s)),!n&&s&&s.empty.fire()},_queueHooks:function(t,e){var i=e+"queueHooks";return Et.get(t,i)||Et.access(t,i,{empty:ft.Callbacks("once memory").add(function(){Et.remove(t,[e+"queue",i])})})}}),ft.fn.extend({queue:function(t,e){var i=2;return"string"!=typeof t&&(e=t,t="fx",i--),arguments.length<i?ft.queue(this[0],t):void 0===e?this:this.each(function(){var i=ft.queue(this,t,e);ft._queueHooks(this,t),"fx"===t&&"inprogress"!==i[0]&&ft.dequeue(this,t)})},dequeue:function(t){return this.each(function(){ft.dequeue(this,t)})},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,e){var i,n=1,r=ft.Deferred(),s=this,o=this.length,a=function(){--n||r.resolveWith(s,[s])};for("string"!=typeof t&&(e=t,t=void 0),t=t||"fx";o--;)i=Et.get(s[o],t+"queueHooks"),i&&i.empty&&(n++,i.empty.add(a));return a(),r.promise(e)}});var Nt=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,qt=new RegExp("^(?:([+-])=|)("+Nt+")([a-z%]*)$","i"),It=["Top","Right","Bottom","Left"],zt=function(t,e){return t=e||t,"none"===t.style.display||""===t.style.display&&ft.contains(t.ownerDocument,t)&&"none"===ft.css(t,"display")},Bt=function(t,e,i,n){var r,s,o={};for(s in e)o[s]=t.style[s],t.style[s]=e[s];r=i.apply(t,n||[]);for(s in e)t.style[s]=o[s];return r},Ht={};ft.fn.extend({show:function(){return _(this,!0)},hide:function(){return _(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each(function(){zt(this)?ft(this).show():ft(this).hide()})}});var Xt=/^(?:checkbox|radio)$/i,Wt=/<([a-z][^\/\0>\x20\t\r\n\f]+)/i,Ut=/^$|\/(?:java|ecma)script/i,Yt={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};Yt.optgroup=Yt.option,Yt.tbody=Yt.tfoot=Yt.colgroup=Yt.caption=Yt.thead,Yt.th=Yt.td;var $t=/<|&#?\w+;/;!function(){var t=J.createDocumentFragment(),e=t.appendChild(J.createElement("div")),i=J.createElement("input");i.setAttribute("type","radio"),i.setAttribute("checked","checked"),i.setAttribute("name","t"),e.appendChild(i),ht.checkClone=e.cloneNode(!0).cloneNode(!0).lastChild.checked,e.innerHTML="<textarea>x</textarea>",ht.noCloneChecked=!!e.cloneNode(!0).lastChild.defaultValue}();var Vt=J.documentElement,Gt=/^key/,Qt=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Kt=/^([^.]*)(?:\.(.+)|)/;ft.event={global:{},add:function(t,e,i,n,r){var s,o,a,l,u,h,c,f,p,d,_,m=Et.get(t);if(m)for(i.handler&&(s=i,i=s.handler,r=s.selector),r&&ft.find.matchesSelector(Vt,r),i.guid||(i.guid=ft.guid++),(l=m.events)||(l=m.events={}),(o=m.handle)||(o=m.handle=function(e){return"undefined"!=typeof ft&&ft.event.triggered!==e.type?ft.event.dispatch.apply(t,arguments):void 0}),e=(e||"").match(At)||[""],u=e.length;u--;)a=Kt.exec(e[u])||[],p=_=a[1],d=(a[2]||"").split(".").sort(),p&&(c=ft.event.special[p]||{},p=(r?c.delegateType:c.bindType)||p,c=ft.event.special[p]||{},h=ft.extend({type:p,origType:_,data:n,handler:i,guid:i.guid,selector:r,needsContext:r&&ft.expr.match.needsContext.test(r),namespace:d.join(".")},s),(f=l[p])||(f=l[p]=[],f.delegateCount=0,c.setup&&c.setup.call(t,n,d,o)!==!1||t.addEventListener&&t.addEventListener(p,o)),c.add&&(c.add.call(t,h),h.handler.guid||(h.handler.guid=i.guid)),r?f.splice(f.delegateCount++,0,h):f.push(h),ft.event.global[p]=!0)},remove:function(t,e,i,n,r){var s,o,a,l,u,h,c,f,p,d,_,m=Et.hasData(t)&&Et.get(t);if(m&&(l=m.events)){for(e=(e||"").match(At)||[""],u=e.length;u--;)if(a=Kt.exec(e[u])||[],p=_=a[1],d=(a[2]||"").split(".").sort(),p){for(c=ft.event.special[p]||{},p=(n?c.delegateType:c.bindType)||p,f=l[p]||[],a=a[2]&&new RegExp("(^|\\.)"+d.join("\\.(?:.*\\.|)")+"(\\.|$)"),o=s=f.length;s--;)h=f[s],!r&&_!==h.origType||i&&i.guid!==h.guid||a&&!a.test(h.namespace)||n&&n!==h.selector&&("**"!==n||!h.selector)||(f.splice(s,1),h.selector&&f.delegateCount--,c.remove&&c.remove.call(t,h));o&&!f.length&&(c.teardown&&c.teardown.call(t,d,m.handle)!==!1||ft.removeEvent(t,p,m.handle),delete l[p])}else for(p in l)ft.event.remove(t,p+e[u],i,n,!0);ft.isEmptyObject(l)&&Et.remove(t,"handle events")}},dispatch:function(t){var e,i,n,r,s,o,a=ft.event.fix(t),l=new Array(arguments.length),u=(Et.get(this,"events")||{})[a.type]||[],h=ft.event.special[a.type]||{};for(l[0]=a,e=1;e<arguments.length;e++)l[e]=arguments[e];if(a.delegateTarget=this,!h.preDispatch||h.preDispatch.call(this,a)!==!1){for(o=ft.event.handlers.call(this,a,u),e=0;(r=o[e++])&&!a.isPropagationStopped();)for(a.currentTarget=r.elem,i=0;(s=r.handlers[i++])&&!a.isImmediatePropagationStopped();)a.rnamespace&&!a.rnamespace.test(s.namespace)||(a.handleObj=s,a.data=s.data,n=((ft.event.special[s.origType]||{}).handle||s.handler).apply(r.elem,l),void 0!==n&&(a.result=n)===!1&&(a.preventDefault(),a.stopPropagation()));return h.postDispatch&&h.postDispatch.call(this,a),a.result}},handlers:function(t,e){var i,n,r,s,o=[],a=e.delegateCount,l=t.target;if(a&&l.nodeType&&("click"!==t.type||isNaN(t.button)||t.button<1))for(;l!==this;l=l.parentNode||this)if(1===l.nodeType&&(l.disabled!==!0||"click"!==t.type)){for(n=[],i=0;i<a;i++)s=e[i],r=s.selector+" ",void 0===n[r]&&(n[r]=s.needsContext?ft(r,this).index(l)>-1:ft.find(r,this,null,[l]).length),n[r]&&n.push(s);n.length&&o.push({elem:l,handlers:n})}return a<e.length&&o.push({elem:this,handlers:e.slice(a)}),o},addProp:function(t,e){Object.defineProperty(ft.Event.prototype,t,{enumerable:!0,configurable:!0,get:ft.isFunction(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(t){return t[ft.expando]?t:new ft.Event(t)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==x()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===x()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&ft.nodeName(this,"input"))return this.click(),!1},_default:function(t){return ft.nodeName(t.target,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}}},ft.removeEvent=function(t,e,i){t.removeEventListener&&t.removeEventListener(e,i)},ft.Event=function(t,e){return this instanceof ft.Event?(t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&t.returnValue===!1?y:T,this.target=t.target&&3===t.target.nodeType?t.target.parentNode:t.target,this.currentTarget=t.currentTarget,this.relatedTarget=t.relatedTarget):this.type=t,e&&ft.extend(this,e),this.timeStamp=t&&t.timeStamp||ft.now(),void(this[ft.expando]=!0)):new ft.Event(t,e)},ft.Event.prototype={constructor:ft.Event,isDefaultPrevented:T,isPropagationStopped:T,isImmediatePropagationStopped:T,isSimulated:!1,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=y,t&&!this.isSimulated&&t.preventDefault()},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=y,t&&!this.isSimulated&&t.stopPropagation()},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=y,t&&!this.isSimulated&&t.stopImmediatePropagation(),this.stopPropagation()}},ft.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(t){var e=t.button;return null==t.which&&Gt.test(t.type)?null!=t.charCode?t.charCode:t.keyCode:!t.which&&void 0!==e&&Qt.test(t.type)?1&e?1:2&e?3:4&e?2:0:t.which}},ft.event.addProp),ft.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(t,e){ft.event.special[t]={delegateType:e,bindType:e,handle:function(t){var i,n=this,r=t.relatedTarget,s=t.handleObj;return r&&(r===n||ft.contains(n,r))||(t.type=s.origType,i=s.handler.apply(this,arguments),t.type=e),i}}}),ft.fn.extend({on:function(t,e,i,n){return w(this,t,e,i,n)},one:function(t,e,i,n){return w(this,t,e,i,n,1)},off:function(t,e,i){var n,r;if(t&&t.preventDefault&&t.handleObj)return n=t.handleObj,ft(t.delegateTarget).off(n.namespace?n.origType+"."+n.namespace:n.origType,n.selector,n.handler),this;if("object"==typeof t){for(r in t)this.off(r,e,t[r]);return this}return e!==!1&&"function"!=typeof e||(i=e,e=void 0),i===!1&&(i=T),this.each(function(){ft.event.remove(this,t,i,e)})}});var Zt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,Jt=/<script|<style|<link/i,te=/checked\s*(?:[^=]|=\s*.checked.)/i,ee=/^true\/(.*)/,ie=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;ft.extend({htmlPrefilter:function(t){return t.replace(Zt,"<$1></$2>")},clone:function(t,e,i){var n,r,s,o,a=t.cloneNode(!0),l=ft.contains(t.ownerDocument,t);if(!(ht.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||ft.isXMLDoc(t)))for(o=m(a),s=m(t),n=0,r=s.length;n<r;n++)S(s[n],o[n]);if(e)if(i)for(s=s||m(t),o=o||m(a),n=0,r=s.length;n<r;n++)k(s[n],o[n]);else k(t,a);return o=m(a,"script"),o.length>0&&g(o,!l&&m(t,"script")),a},cleanData:function(t){for(var e,i,n,r=ft.event.special,s=0;void 0!==(i=t[s]);s++)if(jt(i)){if(e=i[Et.expando]){if(e.events)for(n in e.events)r[n]?ft.event.remove(i,n):ft.removeEvent(i,n,e.handle);i[Et.expando]=void 0}i[Lt.expando]&&(i[Lt.expando]=void 0)}}}),ft.fn.extend({detach:function(t){return D(this,t,!0)},remove:function(t){return D(this,t)},text:function(t){return Rt(this,function(t){return void 0===t?ft.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=t)})},null,t,arguments.length)},append:function(){return A(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=b(this,t);e.appendChild(t)}})},prepend:function(){return A(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=b(this,t);e.insertBefore(t,e.firstChild)}})},before:function(){return A(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this)})},after:function(){return A(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)})},empty:function(){for(var t,e=0;null!=(t=this[e]);e++)1===t.nodeType&&(ft.cleanData(m(t,!1)),t.textContent="");return this},clone:function(t,e){return t=null!=t&&t,e=null==e?t:e,this.map(function(){return ft.clone(this,t,e)})},html:function(t){return Rt(this,function(t){var e=this[0]||{},i=0,n=this.length;if(void 0===t&&1===e.nodeType)return e.innerHTML;if("string"==typeof t&&!Jt.test(t)&&!Yt[(Wt.exec(t)||["",""])[1].toLowerCase()]){t=ft.htmlPrefilter(t);try{for(;i<n;i++)e=this[i]||{},1===e.nodeType&&(ft.cleanData(m(e,!1)),e.innerHTML=t);e=0}catch(t){}}e&&this.empty().append(t)},null,t,arguments.length)},replaceWith:function(){var t=[];return A(this,arguments,function(e){var i=this.parentNode;ft.inArray(this,t)<0&&(ft.cleanData(m(this)),i&&i.replaceChild(e,this))},t)}}),ft.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(t,e){ft.fn[t]=function(t){for(var i,n=[],r=ft(t),s=r.length-1,o=0;o<=s;o++)i=o===s?this:this.clone(!0),ft(r[o])[e](i),nt.apply(n,i.get());return this.pushStack(n)}});var ne=/^margin/,re=new RegExp("^("+Nt+")(?!px)[a-z%]+$","i"),se=function(e){var i=e.ownerDocument.defaultView;return i&&i.opener||(i=t),i.getComputedStyle(e)};!function(){function e(){if(a){a.style.cssText="box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",a.innerHTML="",Vt.appendChild(o);var e=t.getComputedStyle(a);i="1%"!==e.top,s="2px"===e.marginLeft,n="4px"===e.width,a.style.marginRight="50%",r="4px"===e.marginRight,Vt.removeChild(o),a=null}}var i,n,r,s,o=J.createElement("div"),a=J.createElement("div");a.style&&(a.style.backgroundClip="content-box",a.cloneNode(!0).style.backgroundClip="",ht.clearCloneStyle="content-box"===a.style.backgroundClip,o.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",o.appendChild(a),ft.extend(ht,{pixelPosition:function(){return e(),i},boxSizingReliable:function(){return e(),n},pixelMarginRight:function(){return e(),r},reliableMarginLeft:function(){return e(),s}}))}();var oe=/^(none|table(?!-c[ea]).+)/,ae={position:"absolute",visibility:"hidden",display:"block"},le={letterSpacing:"0",fontWeight:"400"},ue=["Webkit","Moz","ms"],he=J.createElement("div").style;ft.extend({cssHooks:{opacity:{get:function(t,e){if(e){var i=O(t,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{float:"cssFloat"},style:function(t,e,i,n){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var r,s,o,a=ft.camelCase(e),l=t.style;return e=ft.cssProps[a]||(ft.cssProps[a]=j(a)||a),o=ft.cssHooks[e]||ft.cssHooks[a],void 0===i?o&&"get"in o&&void 0!==(r=o.get(t,!1,n))?r:l[e]:(s=typeof i,"string"===s&&(r=qt.exec(i))&&r[1]&&(i=p(t,e,r),s="number"),void(null!=i&&i===i&&("number"===s&&(i+=r&&r[3]||(ft.cssNumber[a]?"":"px")),ht.clearCloneStyle||""!==i||0!==e.indexOf("background")||(l[e]="inherit"),o&&"set"in o&&void 0===(i=o.set(t,i,n))||(l[e]=i))))}},css:function(t,e,i,n){var r,s,o,a=ft.camelCase(e);return e=ft.cssProps[a]||(ft.cssProps[a]=j(a)||a),o=ft.cssHooks[e]||ft.cssHooks[a],o&&"get"in o&&(r=o.get(t,!0,i)),void 0===r&&(r=O(t,e,n)),"normal"===r&&e in le&&(r=le[e]),""===i||i?(s=parseFloat(r),i===!0||isFinite(s)?s||0:r):r}}),ft.each(["height","width"],function(t,e){ft.cssHooks[e]={get:function(t,i,n){if(i)return!oe.test(ft.css(t,"display"))||t.getClientRects().length&&t.getBoundingClientRect().width?M(t,e,n):Bt(t,ae,function(){return M(t,e,n)})},set:function(t,i,n){var r,s=n&&se(t),o=n&&L(t,e,n,"border-box"===ft.css(t,"boxSizing",!1,s),s);return o&&(r=qt.exec(i))&&"px"!==(r[3]||"px")&&(t.style[e]=i,i=ft.css(t,e)),E(t,i,o)}}}),ft.cssHooks.marginLeft=R(ht.reliableMarginLeft,function(t,e){if(e)return(parseFloat(O(t,"marginLeft"))||t.getBoundingClientRect().left-Bt(t,{marginLeft:0},function(){return t.getBoundingClientRect().left}))+"px"}),ft.each({margin:"",padding:"",border:"Width"},function(t,e){ft.cssHooks[t+e]={expand:function(i){for(var n=0,r={},s="string"==typeof i?i.split(" "):[i];n<4;n++)r[t+It[n]+e]=s[n]||s[n-2]||s[0];return r}},ne.test(t)||(ft.cssHooks[t+e].set=E)}),ft.fn.extend({css:function(t,e){return Rt(this,function(t,e,i){var n,r,s={},o=0;if(ft.isArray(e)){for(n=se(t),r=e.length;o<r;o++)s[e[o]]=ft.css(t,e[o],!1,n);return s}return void 0!==i?ft.style(t,e,i):ft.css(t,e)},t,e,arguments.length>1)}}),ft.Tween=F,F.prototype={constructor:F,init:function(t,e,i,n,r,s){this.elem=t,this.prop=i,this.easing=r||ft.easing._default,this.options=e,this.start=this.now=this.cur(),this.end=n,this.unit=s||(ft.cssNumber[i]?"":"px")},cur:function(){var t=F.propHooks[this.prop];return t&&t.get?t.get(this):F.propHooks._default.get(this)},run:function(t){var e,i=F.propHooks[this.prop];return this.options.duration?this.pos=e=ft.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):this.pos=e=t,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):F.propHooks._default.set(this),this}},F.prototype.init.prototype=F.prototype,F.propHooks={_default:{get:function(t){var e;return 1!==t.elem.nodeType||null!=t.elem[t.prop]&&null==t.elem.style[t.prop]?t.elem[t.prop]:(e=ft.css(t.elem,t.prop,""),e&&"auto"!==e?e:0)},set:function(t){ft.fx.step[t.prop]?ft.fx.step[t.prop](t):1!==t.elem.nodeType||null==t.elem.style[ft.cssProps[t.prop]]&&!ft.cssHooks[t.prop]?t.elem[t.prop]=t.now:ft.style(t.elem,t.prop,t.now+t.unit)}}},F.propHooks.scrollTop=F.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},ft.easing={linear:function(t){return t},swing:function(t){return.5-Math.cos(t*Math.PI)/2},_default:"swing"},ft.fx=F.prototype.init,ft.fx.step={};var ce,fe,pe=/^(?:toggle|show|hide)$/,de=/queueHooks$/;ft.Animation=ft.extend(X,{tweeners:{"*":[function(t,e){var i=this.createTween(t,e);return p(i.elem,t,qt.exec(e),i),i}]},tweener:function(t,e){ft.isFunction(t)?(e=t,t=["*"]):t=t.match(At);for(var i,n=0,r=t.length;n<r;n++)i=t[n],X.tweeners[i]=X.tweeners[i]||[],X.tweeners[i].unshift(e)},prefilters:[B],prefilter:function(t,e){e?X.prefilters.unshift(t):X.prefilters.push(t)}}),ft.speed=function(t,e,i){var n=t&&"object"==typeof t?ft.extend({},t):{complete:i||!i&&e||ft.isFunction(t)&&t,duration:t,easing:i&&e||e&&!ft.isFunction(e)&&e};return ft.fx.off||J.hidden?n.duration=0:n.duration="number"==typeof n.duration?n.duration:n.duration in ft.fx.speeds?ft.fx.speeds[n.duration]:ft.fx.speeds._default,null!=n.queue&&n.queue!==!0||(n.queue="fx"),n.old=n.complete,n.complete=function(){ft.isFunction(n.old)&&n.old.call(this),n.queue&&ft.dequeue(this,n.queue)},n},ft.fn.extend({fadeTo:function(t,e,i,n){return this.filter(zt).css("opacity",0).show().end().animate({opacity:e},t,i,n)},animate:function(t,e,i,n){var r=ft.isEmptyObject(t),s=ft.speed(e,i,n),o=function(){var e=X(this,ft.extend({},t),s);(r||Et.get(this,"finish"))&&e.stop(!0)};return o.finish=o,r||s.queue===!1?this.each(o):this.queue(s.queue,o)},stop:function(t,e,i){var n=function(t){var e=t.stop;delete t.stop,e(i)};return"string"!=typeof t&&(i=e,e=t,t=void 0),e&&t!==!1&&this.queue(t||"fx",[]),this.each(function(){var e=!0,r=null!=t&&t+"queueHooks",s=ft.timers,o=Et.get(this);if(r)o[r]&&o[r].stop&&n(o[r]);else for(r in o)o[r]&&o[r].stop&&de.test(r)&&n(o[r]);for(r=s.length;r--;)s[r].elem!==this||null!=t&&s[r].queue!==t||(s[r].anim.stop(i),e=!1,s.splice(r,1));!e&&i||ft.dequeue(this,t)})},finish:function(t){return t!==!1&&(t=t||"fx"),this.each(function(){var e,i=Et.get(this),n=i[t+"queue"],r=i[t+"queueHooks"],s=ft.timers,o=n?n.length:0;for(i.finish=!0,ft.queue(this,t,[]),r&&r.stop&&r.stop.call(this,!0),e=s.length;e--;)s[e].elem===this&&s[e].queue===t&&(s[e].anim.stop(!0),s.splice(e,1));for(e=0;e<o;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete i.finish})}}),ft.each(["toggle","show","hide"],function(t,e){var i=ft.fn[e];ft.fn[e]=function(t,n,r){return null==t||"boolean"==typeof t?i.apply(this,arguments):this.animate(I(e,!0),t,n,r)}}),ft.each({slideDown:I("show"),slideUp:I("hide"),slideToggle:I("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(t,e){ft.fn[t]=function(t,i,n){return this.animate(e,t,i,n)}}),ft.timers=[],ft.fx.tick=function(){var t,e=0,i=ft.timers;for(ce=ft.now();e<i.length;e++)t=i[e],t()||i[e]!==t||i.splice(e--,1);i.length||ft.fx.stop(),ce=void 0},ft.fx.timer=function(t){ft.timers.push(t),t()?ft.fx.start():ft.timers.pop()},ft.fx.interval=13,ft.fx.start=function(){fe||(fe=t.requestAnimationFrame?t.requestAnimationFrame(N):t.setInterval(ft.fx.tick,ft.fx.interval))},ft.fx.stop=function(){t.cancelAnimationFrame?t.cancelAnimationFrame(fe):t.clearInterval(fe),fe=null},ft.fx.speeds={slow:600,fast:200,_default:400},ft.fn.delay=function(e,i){return e=ft.fx?ft.fx.speeds[e]||e:e,i=i||"fx",this.queue(i,function(i,n){var r=t.setTimeout(i,e);n.stop=function(){t.clearTimeout(r)}})},function(){var t=J.createElement("input"),e=J.createElement("select"),i=e.appendChild(J.createElement("option"));t.type="checkbox",ht.checkOn=""!==t.value,ht.optSelected=i.selected,t=J.createElement("input"),t.value="t",t.type="radio",ht.radioValue="t"===t.value}();var _e,me=ft.expr.attrHandle;ft.fn.extend({attr:function(t,e){return Rt(this,ft.attr,t,e,arguments.length>1)},removeAttr:function(t){return this.each(function(){ft.removeAttr(this,t)})}}),ft.extend({attr:function(t,e,i){var n,r,s=t.nodeType;if(3!==s&&8!==s&&2!==s)return"undefined"==typeof t.getAttribute?ft.prop(t,e,i):(1===s&&ft.isXMLDoc(t)||(r=ft.attrHooks[e.toLowerCase()]||(ft.expr.match.bool.test(e)?_e:void 0)),void 0!==i?null===i?void ft.removeAttr(t,e):r&&"set"in r&&void 0!==(n=r.set(t,i,e))?n:(t.setAttribute(e,i+""),i):r&&"get"in r&&null!==(n=r.get(t,e))?n:(n=ft.find.attr(t,e),null==n?void 0:n))},attrHooks:{type:{set:function(t,e){if(!ht.radioValue&&"radio"===e&&ft.nodeName(t,"input")){var i=t.value;return t.setAttribute("type",e),i&&(t.value=i),e}}}},removeAttr:function(t,e){var i,n=0,r=e&&e.match(At);if(r&&1===t.nodeType)for(;i=r[n++];)t.removeAttribute(i)}}),_e={set:function(t,e,i){return e===!1?ft.removeAttr(t,i):t.setAttribute(i,i),i}},ft.each(ft.expr.match.bool.source.match(/\w+/g),function(t,e){var i=me[e]||ft.find.attr;me[e]=function(t,e,n){var r,s,o=e.toLowerCase();return n||(s=me[o],me[o]=r,r=null!=i(t,e,n)?o:null,me[o]=s),r}});var ge=/^(?:input|select|textarea|button)$/i,ve=/^(?:a|area)$/i;ft.fn.extend({prop:function(t,e){return Rt(this,ft.prop,t,e,arguments.length>1)},removeProp:function(t){return this.each(function(){delete this[ft.propFix[t]||t]})}}),ft.extend({prop:function(t,e,i){var n,r,s=t.nodeType;if(3!==s&&8!==s&&2!==s)return 1===s&&ft.isXMLDoc(t)||(e=ft.propFix[e]||e,r=ft.propHooks[e]),void 0!==i?r&&"set"in r&&void 0!==(n=r.set(t,i,e))?n:t[e]=i:r&&"get"in r&&null!==(n=r.get(t,e))?n:t[e]},propHooks:{tabIndex:{get:function(t){var e=ft.find.attr(t,"tabindex");return e?parseInt(e,10):ge.test(t.nodeName)||ve.test(t.nodeName)&&t.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),ht.optSelected||(ft.propHooks.selected={get:function(t){var e=t.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(t){var e=t.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),ft.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){ft.propFix[this.toLowerCase()]=this});var ye=/[\t\r\n\f]/g;ft.fn.extend({addClass:function(t){var e,i,n,r,s,o,a,l=0;if(ft.isFunction(t))return this.each(function(e){ft(this).addClass(t.call(this,e,W(this)))});if("string"==typeof t&&t)for(e=t.match(At)||[];i=this[l++];)if(r=W(i),n=1===i.nodeType&&(" "+r+" ").replace(ye," ")){for(o=0;s=e[o++];)n.indexOf(" "+s+" ")<0&&(n+=s+" ");a=ft.trim(n),r!==a&&i.setAttribute("class",a)}return this},removeClass:function(t){var e,i,n,r,s,o,a,l=0;if(ft.isFunction(t))return this.each(function(e){ft(this).removeClass(t.call(this,e,W(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof t&&t)for(e=t.match(At)||[];i=this[l++];)if(r=W(i),n=1===i.nodeType&&(" "+r+" ").replace(ye," ")){for(o=0;s=e[o++];)for(;n.indexOf(" "+s+" ")>-1;)n=n.replace(" "+s+" "," ");a=ft.trim(n),r!==a&&i.setAttribute("class",a)}return this},toggleClass:function(t,e){var i=typeof t;return"boolean"==typeof e&&"string"===i?e?this.addClass(t):this.removeClass(t):ft.isFunction(t)?this.each(function(i){ft(this).toggleClass(t.call(this,i,W(this),e),e)}):this.each(function(){var e,n,r,s;if("string"===i)for(n=0,r=ft(this),s=t.match(At)||[];e=s[n++];)r.hasClass(e)?r.removeClass(e):r.addClass(e);else void 0!==t&&"boolean"!==i||(e=W(this),e&&Et.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||t===!1?"":Et.get(this,"__className__")||""))})},hasClass:function(t){var e,i,n=0;for(e=" "+t+" ";i=this[n++];)if(1===i.nodeType&&(" "+W(i)+" ").replace(ye," ").indexOf(e)>-1)return!0;return!1}});var Te=/\r/g,xe=/[\x20\t\r\n\f]+/g;ft.fn.extend({val:function(t){var e,i,n,r=this[0];return arguments.length?(n=ft.isFunction(t),this.each(function(i){var r;1===this.nodeType&&(r=n?t.call(this,i,ft(this).val()):t,null==r?r="":"number"==typeof r?r+="":ft.isArray(r)&&(r=ft.map(r,function(t){return null==t?"":t+""})),e=ft.valHooks[this.type]||ft.valHooks[this.nodeName.toLowerCase()],e&&"set"in e&&void 0!==e.set(this,r,"value")||(this.value=r))})):r?(e=ft.valHooks[r.type]||ft.valHooks[r.nodeName.toLowerCase()],e&&"get"in e&&void 0!==(i=e.get(r,"value"))?i:(i=r.value,"string"==typeof i?i.replace(Te,""):null==i?"":i)):void 0}}),ft.extend({valHooks:{option:{get:function(t){var e=ft.find.attr(t,"value");return null!=e?e:ft.trim(ft.text(t)).replace(xe," ")}},select:{get:function(t){for(var e,i,n=t.options,r=t.selectedIndex,s="select-one"===t.type,o=s?null:[],a=s?r+1:n.length,l=r<0?a:s?r:0;l<a;l++)if(i=n[l],(i.selected||l===r)&&!i.disabled&&(!i.parentNode.disabled||!ft.nodeName(i.parentNode,"optgroup"))){if(e=ft(i).val(),s)return e;o.push(e)}return o},set:function(t,e){for(var i,n,r=t.options,s=ft.makeArray(e),o=r.length;o--;)n=r[o],(n.selected=ft.inArray(ft.valHooks.option.get(n),s)>-1)&&(i=!0);return i||(t.selectedIndex=-1),s}}}}),ft.each(["radio","checkbox"],function(){ft.valHooks[this]={set:function(t,e){if(ft.isArray(e))return t.checked=ft.inArray(ft(t).val(),e)>-1}},ht.checkOn||(ft.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})});var we=/^(?:focusinfocus|focusoutblur)$/;ft.extend(ft.event,{trigger:function(e,i,n,r){var s,o,a,l,u,h,c,f=[n||J],p=at.call(e,"type")?e.type:e,d=at.call(e,"namespace")?e.namespace.split("."):[];if(o=a=n=n||J,3!==n.nodeType&&8!==n.nodeType&&!we.test(p+ft.event.triggered)&&(p.indexOf(".")>-1&&(d=p.split("."),p=d.shift(),d.sort()),u=p.indexOf(":")<0&&"on"+p,e=e[ft.expando]?e:new ft.Event(p,"object"==typeof e&&e),e.isTrigger=r?2:3,e.namespace=d.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+d.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=n),i=null==i?[e]:ft.makeArray(i,[e]),c=ft.event.special[p]||{},r||!c.trigger||c.trigger.apply(n,i)!==!1)){if(!r&&!c.noBubble&&!ft.isWindow(n)){for(l=c.delegateType||p,we.test(l+p)||(o=o.parentNode);o;o=o.parentNode)f.push(o),a=o;a===(n.ownerDocument||J)&&f.push(a.defaultView||a.parentWindow||t)}for(s=0;(o=f[s++])&&!e.isPropagationStopped();)e.type=s>1?l:c.bindType||p,h=(Et.get(o,"events")||{})[e.type]&&Et.get(o,"handle"),h&&h.apply(o,i),h=u&&o[u],h&&h.apply&&jt(o)&&(e.result=h.apply(o,i),e.result===!1&&e.preventDefault());return e.type=p,r||e.isDefaultPrevented()||c._default&&c._default.apply(f.pop(),i)!==!1||!jt(n)||u&&ft.isFunction(n[p])&&!ft.isWindow(n)&&(a=n[u],a&&(n[u]=null),ft.event.triggered=p,n[p](),ft.event.triggered=void 0,a&&(n[u]=a)),e.result}},simulate:function(t,e,i){var n=ft.extend(new ft.Event,i,{type:t,isSimulated:!0});ft.event.trigger(n,null,e)}}),ft.fn.extend({trigger:function(t,e){return this.each(function(){ft.event.trigger(t,e,this)})},triggerHandler:function(t,e){var i=this[0];if(i)return ft.event.trigger(t,e,i,!0)}}),ft.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(t,e){ft.fn[e]=function(t,i){return arguments.length>0?this.on(e,null,t,i):this.trigger(e)}}),ft.fn.extend({hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)}}),ht.focusin="onfocusin"in t,ht.focusin||ft.each({focus:"focusin",blur:"focusout"},function(t,e){var i=function(t){ft.event.simulate(e,t.target,ft.event.fix(t))};ft.event.special[e]={setup:function(){var n=this.ownerDocument||this,r=Et.access(n,e);r||n.addEventListener(t,i,!0),Et.access(n,e,(r||0)+1)},teardown:function(){var n=this.ownerDocument||this,r=Et.access(n,e)-1;r?Et.access(n,e,r):(n.removeEventListener(t,i,!0),Et.remove(n,e))}}});var be=t.location,Pe=ft.now(),Ce=/\?/;ft.parseXML=function(e){var i;if(!e||"string"!=typeof e)return null;try{i=(new t.DOMParser).parseFromString(e,"text/xml")}catch(t){i=void 0}return i&&!i.getElementsByTagName("parsererror").length||ft.error("Invalid XML: "+e),i};var ke=/\[\]$/,Se=/\r?\n/g,Ae=/^(?:submit|button|image|reset|file)$/i,De=/^(?:input|select|textarea|keygen)/i;ft.param=function(t,e){var i,n=[],r=function(t,e){var i=ft.isFunction(e)?e():e;n[n.length]=encodeURIComponent(t)+"="+encodeURIComponent(null==i?"":i)};if(ft.isArray(t)||t.jquery&&!ft.isPlainObject(t))ft.each(t,function(){r(this.name,this.value)});else for(i in t)U(i,t[i],e,r);return n.join("&")},ft.fn.extend({serialize:function(){return ft.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var t=ft.prop(this,"elements");return t?ft.makeArray(t):this}).filter(function(){var t=this.type;return this.name&&!ft(this).is(":disabled")&&De.test(this.nodeName)&&!Ae.test(t)&&(this.checked||!Xt.test(t))}).map(function(t,e){var i=ft(this).val();return null==i?null:ft.isArray(i)?ft.map(i,function(t){return{name:e.name,value:t.replace(Se,"\r\n")}}):{name:e.name,value:i.replace(Se,"\r\n")}}).get()}});var Oe=/%20/g,Re=/#.*$/,je=/([?&])_=[^&]*/,Ee=/^(.*?):[ \t]*([^\r\n]*)$/gm,Le=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Me=/^(?:GET|HEAD)$/,Fe=/^\/\//,Ne={},qe={},Ie="*/".concat("*"),ze=J.createElement("a");
ze.href=be.href,ft.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:be.href,type:"GET",isLocal:Le.test(be.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Ie,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":ft.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,e){return e?V(V(t,ft.ajaxSettings),e):V(ft.ajaxSettings,t)},ajaxPrefilter:Y(Ne),ajaxTransport:Y(qe),ajax:function(e,i){function n(e,i,n,a){var u,f,p,T,x,w=i;h||(h=!0,l&&t.clearTimeout(l),r=void 0,o=a||"",b.readyState=e>0?4:0,u=e>=200&&e<300||304===e,n&&(T=G(d,b,n)),T=Q(d,T,b,u),u?(d.ifModified&&(x=b.getResponseHeader("Last-Modified"),x&&(ft.lastModified[s]=x),x=b.getResponseHeader("etag"),x&&(ft.etag[s]=x)),204===e||"HEAD"===d.type?w="nocontent":304===e?w="notmodified":(w=T.state,f=T.data,p=T.error,u=!p)):(p=w,!e&&w||(w="error",e<0&&(e=0))),b.status=e,b.statusText=(i||w)+"",u?g.resolveWith(_,[f,w,b]):g.rejectWith(_,[b,w,p]),b.statusCode(y),y=void 0,c&&m.trigger(u?"ajaxSuccess":"ajaxError",[b,d,u?f:p]),v.fireWith(_,[b,w]),c&&(m.trigger("ajaxComplete",[b,d]),--ft.active||ft.event.trigger("ajaxStop")))}"object"==typeof e&&(i=e,e=void 0),i=i||{};var r,s,o,a,l,u,h,c,f,p,d=ft.ajaxSetup({},i),_=d.context||d,m=d.context&&(_.nodeType||_.jquery)?ft(_):ft.event,g=ft.Deferred(),v=ft.Callbacks("once memory"),y=d.statusCode||{},T={},x={},w="canceled",b={readyState:0,getResponseHeader:function(t){var e;if(h){if(!a)for(a={};e=Ee.exec(o);)a[e[1].toLowerCase()]=e[2];e=a[t.toLowerCase()]}return null==e?null:e},getAllResponseHeaders:function(){return h?o:null},setRequestHeader:function(t,e){return null==h&&(t=x[t.toLowerCase()]=x[t.toLowerCase()]||t,T[t]=e),this},overrideMimeType:function(t){return null==h&&(d.mimeType=t),this},statusCode:function(t){var e;if(t)if(h)b.always(t[b.status]);else for(e in t)y[e]=[y[e],t[e]];return this},abort:function(t){var e=t||w;return r&&r.abort(e),n(0,e),this}};if(g.promise(b),d.url=((e||d.url||be.href)+"").replace(Fe,be.protocol+"//"),d.type=i.method||i.type||d.method||d.type,d.dataTypes=(d.dataType||"*").toLowerCase().match(At)||[""],null==d.crossDomain){u=J.createElement("a");try{u.href=d.url,u.href=u.href,d.crossDomain=ze.protocol+"//"+ze.host!=u.protocol+"//"+u.host}catch(t){d.crossDomain=!0}}if(d.data&&d.processData&&"string"!=typeof d.data&&(d.data=ft.param(d.data,d.traditional)),$(Ne,d,i,b),h)return b;c=ft.event&&d.global,c&&0===ft.active++&&ft.event.trigger("ajaxStart"),d.type=d.type.toUpperCase(),d.hasContent=!Me.test(d.type),s=d.url.replace(Re,""),d.hasContent?d.data&&d.processData&&0===(d.contentType||"").indexOf("application/x-www-form-urlencoded")&&(d.data=d.data.replace(Oe,"+")):(p=d.url.slice(s.length),d.data&&(s+=(Ce.test(s)?"&":"?")+d.data,delete d.data),d.cache===!1&&(s=s.replace(je,""),p=(Ce.test(s)?"&":"?")+"_="+Pe++ +p),d.url=s+p),d.ifModified&&(ft.lastModified[s]&&b.setRequestHeader("If-Modified-Since",ft.lastModified[s]),ft.etag[s]&&b.setRequestHeader("If-None-Match",ft.etag[s])),(d.data&&d.hasContent&&d.contentType!==!1||i.contentType)&&b.setRequestHeader("Content-Type",d.contentType),b.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+("*"!==d.dataTypes[0]?", "+Ie+"; q=0.01":""):d.accepts["*"]);for(f in d.headers)b.setRequestHeader(f,d.headers[f]);if(d.beforeSend&&(d.beforeSend.call(_,b,d)===!1||h))return b.abort();if(w="abort",v.add(d.complete),b.done(d.success),b.fail(d.error),r=$(qe,d,i,b)){if(b.readyState=1,c&&m.trigger("ajaxSend",[b,d]),h)return b;d.async&&d.timeout>0&&(l=t.setTimeout(function(){b.abort("timeout")},d.timeout));try{h=!1,r.send(T,n)}catch(t){if(h)throw t;n(-1,t)}}else n(-1,"No Transport");return b},getJSON:function(t,e,i){return ft.get(t,e,i,"json")},getScript:function(t,e){return ft.get(t,void 0,e,"script")}}),ft.each(["get","post"],function(t,e){ft[e]=function(t,i,n,r){return ft.isFunction(i)&&(r=r||n,n=i,i=void 0),ft.ajax(ft.extend({url:t,type:e,dataType:r,data:i,success:n},ft.isPlainObject(t)&&t))}}),ft._evalUrl=function(t){return ft.ajax({url:t,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,throws:!0})},ft.fn.extend({wrapAll:function(t){var e;return this[0]&&(ft.isFunction(t)&&(t=t.call(this[0])),e=ft(t,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var t=this;t.firstElementChild;)t=t.firstElementChild;return t}).append(this)),this},wrapInner:function(t){return ft.isFunction(t)?this.each(function(e){ft(this).wrapInner(t.call(this,e))}):this.each(function(){var e=ft(this),i=e.contents();i.length?i.wrapAll(t):e.append(t)})},wrap:function(t){var e=ft.isFunction(t);return this.each(function(i){ft(this).wrapAll(e?t.call(this,i):t)})},unwrap:function(t){return this.parent(t).not("body").each(function(){ft(this).replaceWith(this.childNodes)}),this}}),ft.expr.pseudos.hidden=function(t){return!ft.expr.pseudos.visible(t)},ft.expr.pseudos.visible=function(t){return!!(t.offsetWidth||t.offsetHeight||t.getClientRects().length)},ft.ajaxSettings.xhr=function(){try{return new t.XMLHttpRequest}catch(t){}};var Be={0:200,1223:204},He=ft.ajaxSettings.xhr();ht.cors=!!He&&"withCredentials"in He,ht.ajax=He=!!He,ft.ajaxTransport(function(e){var i,n;if(ht.cors||He&&!e.crossDomain)return{send:function(r,s){var o,a=e.xhr();if(a.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(o in e.xhrFields)a[o]=e.xhrFields[o];e.mimeType&&a.overrideMimeType&&a.overrideMimeType(e.mimeType),e.crossDomain||r["X-Requested-With"]||(r["X-Requested-With"]="XMLHttpRequest");for(o in r)a.setRequestHeader(o,r[o]);i=function(t){return function(){i&&(i=n=a.onload=a.onerror=a.onabort=a.onreadystatechange=null,"abort"===t?a.abort():"error"===t?"number"!=typeof a.status?s(0,"error"):s(a.status,a.statusText):s(Be[a.status]||a.status,a.statusText,"text"!==(a.responseType||"text")||"string"!=typeof a.responseText?{binary:a.response}:{text:a.responseText},a.getAllResponseHeaders()))}},a.onload=i(),n=a.onerror=i("error"),void 0!==a.onabort?a.onabort=n:a.onreadystatechange=function(){4===a.readyState&&t.setTimeout(function(){i&&n()})},i=i("abort");try{a.send(e.hasContent&&e.data||null)}catch(t){if(i)throw t}},abort:function(){i&&i()}}}),ft.ajaxPrefilter(function(t){t.crossDomain&&(t.contents.script=!1)}),ft.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(t){return ft.globalEval(t),t}}}),ft.ajaxPrefilter("script",function(t){void 0===t.cache&&(t.cache=!1),t.crossDomain&&(t.type="GET")}),ft.ajaxTransport("script",function(t){if(t.crossDomain){var e,i;return{send:function(n,r){e=ft("<script>").prop({charset:t.scriptCharset,src:t.url}).on("load error",i=function(t){e.remove(),i=null,t&&r("error"===t.type?404:200,t.type)}),J.head.appendChild(e[0])},abort:function(){i&&i()}}}});var Xe=[],We=/(=)\?(?=&|$)|\?\?/;ft.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var t=Xe.pop()||ft.expando+"_"+Pe++;return this[t]=!0,t}}),ft.ajaxPrefilter("json jsonp",function(e,i,n){var r,s,o,a=e.jsonp!==!1&&(We.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&We.test(e.data)&&"data");if(a||"jsonp"===e.dataTypes[0])return r=e.jsonpCallback=ft.isFunction(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,a?e[a]=e[a].replace(We,"$1"+r):e.jsonp!==!1&&(e.url+=(Ce.test(e.url)?"&":"?")+e.jsonp+"="+r),e.converters["script json"]=function(){return o||ft.error(r+" was not called"),o[0]},e.dataTypes[0]="json",s=t[r],t[r]=function(){o=arguments},n.always(function(){void 0===s?ft(t).removeProp(r):t[r]=s,e[r]&&(e.jsonpCallback=i.jsonpCallback,Xe.push(r)),o&&ft.isFunction(s)&&s(o[0]),o=s=void 0}),"script"}),ht.createHTMLDocument=function(){var t=J.implementation.createHTMLDocument("").body;return t.innerHTML="<form></form><form></form>",2===t.childNodes.length}(),ft.parseHTML=function(t,e,i){if("string"!=typeof t)return[];"boolean"==typeof e&&(i=e,e=!1);var n,r,s;return e||(ht.createHTMLDocument?(e=J.implementation.createHTMLDocument(""),n=e.createElement("base"),n.href=J.location.href,e.head.appendChild(n)):e=J),r=xt.exec(t),s=!i&&[],r?[e.createElement(r[1])]:(r=v([t],e,s),s&&s.length&&ft(s).remove(),ft.merge([],r.childNodes))},ft.fn.load=function(t,e,i){var n,r,s,o=this,a=t.indexOf(" ");return a>-1&&(n=ft.trim(t.slice(a)),t=t.slice(0,a)),ft.isFunction(e)?(i=e,e=void 0):e&&"object"==typeof e&&(r="POST"),o.length>0&&ft.ajax({url:t,type:r||"GET",dataType:"html",data:e}).done(function(t){s=arguments,o.html(n?ft("<div>").append(ft.parseHTML(t)).find(n):t)}).always(i&&function(t,e){o.each(function(){i.apply(this,s||[t.responseText,e,t])})}),this},ft.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(t,e){ft.fn[e]=function(t){return this.on(e,t)}}),ft.expr.pseudos.animated=function(t){return ft.grep(ft.timers,function(e){return t===e.elem}).length},ft.offset={setOffset:function(t,e,i){var n,r,s,o,a,l,u,h=ft.css(t,"position"),c=ft(t),f={};"static"===h&&(t.style.position="relative"),a=c.offset(),s=ft.css(t,"top"),l=ft.css(t,"left"),u=("absolute"===h||"fixed"===h)&&(s+l).indexOf("auto")>-1,u?(n=c.position(),o=n.top,r=n.left):(o=parseFloat(s)||0,r=parseFloat(l)||0),ft.isFunction(e)&&(e=e.call(t,i,ft.extend({},a))),null!=e.top&&(f.top=e.top-a.top+o),null!=e.left&&(f.left=e.left-a.left+r),"using"in e?e.using.call(t,f):c.css(f)}},ft.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){ft.offset.setOffset(this,t,e)});var e,i,n,r,s=this[0];return s?s.getClientRects().length?(n=s.getBoundingClientRect(),n.width||n.height?(r=s.ownerDocument,i=K(r),e=r.documentElement,{top:n.top+i.pageYOffset-e.clientTop,left:n.left+i.pageXOffset-e.clientLeft}):n):{top:0,left:0}:void 0},position:function(){if(this[0]){var t,e,i=this[0],n={top:0,left:0};return"fixed"===ft.css(i,"position")?e=i.getBoundingClientRect():(t=this.offsetParent(),e=this.offset(),ft.nodeName(t[0],"html")||(n=t.offset()),n={top:n.top+ft.css(t[0],"borderTopWidth",!0),left:n.left+ft.css(t[0],"borderLeftWidth",!0)}),{top:e.top-n.top-ft.css(i,"marginTop",!0),left:e.left-n.left-ft.css(i,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var t=this.offsetParent;t&&"static"===ft.css(t,"position");)t=t.offsetParent;return t||Vt})}}),ft.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,e){var i="pageYOffset"===e;ft.fn[t]=function(n){return Rt(this,function(t,n,r){var s=K(t);return void 0===r?s?s[e]:t[n]:void(s?s.scrollTo(i?s.pageXOffset:r,i?r:s.pageYOffset):t[n]=r)},t,n,arguments.length)}}),ft.each(["top","left"],function(t,e){ft.cssHooks[e]=R(ht.pixelPosition,function(t,i){if(i)return i=O(t,e),re.test(i)?ft(t).position()[e]+"px":i})}),ft.each({Height:"height",Width:"width"},function(t,e){ft.each({padding:"inner"+t,content:e,"":"outer"+t},function(i,n){ft.fn[n]=function(r,s){var o=arguments.length&&(i||"boolean"!=typeof r),a=i||(r===!0||s===!0?"margin":"border");return Rt(this,function(e,i,r){var s;return ft.isWindow(e)?0===n.indexOf("outer")?e["inner"+t]:e.document.documentElement["client"+t]:9===e.nodeType?(s=e.documentElement,Math.max(e.body["scroll"+t],s["scroll"+t],e.body["offset"+t],s["offset"+t],s["client"+t])):void 0===r?ft.css(e,i,a):ft.style(e,i,r,a)},e,o?r:void 0,o)}})}),ft.fn.extend({bind:function(t,e,i){return this.on(t,null,e,i)},unbind:function(t,e){return this.off(t,null,e)},delegate:function(t,e,i,n){return this.on(e,t,i,n)},undelegate:function(t,e,i){return 1===arguments.length?this.off(t,"**"):this.off(e,t||"**",i)}}),ft.parseJSON=JSON.parse,"function"==typeof define&&define.amd&&define("jquery",[],function(){return ft});var Ue=t.jQuery,Ye=t.$;return ft.noConflict=function(e){return t.$===ft&&(t.$=Ye),e&&t.jQuery===ft&&(t.jQuery=Ue),ft},e||(t.jQuery=t.$=ft),ft})},{}],16:[function(t,e,i){"use strict";var n=t("./libs/barba.min.js"),r=t("./libs/jquery/dist/jquery.min.js");r(function(){var e=t("./pageTransition.js"),i=t("./animHeader.js"),s=t("./animTop.js"),o=t("./animSkills.js"),a=t("./portfolioItemsAnimation.js"),l=t("./animSkillsHover.js"),u=t("./animYearABout.js"),h=t("./animTextABout.js"),c=(r(window).width(),r(window).height()),f=r(document).scrollTop(),p=r("body"),d=r("html"),_=r("#header"),m=r("#skillsHome"),g=m.length?m.offset().top-100:0;if(d.removeClass("no-js").addClass("js"),"CSS"in window&&"supports"in window.CSS){var v=window.CSS.supports("mix-blend-mode","soft-light");v=v?"mix-blend-mode":"no-mix-blend-mode",r("html").addClass(v)}i(f,p,_,m);var y=o(f,p,_,m);m.data("top",g);var T,x,w=s(f,p,_,m),b=r(".dashes >span"),P=new TimelineMax({paused:!0}),C=new TimelineMax({paused:!0}),k=r(".wrapper-waves"),S=r(".waves"),A=new TimelineMax({paused:!0}),D=new TimelineMax({paused:!0}),O=r(".wrapper-zigzags"),R=r(".zigzags"),j=new TimelineMax({paused:!0}),E=new TimelineMax({paused:!0}),L=r(".slashes >span"),M=new TimelineMax({paused:!0}),F=new TimelineMax({paused:!0}),N=r(".dots >span"),q=new TimelineMax({paused:!0}),I=new TimelineMax({paused:!0}),z=0;b.length&&(P.staggerTo(b,.35,{opacity:1,y:0,ease:Back.easeOut.config(5)},.06),P.play(),z=-36,x=b.closest(".symbol").find(".hoverAnimation"),C.to(x,.2,{scaleX:1.5,ease:Quad.easeIn}),C.to(x,.3,{scaleX:1,x:z,ease:Quad.easeOut})),k.length&&(A.to(k,2,{width:"130%"}),A.to(S,.8,{scaleY:1,ease:Back.easeOut.config(5)},0),A.play(),z=-17,x=k.closest(".symbol").find(".hoverAnimation"),D.to(x,.2,{scaleX:1.5,ease:Quad.easeIn}),D.to(x,.3,{scaleX:1,x:z,ease:Quad.easeOut})),O.length&&(j.to(O,2,{width:"130%"}),j.to(R,.8,{scaleY:1,ease:Back.easeOut.config(5)},0),j.play(),z=-19,x=O.closest(".symbol").find(".hoverAnimation"),E.to(x,.2,{scaleX:1.5,ease:Quad.easeIn}),E.to(x,.3,{scaleX:1,x:z,ease:Quad.easeOut})),L.length&&(M.staggerTo(L,.35,{opacity:1,scaleY:1,ease:Back.easeOut.config(5)},.06),M.play(),z=-33,x=L.closest(".symbol").find(".hoverAnimation"),F.to(x,.2,{scaleX:1.5,ease:Quad.easeIn}),F.to(x,.3,{scaleX:1,x:z,ease:Quad.easeOut})),N.length&&(q.staggerTo(N,.35,{opacity:1,y:0,ease:Back.easeOut.config(5)},.06),q.play(),z=-35,x=N.closest(".symbol").find(".hoverAnimation"),I.to(x,.2,{scaleX:1.5,ease:Quad.easeIn}),I.to(x,.3,{scaleX:1,x:z,ease:Quad.easeOut})),r(".skill").on("mouseenter",function(){T=r(this).data("skill"),"strategy"==T?C.progress(0).tweenTo(C.duration()):"identity"==T?D.progress(0).tweenTo(D.duration()):"design"==T?E.progress(0).tweenTo(E.duration()):"animation"==T?F.progress(0).tweenTo(F.duration()):"dev"==T&&I.progress(0).tweenTo(I.duration())}).on("mouseleave",function(){x=r(this).find(".hoverAnimation"),TweenMax.to(x,.3,{scaleX:1,x:0})});var B=n.BaseView.extend({namespace:"home",onEnter:function(){m=r("#skillsHome"),g=m.offset().top-100,m.data("top",g)},onEnterCompleted:function(){var t=r("#portfolio").find(".portfolio-item");w||(w=s(f,p,_,m)),y||(y=o(f,p,_,m)),a(f,c,t),l(p)},onLeave:function(){},onLeaveCompleted:function(){}});B.init();var H=n.BaseView.extend({namespace:"about",onEnter:function(){},onEnterCompleted:function(){u(f),h(),p.on("click","#openTxtAbout",function(t){t.preventDefault(),r("#fadeTxtAbout").toggleClass("on"),r(this).parents(".fade-txt-wrapper").toggleClass("off")})},onLeave:function(){},onLeaveCompleted:function(){}});H.init();n.Pjax.start(),n.Dispatcher.on("linkClicked",function(t){n.Pjax.getTransition=function(){return e(t)}}),r(window).on("resize",function(){m.length&&!m.hasClass("fixed")&&(g=m.offset().top-100,m.data("top",g))}).on("load",function(){})})},{"./animHeader.js":1,"./animSkills.js":2,"./animSkillsHover.js":3,"./animTextABout.js":4,"./animTop.js":5,"./animYearABout.js":6,"./libs/barba.min.js":10,"./libs/jquery/dist/jquery.min.js":15,"./pageTransition.js":17,"./portfolioItemsAnimation.js":18}],17:[function(t,e,i){var n=t("./libs/barba.min.js"),r=t("./libs/jquery/dist/jquery.min.js"),s=t("./libs/gsap/src/uncompressed/TweenMax.js"),o=t("./libs/gsap/src/uncompressed/TimelineMax.js");e.exports=function(t){return n.BaseTransition.extend({start:function(){Promise.all([this.newContainerLoading,this.fadeOut()]).then(this.fadeIn.bind(this))},fadeOut:function(){var e;return new Promise(function(i,n){e=new o({onComplete:function(){i(!0)}}),r(t).find("h2").prepend('<span class="bg-transition"></span>');var a=r(t).find("h2").offset().left,l=r(window).width()-a-r(t).find("h2").outerWidth();e.to(r(".portfolio-item .bg-img"),0,{opacity:0,ease:Power4.easeOut}),e.set(r(t).find(".bg"),{className:"+=transi"}),e.set(r(t).find(".bg-transition"),{left:-a+"px",right:-l+"px",scaleX:0,scaleY:1});var u=new s.to(r(t).find(".bg-transition"),.4,{scaleX:1,scaleY:1.05,ease:Power4.easeOut}),h=new s.to(r(t).find(".logo"),.2,{y:40,opacity:0,ease:Linear.easeNone}),c=new s.to([r(t).find("time"),r(t).find(".title")],.4,{x:60,opacity:0,ease:Circ.easeOut}),f=new s.to(r(t).find(".border-left"),.4,{scaleY:0,ease:Circ.easeOut}),p=new s.to(r(t).find(".border-middle"),.4,{scaleX:0,ease:Circ.easeOut});e.add([u,h,c,f,p])})},fadeIn:function(){var t,e=this,i=r(this.newContainer);tpsTransitionFadeIn=.3,t=new o({onComplete:function(){e.done()}}),t.set(r("body"),{className:"-="+r(this.oldContainer).data("class")}),t.set(r("body"),{className:"+="+i.data("class")}),t.set(i,{visibility:"visible",opacity:0,onComplete:function(){r(document).scrollTop(0)}}),t.set(i,{opacity:1});var n=new s.to(r(".bgPortfolio"),.5,{scaleY:1,ease:Power4.easeOut}),a=new s.to(r(".bgPagePortfolio"),.5,{scaleY:1,ease:Power4.easeOut}),l=new s.to(r(".portfolio-text h1"),.5,{y:0,opacity:1,ease:Circ.easeOut}),u=new s.to([r(".portfolio-cover")],.5,{x:0,opacity:1,ease:Power4.easeOut,delay:.3});t.add([n,a,l,u]),t.set(r("#header"),{className:"+= bgVisible"});var h=new s.to([r(".portfolio-text p")],.3,{y:0,opacity:1,ease:Power4.easeOut});t.add([h]),t.staggerTo([r(".portfolio-role p"),r(".portfolio-role a")],.5,{y:0,opacity:1,ease:Circ.easeOut},.1),r(this.oldContainer).hide()}})}},{"./libs/barba.min.js":10,"./libs/gsap/src/uncompressed/TimelineMax.js":11,"./libs/gsap/src/uncompressed/TweenMax.js":13,"./libs/jquery/dist/jquery.min.js":15}],18:[function(t,e,i){var n=t("./libs/jquery/dist/jquery.min.js"),r=t("./libs/gsap/src/uncompressed/TweenMax.js"),s=t("./sinusoid.js"),o=t("./getPosWithoutTranslate.js");e.exports=function(t,e,i){var a,l,u,h,c,f=200,p=.6,d=t;!function _(){t=n(document).scrollTop(),t!==d&&(e=n(window).height(),windowWidth=n(window).width(),i.each(function(i){if(l=o(n(this)),u=n(this).find("h2"),thisDesc=n(this).find(".wrapper-desc"),l>=t+e-f)a=(l-t-e+f)*p|0,r.to(thisDesc,1,{opacity:0});else if(l<=t+f)a=(l-t-f)*p|0,r.to(thisDesc,1,{opacity:0});else{a=0;r.to(thisDesc,1,{opacity:1})}h=n(this).position().top+t,c=windowWidth>780?s(150,0,h,50):0,r.to(u,.1,{y:a,x:c})})),d=t,requestAnimFrame(_)}();new TimelineMax;n(".portfolio-item").on("mouseenter",function(){r.set(n(this).find(".wrapper-bloc"),{css:{rotation:"0.01deg",z:.01,force3D:!0}}),r.to([n(this).find(".bg"),n(this).find(".wrapper-bg-img")],.5,{css:{scale:1.05,rotation:"0.01deg",z:.01,force3D:!0},ease:Quad.easeInOut}),r.to(n(this).find(".bg-img"),.5,{css:{opacity:.3,scale:1,rotation:"0.01deg",z:.01,force3D:!0},ease:Quad.easeInOut})}).on("mouseleave",function(){r.set(n(this).find(".wrapper-bloc"),{css:{clearProps:"rotation",force3D:!0}}),r.to([n(this).find(".bg"),n(this).find(".wrapper-bg-img")],.5,{css:{scale:1,rotation:"0.01deg",z:.01,force3D:!0},ease:Quad.easeInOut}),r.to(n(this).find(".bg-img"),.5,{css:{opacity:.15,scale:1.05,rotation:"0.01deg",z:.01,force3D:!0},ease:Quad.easeInOut})})}},{"./getPosWithoutTranslate.js":8,"./libs/gsap/src/uncompressed/TweenMax.js":13,"./libs/jquery/dist/jquery.min.js":15,"./sinusoid.js":20}],19:[function(t,e,i){e.exports=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(t){window.setTimeout(t,1e3/60)}}()},{}],20:[function(t,e,i){t("./libs/jquery/dist/jquery.min.js");e.exports=function(t,e,i,n){var r=e+n*Math.sin(i/t);return r}},{"./libs/jquery/dist/jquery.min.js":15}],21:[function(t,e,i){e.exports=function(t){var e=t.split(",").map(function(t){return t});return e}},{}]},{},[16]);
//# sourceMappingURL=data:application/json;base64,
>>>>>>> 75fbd66fe3491bf872d4aba43b9092f7c4ed00be
